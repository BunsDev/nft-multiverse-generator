{"id":"c616c3b6acc9d0da4524654485b2a578","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {IFunctionsRouter} from \"./interfaces/IFunctionsRouter.sol\";\nimport {IFunctionsClient} from \"./interfaces/IFunctionsClient.sol\";\n\nimport {FunctionsRequest} from \"./libraries/FunctionsRequest.sol\";\n\n/// @title The Chainlink Functions client contract\n/// @notice Contract developers can inherit this contract in order to make Chainlink Functions requests\nabstract contract FunctionsClient is IFunctionsClient {\n  using FunctionsRequest for FunctionsRequest.Request;\n\n  IFunctionsRouter internal immutable i_router;\n\n  event RequestSent(bytes32 indexed id);\n  event RequestFulfilled(bytes32 indexed id);\n\n  error OnlyRouterCanFulfill();\n\n  constructor(address router) {\n    i_router = IFunctionsRouter(router);\n  }\n\n  /// @notice Sends a Chainlink Functions request\n  /// @param data The CBOR encoded bytes data for a Functions request\n  /// @param subscriptionId The subscription ID that will be charged to service the request\n  /// @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n  /// @return requestId The generated request ID for this request\n  function _sendRequest(\n    bytes memory data,\n    uint64 subscriptionId,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) internal returns (bytes32) {\n    bytes32 requestId = i_router.sendRequest(\n      subscriptionId,\n      data,\n      FunctionsRequest.REQUEST_DATA_VERSION,\n      callbackGasLimit,\n      donId\n    );\n    emit RequestSent(requestId);\n    return requestId;\n  }\n\n  /// @notice User defined function to handle a response from the DON\n  /// @param requestId The request ID, returned by sendRequest()\n  /// @param response Aggregated response from the execution of the user's source code\n  /// @param err Aggregated error from the execution of the user code or from the execution pipeline\n  /// @dev Either response or error parameter will be set, but never both\n  function fulfillRequest(bytes32 requestId, bytes memory response, bytes memory err) internal virtual;\n\n  /// @inheritdoc IFunctionsClient\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external override {\n    if (msg.sender != address(i_router)) {\n      revert OnlyRouterCanFulfill();\n    }\n    fulfillRequest(requestId, response, err);\n    emit RequestFulfilled(requestId);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Chainlink Functions client interface.\ninterface IFunctionsClient {\n  /// @notice Chainlink Functions response handler called by the Functions Router\n  /// during fullilment from the designated transmitter node in an OCR round.\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\n  /// @param response Aggregated response from the request's source code.\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\n  /// @dev Either response or error parameter will be set, but never both.\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {FunctionsResponse} from \"../libraries/FunctionsResponse.sol\";\n\n/// @title Chainlink Functions Router interface.\ninterface IFunctionsRouter {\n  /// @notice The identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  /// @return id - bytes32 id that can be passed to the \"getContractById\" of the Router\n  function getAllowListId() external view returns (bytes32);\n\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  function setAllowListId(bytes32 allowListId) external;\n\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n  /// @return adminFee\n  function getAdminFee() external view returns (uint72 adminFee);\n\n  /// @notice Sends a request using the provided subscriptionId\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequest(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Sends a request to the proposed contracts\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequestToProposed(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Fulfill the request by:\n  /// - calling back the data that the Oracle returned to the client contract\n  /// - pay the DON for processing the request\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\n  /// @param response response data from DON consensus\n  /// @param err error from DON consensus\n  /// @param juelsPerGas - current rate of juels/gas\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n  /// @param transmitter - The Node that transmitted the OCR report\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\n  /// @return fulfillResult -\n  /// @return callbackGasCostJuels -\n  function fulfill(\n    bytes memory response,\n    bytes memory err,\n    uint96 juelsPerGas,\n    uint96 costWithoutFulfillment,\n    address transmitter,\n    FunctionsResponse.Commitment memory commitment\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\n\n  /// @notice Validate requested gas limit is below the subscription max.\n  /// @param subscriptionId subscription ID\n  /// @param callbackGasLimit desired callback gas limit\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\n\n  /// @notice Get the current contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current contract address\n  function getContractById(bytes32 id) external view returns (address);\n\n  /// @notice Get the proposed next contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current or proposed contract address\n  function getProposedContractById(bytes32 id) external view returns (address);\n\n  /// @notice Return the latest proprosal set\n  /// @return ids The identifiers of the contracts to update\n  /// @return to The addresses of the contracts that will be updated to\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\n\n  /// @notice Proposes one or more updates to the contract routes\n  /// @dev Only callable by owner\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\n\n  /// @notice Updates the current contract routes to the proposed contracts\n  /// @dev Only callable by owner\n  function updateContracts() external;\n\n  /// @dev Puts the system into an emergency stopped state.\n  /// @dev Only callable by owner\n  function pause() external;\n\n  /// @dev Takes the system out of an emergency stopped state.\n  /// @dev Only callable by owner\n  function unpause() external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {CBOR} from \"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\";\n\n/// @title Library for encoding the input data of a Functions request into CBOR\nlibrary FunctionsRequest {\n  using CBOR for CBOR.CBORBuffer;\n\n  uint16 public constant REQUEST_DATA_VERSION = 1;\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\n\n  enum Location {\n    Inline, // Provided within the Request\n    Remote, // Hosted through remote location that can be accessed through a provided URL\n    DONHosted // Hosted on the DON's storage\n  }\n\n  enum CodeLanguage {\n    JavaScript\n    // In future version we may add other languages\n  }\n\n  struct Request {\n    Location codeLocation; // ════════════╸ The location of the source code that will be executed on each node in the DON\n    Location secretsLocation; // ═════════╸ The location of secrets that will be passed into the source code. *Only Remote secrets are supported\n    CodeLanguage language; // ════════════╸ The coding language that the source code is written in\n    string source; // ════════════════════╸ Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\n    bytes encryptedSecretsReference; // ══╸ Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\n    string[] args; // ════════════════════╸ String arguments that will be passed into the source code\n    bytes[] bytesArgs; // ════════════════╸ Bytes arguments that will be passed into the source code\n  }\n\n  error EmptySource();\n  error EmptySecrets();\n  error EmptyArgs();\n  error NoInlineSecrets();\n\n  /// @notice Encodes a Request to CBOR encoded bytes\n  /// @param self The request to encode\n  /// @return CBOR encoded bytes\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"codeLocation\");\n    buffer.writeUInt256(uint256(self.codeLocation));\n\n    buffer.writeString(\"language\");\n    buffer.writeUInt256(uint256(self.language));\n\n    buffer.writeString(\"source\");\n    buffer.writeString(self.source);\n\n    if (self.args.length > 0) {\n      buffer.writeString(\"args\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.args.length; ++i) {\n        buffer.writeString(self.args[i]);\n      }\n      buffer.endSequence();\n    }\n\n    if (self.encryptedSecretsReference.length > 0) {\n      if (self.secretsLocation == Location.Inline) {\n        revert NoInlineSecrets();\n      }\n      buffer.writeString(\"secretsLocation\");\n      buffer.writeUInt256(uint256(self.secretsLocation));\n      buffer.writeString(\"secrets\");\n      buffer.writeBytes(self.encryptedSecretsReference);\n    }\n\n    if (self.bytesArgs.length > 0) {\n      buffer.writeString(\"bytesArgs\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\n        buffer.writeBytes(self.bytesArgs[i]);\n      }\n      buffer.endSequence();\n    }\n\n    return buffer.buf.buf;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Sets the codeLocation and code on the request\n  /// @param self The uninitialized request\n  /// @param codeLocation The user provided source code location\n  /// @param language The programming language of the user code\n  /// @param source The user provided source code or a url\n  function initializeRequest(\n    Request memory self,\n    Location codeLocation,\n    CodeLanguage language,\n    string memory source\n  ) internal pure {\n    if (bytes(source).length == 0) revert EmptySource();\n\n    self.codeLocation = codeLocation;\n    self.language = language;\n    self.source = source;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Simplified version of initializeRequest for PoC\n  /// @param self The uninitialized request\n  /// @param javaScriptSource The user provided JS code (must not be empty)\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\n  }\n\n  /// @notice Adds Remote user encrypted secrets to a Request\n  /// @param self The initialized request\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\n\n    self.secretsLocation = Location.Remote;\n    self.encryptedSecretsReference = encryptedSecretsReference;\n  }\n\n  /// @notice Adds DON-hosted secrets reference to a Request\n  /// @param self The initialized request\n  /// @param slotID Slot ID of the user's secrets hosted on DON\n  /// @param version User data version (for the slotID)\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"slotID\");\n    buffer.writeUInt64(slotID);\n    buffer.writeString(\"version\");\n    buffer.writeUInt64(version);\n\n    self.secretsLocation = Location.DONHosted;\n    self.encryptedSecretsReference = buffer.buf.buf;\n  }\n\n  /// @notice Sets args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of string args (must not be empty)\n  function setArgs(Request memory self, string[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.args = args;\n  }\n\n  /// @notice Sets bytes args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of bytes args (must not be empty)\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.bytesArgs = args;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Library of types that are used for fulfillment of a Functions request\nlibrary FunctionsResponse {\n  // Used to send request information from the Router to the Coordinator\n  struct RequestMeta {\n    bytes data; // ══════════════════╸ CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\n    bytes32 flags; // ═══════════════╸ Per-subscription flags\n    address requestingContract; // ══╗ The client contract that is sending the request\n    uint96 availableBalance; // ═════╝ Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\n    uint72 adminFee; // ═════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint64 subscriptionId; //        ║ Identifier of the billing subscription that will be charged for the request\n    uint64 initiatedRequests; //     ║ The number of requests that have been started\n    uint32 callbackGasLimit; //      ║ The amount of gas that the callback to the consuming contract will be given\n    uint16 dataVersion; // ══════════╝ The version of the structure of the CBOR encoded request data\n    uint64 completedRequests; // ════╗ The number of requests that have successfully completed or timed out\n    address subscriptionOwner; // ═══╝ The owner of the billing subscription\n  }\n\n  enum FulfillResult {\n    FULFILLED, // 0\n    USER_CALLBACK_ERROR, // 1\n    INVALID_REQUEST_ID, // 2\n    COST_EXCEEDS_COMMITMENT, // 3\n    INSUFFICIENT_GAS_PROVIDED, // 4\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\n    INVALID_COMMITMENT // 6\n  }\n\n  struct Commitment {\n    bytes32 requestId; // ═════════════════╸ A unique identifier for a Chainlink Functions request\n    address coordinator; // ═══════════════╗ The Coordinator contract that manages the DON that is servicing a request\n    uint96 estimatedTotalCostJuels; // ════╝ The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\n    address client; // ════════════════════╗ The client contract that sent the request\n    uint64 subscriptionId; //              ║ Identifier of the billing subscription that will be charged for the request\n    uint32 callbackGasLimit; // ═══════════╝ The amount of gas that the callback to the consuming contract will be given\n    uint72 adminFee; // ═══════════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint72 donFee; //                      ║ Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\n    uint40 gasOverheadBeforeCallback; //   ║ Represents the average gas execution cost before the fulfillment callback.\n    uint40 gasOverheadAfterCallback; //    ║ Represents the average gas execution cost after the fulfillment callback.\n    uint32 timeoutTimestamp; // ═══════════╝ The timestamp at which a request will be eligible to be timed out\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"content":"// SPDX-License-Identifier: BSD-2-Clause\npragma solidity ^0.8.4;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for appending to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            let fpm := add(32, add(ptr, capacity))\n            if lt(fpm, ptr) {\n                revert(0, 0)\n            }\n            mstore(0x40, fpm)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        uint off = buf.buf.length;\n        uint newCapacity = off + len;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(newCapacity, buflen) {\n                mstore(bufptr, newCapacity)\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        unchecked {\n            uint mask = (256 ** (32 - len)) - 1;\n            assembly {\n                let srcpart := and(mload(src), not(mask))\n                let destpart := and(mload(dest), mask)\n                mstore(dest, or(destpart, srcpart))\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return append(buf, data, data.length);\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint offPlusOne = off + 1;\n        if (off >= buf.capacity) {\n            resize(buf, offPlusOne * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if gt(offPlusOne, mload(bufptr)) {\n                mstore(bufptr, offPlusOne)\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        unchecked {\n            uint mask = (256 ** len) - 1;\n            // Right-align data\n            data = data >> (8 * (32 - len));\n            assembly {\n                // Memory address of the buffer data\n                let bufptr := mload(buf)\n                // Address = buffer address + sizeof(buffer length) + newCapacity\n                let dest := add(bufptr, newCapacity)\n                mstore(dest, or(and(mload(dest), not(mask)), data))\n                // Update buffer length if we extended it\n                if gt(newCapacity, mload(bufptr)) {\n                    mstore(bufptr, newCapacity)\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return append(buf, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return append(buf, data, 32);\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     *      exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @param len The number of bytes to write (right-aligned).\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint mask = (256 ** len) - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + newCapacity\n            let dest := add(bufptr, newCapacity)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(newCapacity, mload(bufptr)) {\n                mstore(bufptr, newCapacity)\n            }\n        }\n        return buf;\n    }\n}"},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../../@ensdomains/buffer/v0.1.0/Buffer.sol\";\n\n/**\n* @dev A library for populating CBOR encoded payload in Solidity.\n*\n* https://datatracker.ietf.org/doc/html/rfc7049\n*\n* The library offers various write* and start* methods to encode values of different types.\n* The resulted buffer can be obtained with data() method.\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\n* in an invalid CBOR if start/write/end flow is violated.\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\n* except for nested start/end pairs.\n*/\n\nlibrary CBOR {\n    using Buffer for Buffer.buffer;\n\n    struct CBORBuffer {\n        Buffer.buffer buf;\n        uint256 depth;\n    }\n\n    uint8 private constant MAJOR_TYPE_INT = 0;\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\n    uint8 private constant MAJOR_TYPE_STRING = 3;\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\n    uint8 private constant MAJOR_TYPE_MAP = 5;\n    uint8 private constant MAJOR_TYPE_TAG = 6;\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n    uint8 private constant CBOR_FALSE = 20;\n    uint8 private constant CBOR_TRUE = 21;\n    uint8 private constant CBOR_NULL = 22;\n    uint8 private constant CBOR_UNDEFINED = 23;\n\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\n        Buffer.init(cbor.buf, capacity);\n        cbor.depth = 0;\n        return cbor;\n    }\n\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\n        require(buf.depth == 0, \"Invalid CBOR\");\n        return buf.buf.buf;\n    }\n\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n        writeBytes(buf, abi.encode(value));\n    }\n\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\n        if (value < 0) {\n            buf.buf.appendUint8(\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\n            );\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\n        } else {\n            writeUInt256(buf, uint256(value));\n        }\n    }\n\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\n    }\n\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\n        if(value >= 0) {\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\n        } else{\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\n        }\n    }\n\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\n        buf.buf.append(value);\n    }\n\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\n        buf.buf.append(bytes(value));\n    }\n\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\n    }\n\n    function writeNull(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_NULL);\n    }\n\n    function writeUndefined(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_UNDEFINED);\n    }\n\n    function startArray(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n        buf.depth += 1;\n    }\n\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\n    }\n\n    function startMap(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n        buf.depth += 1;\n    }\n\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\n    }\n\n    function endSequence(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n        buf.depth -= 1;\n    }\n\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\n        writeString(buf, key);\n        writeString(buf, value);\n    }\n\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\n        writeString(buf, key);\n        writeBytes(buf, value);\n    }\n\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\n        writeString(buf, key);\n        writeUInt256(buf, value);\n    }\n\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\n        writeString(buf, key);\n        writeInt256(buf, value);\n    }\n\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\n        writeString(buf, key);\n        writeUInt64(buf, value);\n    }\n\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\n        writeString(buf, key);\n        writeInt64(buf, value);\n    }\n\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\n        writeString(buf, key);\n        writeBool(buf, value);\n    }\n\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeNull(buf);\n    }\n\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeUndefined(buf);\n    }\n\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startMap(buf);\n    }\n\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startArray(buf);\n    }\n\n    function writeFixedNumeric(\n        CBORBuffer memory buf,\n        uint8 major,\n        uint64 value\n    ) private pure {\n        if (value <= 23) {\n            buf.buf.appendUint8(uint8((major << 5) | value));\n        } else if (value <= 0xFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 24));\n            buf.buf.appendInt(value, 1);\n        } else if (value <= 0xFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 25));\n            buf.buf.appendInt(value, 2);\n        } else if (value <= 0xFFFFFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 26));\n            buf.buf.appendInt(value, 4);\n        } else {\n            buf.buf.appendUint8(uint8((major << 5) | 27));\n            buf.buf.appendInt(value, 8);\n        }\n    }\n\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\n        private\n        pure\n    {\n        buf.buf.appendUint8(uint8((major << 5) | 31));\n    }\n\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\n        private\n        pure\n    {\n        writeFixedNumeric(buf, major, length);\n    }\n\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\n    }\n}"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"},"contracts/ChainlinkMultiverse.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport {FunctionsClient} from \"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\";\nimport {ConfirmedOwner} from \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\";\nimport {FunctionsRequest} from \"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\";\n\nimport {VRFConsumerBaseV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\n\ncontract EnterTheChainlinkMultiverse is FunctionsClient, VRFConsumerBaseV2Plus {\n    using FunctionsRequest for FunctionsRequest.Request;\n\n    struct RequestStatus {\n        bool fulfilled;\n        bool exists;\n        uint256[] randomWords;\n    }\n\n    struct MultiverseFunctionRequest {\n        address userWallet;\n        bool isPending;\n    }\n\n    /** CHAINLINK SHARED VARIABLES */\n\n    uint64 public subscriptionId = 67;\n\n    /** CHAINLINK FUNCTIONS VARIABLES */\n\n    string[] public multiverseApiSources;\n\n    mapping(bytes32 => MultiverseFunctionRequest) public requestIdPending;\n\n    mapping(address => string) public userToRequestResult;\n\n    // Arbitrum sepolia router: 0x234a5fb5Bd614a7AA2FfAB244D603abFA0Ac5C5C\n    address public router = 0x234a5fb5Bd614a7AA2FfAB244D603abFA0Ac5C5C;\n\n    // Arbitrum Sepolia DON id : 0x66756e2d617262697472756d2d7365706f6c69612d3100000000000000000000\n    bytes32 donId =\n        0x66756e2d617262697472756d2d7365706f6c69612d3100000000000000000000;\n\n    uint32 public gasLimit = 300000;\n\n    bytes32 public s_lastRequestId;\n\n    bytes public s_lastResponse;\n\n    bytes public s_lastError;\n\n    string public result;\n\n    /** CHAINLINK VRF VARIABLES */\n\n    mapping(uint256 => RequestStatus) public s_requests;\n\n    bytes32 public keyHash =\n        0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\n\n    uint16 public requestConfirmations = 1;\n\n    uint32 public numWords = 1;\n\n    uint256[] public requestIds;\n\n    uint256 public lastRequestId;\n\n    uint32 public callbackGasLimit = 100000;\n\n    address public arbitrumSepoliaVRF =\n        0x50d47e4142598E3411aA864e08a44284e471AC6f;\n\n    /** CHAINLINK FUNCTIONS EVENTS */\n\n    /** CHAINLINK VRF EVENTS */\n\n    event RequestSent(uint256 requestId, uint32 numWords);\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords);\n\n    /** ERRORS */\n\n    error UnexpectedRequestID(bytes32 requestId);\n\n    string public pokesource =\n        \"const pokiURL = `https://pokeapi.co/api/v2/pokemon`;const hpURL = `https://wizard-world-api.herokuapp.com/Houses`;const pokemonCharacter = 1;console.log(`Sending HTTP request to ${pokiURL}/${pokemonCharacter}/`);const pokiRequest = Functions.makeHttpRequest({url: `${pokiURL}/${pokemonCharacter}`,method: `GET`,});const hpRequest = Functions.makeHttpRequest({url: hpURL,method: `GET`,});const pokiResponse = await pokiRequest;const hpResponse = await hpRequest;const reqData = pokiResponse.data;const hpData = hpResponse.data;const myData = {pokemonType: reqData.types[0].type.name,pokemonName: reqData.species.name,pokemonImage: reqData.sprites.other.home.front_default,};return Functions.encodeString(JSON.stringify(myData));\";\n\n    constructor()\n        FunctionsClient(router)\n        VRFConsumerBaseV2Plus(arbitrumSepoliaVRF)\n    {}\n\n    function updatePokeSource(string memory s) public onlyOwner {\n        pokesource = s;\n    }\n\n    function makeRandomRequest() public onlyOwner returns (uint256 requestId) {\n        requestId = s_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n                keyHash: keyHash,\n                subId: subscriptionId,\n                requestConfirmations: requestConfirmations,\n                callbackGasLimit: callbackGasLimit,\n                numWords: numWords,\n                extraArgs: VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: false})\n                )\n            })\n        );\n        s_requests[requestId] = RequestStatus({\n            randomWords: new uint256[](0),\n            exists: true,\n            fulfilled: false\n        });\n        requestIds.push(requestId);\n        lastRequestId = requestId;\n        emit RequestSent(requestId, numWords);\n        return requestId;\n    }\n\n    function sendRequest(\n        address userWallet\n    ) external onlyOwner returns (bytes32 requestId) {\n        FunctionsRequest.Request memory req;\n        req.initializeRequestForInlineJavaScript(pokesource);\n\n        s_lastRequestId = _sendRequest(\n            req.encodeCBOR(),\n            subscriptionId,\n            gasLimit,\n            donId\n        );\n        requestIdPending[s_lastRequestId] = MultiverseFunctionRequest({\n            userWallet: userWallet,\n            isPending: true\n        });\n        return s_lastRequestId;\n    }\n\n    function fulfillRequest(\n        bytes32 requestId,\n        bytes memory response,\n        bytes memory err\n    ) internal override {\n        require(\n            requestIdPending[requestId].isPending == true,\n            \"Invalid request id\"\n        );\n        s_lastError = err;\n        requestIdPending[requestId].isPending = false;\n        s_lastResponse = response;\n        result = string(response);\n        userToRequestResult[requestIdPending[requestId].userWallet] = result;\n    }\n\n    function fulfillRandomWords(\n        uint256 requestId,\n        uint256[] calldata randomWords\n    ) internal override {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","exportedSymbols":{"FunctionsClient":[117],"FunctionsRequest":[728],"IFunctionsClient":[131],"IFunctionsRouter":[265]},"id":118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","file":"./interfaces/IFunctionsRouter.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":266,"src":"58:67:0","symbolAliases":[{"foreign":{"id":2,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"66:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","file":"./interfaces/IFunctionsClient.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":132,"src":"126:67:0","symbolAliases":[{"foreign":{"id":4,"name":"IFunctionsClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"134:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"./libraries/FunctionsRequest.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":729,"src":"195:66:0","symbolAliases":[{"foreign":{"id":6,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"203:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"IFunctionsClient","nameLocations":["455:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"455:16:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"455:16:0"}],"canonicalName":"FunctionsClient","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"263:155:0","text":"@title The Chainlink Functions client contract\n @notice Contract developers can inherit this contract in order to make Chainlink Functions requests"},"fullyImplemented":false,"id":117,"linearizedBaseContracts":[117,131],"name":"FunctionsClient","nameLocation":"436:15:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":14,"libraryName":{"id":11,"name":"FunctionsRequest","nameLocations":["482:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"482:16:0"},"nodeType":"UsingForDirective","src":"476:52:0","typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"FunctionsRequest.Request","nameLocations":["503:16:0","520:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"503:24:0"},"referencedDeclaration":306,"src":"503:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"constant":false,"id":17,"mutability":"immutable","name":"i_router","nameLocation":"568:8:0","nodeType":"VariableDeclaration","scope":117,"src":"532:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"},"typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"IFunctionsRouter","nameLocations":["532:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":265,"src":"532:16:0"},"referencedDeclaration":265,"src":"532:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8","id":21,"name":"RequestSent","nameLocation":"587:11:0","nodeType":"EventDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"615:2:0","nodeType":"VariableDeclaration","scope":21,"src":"599:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"598:20:0"},"src":"581:38:0"},{"anonymous":false,"eventSelector":"85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6","id":25,"name":"RequestFulfilled","nameLocation":"628:16:0","nodeType":"EventDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"661:2:0","nodeType":"VariableDeclaration","scope":25,"src":"645:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"645:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"644:20:0"},"src":"622:43:0"},{"errorSelector":"c6829f83","id":27,"name":"OnlyRouterCanFulfill","nameLocation":"675:20:0","nodeType":"ErrorDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"695:2:0"},"src":"669:29:0"},{"body":{"id":38,"nodeType":"Block","src":"730:46:0","statements":[{"expression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":32,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"736:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":34,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"764:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":33,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"747:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFunctionsRouter_$265_$","typeString":"type(contract IFunctionsRouter)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"747:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"src":"736:35:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"id":37,"nodeType":"ExpressionStatement","src":"736:35:0"}]},"id":39,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"router","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":39,"src":"714:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:16:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"730:0:0"},"scope":117,"src":"702:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":71,"nodeType":"Block","src":"1309:228:0","statements":[{"assignments":[54],"declarations":[{"constant":false,"id":54,"mutability":"mutable","name":"requestId","nameLocation":"1323:9:0","nodeType":"VariableDeclaration","scope":71,"src":"1315:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1315:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":64,"initialValue":{"arguments":[{"id":57,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1363:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":58,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"1385:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":59,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1397:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FunctionsRequest_$728_$","typeString":"type(library FunctionsRequest)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1414:20:0","memberName":"REQUEST_DATA_VERSION","nodeType":"MemberAccess","referencedDeclaration":277,"src":"1397:37:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":61,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1442:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":62,"name":"donId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1466:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":55,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1335:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1344:11:0","memberName":"sendRequest","nodeType":"MemberAccess","referencedDeclaration":170,"src":"1335:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint64_$_t_bytes_memory_ptr_$_t_uint16_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint64,bytes memory,uint16,uint32,bytes32) external returns (bytes32)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1335:142:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1315:162:0"},{"eventCall":{"arguments":[{"id":66,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1500:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":65,"name":"RequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"1488:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":68,"nodeType":"EmitStatement","src":"1483:27:0"},{"expression":{"id":69,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1523:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":52,"id":70,"nodeType":"Return","src":"1516:16:0"}]},"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"780:375:0","text":"@notice Sends a Chainlink Functions request\n @param data The CBOR encoded bytes data for a Functions request\n @param subscriptionId The subscription ID that will be charged to service the request\n @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n @return requestId The generated request ID for this request"},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_sendRequest","nameLocation":"1167:12:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"data","nameLocation":"1198:4:0","nodeType":"VariableDeclaration","scope":72,"src":"1185:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41,"name":"bytes","nodeType":"ElementaryTypeName","src":"1185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"subscriptionId","nameLocation":"1215:14:0","nodeType":"VariableDeclaration","scope":72,"src":"1208:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":43,"name":"uint64","nodeType":"ElementaryTypeName","src":"1208:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1242:16:0","nodeType":"VariableDeclaration","scope":72,"src":"1235:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":45,"name":"uint32","nodeType":"ElementaryTypeName","src":"1235:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"donId","nameLocation":"1272:5:0","nodeType":"VariableDeclaration","scope":72,"src":"1264:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1179:102:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"1300:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1299:9:0"},"scope":117,"src":"1158:379:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1541:394:0","text":"@notice User defined function to handle a response from the DON\n @param requestId The request ID, returned by sendRequest()\n @param response Aggregated response from the execution of the user's source code\n @param err Aggregated error from the execution of the user code or from the execution pipeline\n @dev Either response or error parameter will be set, but never both"},"id":82,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRequest","nameLocation":"1947:14:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"requestId","nameLocation":"1970:9:0","nodeType":"VariableDeclaration","scope":82,"src":"1962:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":74,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"response","nameLocation":"1994:8:0","nodeType":"VariableDeclaration","scope":82,"src":"1981:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"1981:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"err","nameLocation":"2017:3:0","nodeType":"VariableDeclaration","scope":82,"src":"2004:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"2004:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1961:60:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"2038:0:0"},"scope":117,"src":"1938:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[130],"body":{"id":115,"nodeType":"Block","src":"2189:175:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":93,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2199:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2199:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":97,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2221:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}],"id":96,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2213:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:0","typeDescriptions":{}}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2199:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":104,"nodeType":"IfStatement","src":"2195:81:0","trueBody":{"id":103,"nodeType":"Block","src":"2232:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":100,"name":"OnlyRouterCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2247:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"RevertStatement","src":"2240:29:0"}]}},{"expression":{"arguments":[{"id":106,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2296:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":107,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2307:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":108,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2317:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":105,"name":"fulfillRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2281:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory,bytes memory)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"2281:40:0"},{"eventCall":{"arguments":[{"id":112,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2349:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":111,"name":"RequestFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2332:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":114,"nodeType":"EmitStatement","src":"2327:32:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2043:32:0","text":"@inheritdoc IFunctionsClient"},"functionSelector":"0ca76175","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"2087:23:0","nodeType":"FunctionDefinition","overrides":{"id":91,"nodeType":"OverrideSpecifier","overrides":[],"src":"2180:8:0"},"parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":116,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":84,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"response","nameLocation":"2143:8:0","nodeType":"VariableDeclaration","scope":116,"src":"2130:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"2130:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"err","nameLocation":"2166:3:0","nodeType":"VariableDeclaration","scope":116,"src":"2153:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:60:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[],"src":"2189:0:0"},"scope":117,"src":"2078:286:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":118,"src":"418:1948:0","usedErrors":[27],"usedEvents":[21,25]}],"src":"32:2335:0"},"id":0},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","exportedSymbols":{"IFunctionsClient":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":119,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsClient","contractDependencies":[],"contractKind":"interface","documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"58:49:1","text":"@title Chainlink Functions client interface."},"fullyImplemented":false,"id":131,"linearizedBaseContracts":[131],"name":"IFunctionsClient","nameLocation":"117:16:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"138:490:1","text":"@notice Chainlink Functions response handler called by the Functions Router\n during fullilment from the designated transmitter node in an OCR round.\n @param requestId The requestId returned by FunctionsClient.sendRequest().\n @param response Aggregated response from the request's source code.\n @param err Aggregated error either from the request's source code or from the execution pipeline.\n @dev Either response or error parameter will be set, but never both."},"functionSelector":"0ca76175","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"640:23:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"requestId","nameLocation":"672:9:1","nodeType":"VariableDeclaration","scope":130,"src":"664:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"response","nameLocation":"696:8:1","nodeType":"VariableDeclaration","scope":130,"src":"683:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":124,"name":"bytes","nodeType":"ElementaryTypeName","src":"683:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"err","nameLocation":"719:3:1","nodeType":"VariableDeclaration","scope":130,"src":"706:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"706:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"663:60:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"732:0:1"},"scope":131,"src":"631:102:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":132,"src":"107:628:1","usedErrors":[],"usedEvents":[]}],"src":"32:704:1"},"id":1},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","exportedSymbols":{"FunctionsResponse":[786],"IFunctionsRouter":[265]},"id":266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","file":"../libraries/FunctionsResponse.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":266,"sourceUnit":787,"src":"58:69:2","symbolAliases":[{"foreign":{"id":134,"name":"FunctionsResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"66:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"129:49:2","text":"@title Chainlink Functions Router interface."},"fullyImplemented":false,"id":265,"linearizedBaseContracts":[265],"name":"IFunctionsRouter","nameLocation":"188:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"209:265:2","text":"@notice The identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions\n @return id - bytes32 id that can be passed to the \"getContractById\" of the Router"},"functionSelector":"aab396bd","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"getAllowListId","nameLocation":"486:14:2","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"500:2:2"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"526:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"526:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"525:9:2"},"scope":265,"src":"477:58:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"539:181:2","text":"@notice Set the identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions"},"functionSelector":"ea320e0b","id":148,"implemented":false,"kind":"function","modifiers":[],"name":"setAllowListId","nameLocation":"732:14:2","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"allowListId","nameLocation":"755:11:2","nodeType":"VariableDeclaration","scope":148,"src":"747:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"746:21:2"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"776:0:2"},"scope":265,"src":"723:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"781:137:2","text":"@notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n @return adminFee"},"functionSelector":"2a905ccc","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"getAdminFee","nameLocation":"930:11:2","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"941:2:2"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"adminFee","nameLocation":"974:8:2","nodeType":"VariableDeclaration","scope":154,"src":"967:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":151,"name":"uint72","nodeType":"ElementaryTypeName","src":"967:6:2","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"966:17:2"},"scope":265,"src":"921:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"988:630:2","text":"@notice Sends a request using the provided subscriptionId\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"461d2762","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequest","nameLocation":"1630:11:2","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"subscriptionId","nameLocation":"1654:14:2","nodeType":"VariableDeclaration","scope":170,"src":"1647:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":156,"name":"uint64","nodeType":"ElementaryTypeName","src":"1647:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"data","nameLocation":"1689:4:2","nodeType":"VariableDeclaration","scope":170,"src":"1674:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1674:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"dataVersion","nameLocation":"1706:11:2","nodeType":"VariableDeclaration","scope":170,"src":"1699:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":160,"name":"uint16","nodeType":"ElementaryTypeName","src":"1699:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1730:16:2","nodeType":"VariableDeclaration","scope":170,"src":"1723:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":162,"name":"uint32","nodeType":"ElementaryTypeName","src":"1723:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"donId","nameLocation":"1760:5:2","nodeType":"VariableDeclaration","scope":170,"src":"1752:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1641:128:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1788:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1787:9:2"},"scope":265,"src":"1621:176:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1801:622:2","text":"@notice Sends a request to the proposed contracts\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"41db4ca3","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequestToProposed","nameLocation":"2435:21:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"subscriptionId","nameLocation":"2469:14:2","nodeType":"VariableDeclaration","scope":186,"src":"2462:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":172,"name":"uint64","nodeType":"ElementaryTypeName","src":"2462:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2504:4:2","nodeType":"VariableDeclaration","scope":186,"src":"2489:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2489:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"dataVersion","nameLocation":"2521:11:2","nodeType":"VariableDeclaration","scope":186,"src":"2514:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":176,"name":"uint16","nodeType":"ElementaryTypeName","src":"2514:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2545:16:2","nodeType":"VariableDeclaration","scope":186,"src":"2538:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":178,"name":"uint32","nodeType":"ElementaryTypeName","src":"2538:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"donId","nameLocation":"2575:5:2","nodeType":"VariableDeclaration","scope":186,"src":"2567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2567:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2456:128:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"2603:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2603:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2602:9:2"},"scope":265,"src":"2426:186:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"2616:763:2","text":"@notice Fulfill the request by:\n - calling back the data that the Oracle returned to the client contract\n - pay the DON for processing the request\n @dev Only callable by the Coordinator contract that is saved in the commitment\n @param response response data from DON consensus\n @param err error from DON consensus\n @param juelsPerGas - current rate of juels/gas\n @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n @param transmitter - The Node that transmitted the OCR report\n @param commitment - The parameters of the request that must be held consistent between request and response time\n @return fulfillResult -\n @return callbackGasCostJuels -"},"functionSelector":"33060529","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"fulfill","nameLocation":"3391:7:2","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"response","nameLocation":"3417:8:2","nodeType":"VariableDeclaration","scope":208,"src":"3404:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":188,"name":"bytes","nodeType":"ElementaryTypeName","src":"3404:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"err","nameLocation":"3444:3:2","nodeType":"VariableDeclaration","scope":208,"src":"3431:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3431:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"juelsPerGas","nameLocation":"3460:11:2","nodeType":"VariableDeclaration","scope":208,"src":"3453:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":192,"name":"uint96","nodeType":"ElementaryTypeName","src":"3453:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"costWithoutFulfillment","nameLocation":"3484:22:2","nodeType":"VariableDeclaration","scope":208,"src":"3477:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":194,"name":"uint96","nodeType":"ElementaryTypeName","src":"3477:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"transmitter","nameLocation":"3520:11:2","nodeType":"VariableDeclaration","scope":208,"src":"3512:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3512:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"commitment","nameLocation":"3573:10:2","nodeType":"VariableDeclaration","scope":208,"src":"3537:46:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$785_memory_ptr","typeString":"struct FunctionsResponse.Commitment"},"typeName":{"id":199,"nodeType":"UserDefinedTypeName","pathNode":{"id":198,"name":"FunctionsResponse.Commitment","nameLocations":["3537:17:2","3555:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"3537:28:2"},"referencedDeclaration":785,"src":"3537:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$785_storage_ptr","typeString":"struct FunctionsResponse.Commitment"}},"visibility":"internal"}],"src":"3398:189:2"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"3606:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$762","typeString":"enum FunctionsResponse.FulfillResult"},"typeName":{"id":203,"nodeType":"UserDefinedTypeName","pathNode":{"id":202,"name":"FunctionsResponse.FulfillResult","nameLocations":["3606:17:2","3624:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":762,"src":"3606:31:2"},"referencedDeclaration":762,"src":"3606:31:2","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$762","typeString":"enum FunctionsResponse.FulfillResult"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"3639:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":205,"name":"uint96","nodeType":"ElementaryTypeName","src":"3639:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3605:41:2"},"scope":265,"src":"3382:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3651:172:2","text":"@notice Validate requested gas limit is below the subscription max.\n @param subscriptionId subscription ID\n @param callbackGasLimit desired callback gas limit"},"functionSelector":"10fc49c1","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"isValidCallbackGasLimit","nameLocation":"3835:23:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"subscriptionId","nameLocation":"3866:14:2","nodeType":"VariableDeclaration","scope":216,"src":"3859:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":210,"name":"uint64","nodeType":"ElementaryTypeName","src":"3859:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"3889:16:2","nodeType":"VariableDeclaration","scope":216,"src":"3882:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":212,"name":"uint32","nodeType":"ElementaryTypeName","src":"3882:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3858:48:2"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"3920:0:2"},"scope":265,"src":"3826:95:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3925:151:2","text":"@notice Get the current contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current contract address"},"functionSelector":"a9c9a918","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"getContractById","nameLocation":"4088:15:2","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"id","nameLocation":"4112:2:2","nodeType":"VariableDeclaration","scope":224,"src":"4104:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4103:12:2"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"4139:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:9:2"},"scope":265,"src":"4079:69:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4152:169:2","text":"@notice Get the proposed next contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current or proposed contract address"},"functionSelector":"6a2215de","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractById","nameLocation":"4333:23:2","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"id","nameLocation":"4365:2:2","nodeType":"VariableDeclaration","scope":232,"src":"4357:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4357:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4356:12:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"4392:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4391:9:2"},"scope":265,"src":"4324:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4405:176:2","text":"@notice Return the latest proprosal set\n @return ids The identifiers of the contracts to update\n @return to The addresses of the contracts that will be updated to"},"functionSelector":"badc3eb6","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractSet","nameLocation":"4593:22:2","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"4615:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"4641:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4641:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":236,"nodeType":"ArrayTypeName","src":"4641:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"4659:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":239,"nodeType":"ArrayTypeName","src":"4659:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4640:36:2"},"scope":265,"src":"4584:93:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"4681:97:2","text":"@notice Proposes one or more updates to the contract routes\n @dev Only callable by owner"},"functionSelector":"3e871e4d","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"proposeContractsUpdate","nameLocation":"4790:22:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"proposalSetIds","nameLocation":"4830:14:2","nodeType":"VariableDeclaration","scope":252,"src":"4813:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4813:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":245,"nodeType":"ArrayTypeName","src":"4813:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"proposalSetAddresses","nameLocation":"4863:20:2","nodeType":"VariableDeclaration","scope":252,"src":"4846:37:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"nodeType":"ArrayTypeName","src":"4846:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4812:72:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"4893:0:2"},"scope":265,"src":"4781:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"4898:107:2","text":"@notice Updates the current contract routes to the proposed contracts\n @dev Only callable by owner"},"functionSelector":"b734c0f4","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"updateContracts","nameLocation":"5017:15:2","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"5032:2:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"5043:0:2"},"scope":265,"src":"5008:36:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"5048:91:2","text":"@dev Puts the system into an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"8456cb59","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"5151:5:2","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"5156:2:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"5167:0:2"},"scope":265,"src":"5142:26:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"5172:94:2","text":"@dev Takes the system out of an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"3f4ba83a","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"5278:7:2","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"5285:2:2"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"5296:0:2"},"scope":265,"src":"5269:28:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":266,"src":"178:5121:2","usedErrors":[],"usedEvents":[]}],"src":"32:5268:2"},"id":2},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","exportedSymbols":{"CBOR":[2267],"FunctionsRequest":[728]},"id":729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":267,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","file":"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol","id":269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":2268,"src":"58:72:3","symbolAliases":[{"foreign":{"id":268,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"66:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsRequest","contractDependencies":[],"contractKind":"library","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"132:80:3","text":"@title Library for encoding the input data of a Functions request into CBOR"},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"FunctionsRequest","nameLocation":"220:16:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":274,"libraryName":{"id":271,"name":"CBOR","nameLocations":["247:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"247:4:3"},"nodeType":"UsingForDirective","src":"241:31:3","typeName":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"CBOR.CBORBuffer","nameLocations":["256:4:3","261:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"256:15:3"},"referencedDeclaration":1422,"src":"256:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}}},{"constant":true,"functionSelector":"5d641dfc","id":277,"mutability":"constant","name":"REQUEST_DATA_VERSION","nameLocation":"299:20:3","nodeType":"VariableDeclaration","scope":728,"src":"276:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":275,"name":"uint16","nodeType":"ElementaryTypeName","src":"276:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"322:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"id":280,"mutability":"constant","name":"DEFAULT_BUFFER_SIZE","nameLocation":"353:19:3","nodeType":"VariableDeclaration","scope":728,"src":"327:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:3:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"canonicalName":"FunctionsRequest.Location","id":284,"members":[{"id":281,"name":"Inline","nameLocation":"403:6:3","nodeType":"EnumValue","src":"403:6:3"},{"id":282,"name":"Remote","nameLocation":"446:6:3","nodeType":"EnumValue","src":"446:6:3"},{"id":283,"name":"DONHosted","nameLocation":"536:9:3","nodeType":"EnumValue","src":"536:9:3"}],"name":"Location","nameLocation":"388:8:3","nodeType":"EnumDefinition","src":"383:197:3"},{"canonicalName":"FunctionsRequest.CodeLanguage","id":286,"members":[{"id":285,"name":"JavaScript","nameLocation":"608:10:3","nodeType":"EnumValue","src":"608:10:3"}],"name":"CodeLanguage","nameLocation":"589:12:3","nodeType":"EnumDefinition","src":"584:90:3"},{"canonicalName":"FunctionsRequest.Request","id":306,"members":[{"constant":false,"id":289,"mutability":"mutable","name":"codeLocation","nameLocation":"708:12:3","nodeType":"VariableDeclaration","scope":306,"src":"699:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":288,"nodeType":"UserDefinedTypeName","pathNode":{"id":287,"name":"Location","nameLocations":["699:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"699:8:3"},"referencedDeclaration":284,"src":"699:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"secretsLocation","nameLocation":"856:15:3","nodeType":"VariableDeclaration","scope":306,"src":"847:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":291,"nodeType":"UserDefinedTypeName","pathNode":{"id":290,"name":"Location","nameLocations":["847:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"847:8:3"},"referencedDeclaration":284,"src":"847:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"language","nameLocation":"1025:8:3","nodeType":"VariableDeclaration","scope":306,"src":"1012:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"CodeLanguage","nameLocations":["1012:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1012:12:3"},"referencedDeclaration":286,"src":"1012:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"source","nameLocation":"1144:6:3","nodeType":"VariableDeclaration","scope":306,"src":"1137:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":296,"name":"string","nodeType":"ElementaryTypeName","src":"1137:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"1409:25:3","nodeType":"VariableDeclaration","scope":306,"src":"1403:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"1403:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"args","nameLocation":"1662:4:3","nodeType":"VariableDeclaration","scope":306,"src":"1653:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":301,"nodeType":"ArrayTypeName","src":"1653:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"bytesArgs","nameLocation":"1805:9:3","nodeType":"VariableDeclaration","scope":306,"src":"1797:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":303,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":304,"nodeType":"ArrayTypeName","src":"1797:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"name":"Request","nameLocation":"685:7:3","nodeType":"StructDefinition","scope":728,"src":"678:1253:3","visibility":"public"},{"errorSelector":"22ce3edd","id":308,"name":"EmptySource","nameLocation":"1941:11:3","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"1952:2:3"},"src":"1935:20:3"},{"errorSelector":"e889636f","id":310,"name":"EmptySecrets","nameLocation":"1964:12:3","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"1976:2:3"},"src":"1958:21:3"},{"errorSelector":"fe936cb7","id":312,"name":"EmptyArgs","nameLocation":"1988:9:3","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1997:2:3"},"src":"1982:18:3"},{"errorSelector":"a80d31f7","id":314,"name":"NoInlineSecrets","nameLocation":"2009:15:3","nodeType":"ErrorDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"2024:2:3"},"src":"2003:24:3"},{"body":{"id":520,"nodeType":"Block","src":"2236:1192:3","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"buffer","nameLocation":"2265:6:3","nodeType":"VariableDeclaration","scope":520,"src":"2242:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"CBOR.CBORBuffer","nameLocations":["2242:4:3","2247:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2242:15:3"},"referencedDeclaration":1422,"src":"2242:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[{"id":330,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2286:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":328,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2274:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2267_$","typeString":"type(library CBOR)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:3","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"2274:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"2242:64:3"},{"expression":{"arguments":[{"hexValue":"636f64654c6f636174696f6e","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2332:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""},"value":"codeLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""}],"expression":{"id":333,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2313:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2320:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2313:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"2313:34:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":344,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2381:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2386:12:3","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":289,"src":"2381:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:3","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2353:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"2353:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"2353:47:3"},{"expression":{"arguments":[{"hexValue":"6c616e6775616765","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:10:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""},"value":"language"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""}],"expression":{"id":349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2407:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2414:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2407:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"2407:30:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":360,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2471:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2476:8:3","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":295,"src":"2471:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}],"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2463:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:3","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":355,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2443:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"2443:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"2443:43:3"},{"expression":{"arguments":[{"hexValue":"736f75726365","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""},"value":"source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""}],"expression":{"id":365,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2493:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2500:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2493:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"2493:28:3"},{"expression":{"arguments":[{"expression":{"id":374,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2546:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2551:6:3","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":297,"src":"2546:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":371,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2527:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2534:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2527:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"2527:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":378,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2569:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2574:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2569:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:6:3","memberName":"length","nodeType":"MemberAccess","src":"2569:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2588:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2569:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"2565:227:3","trueBody":{"id":422,"nodeType":"Block","src":"2591:201:3","statements":[{"expression":{"arguments":[{"hexValue":"61726773","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2618:6:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""},"value":"args"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""}],"expression":{"id":383,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2606:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2599:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"2599:26:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":389,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2633:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2640:10:3","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"2633:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"2633:19:3"},{"body":{"id":415,"nodeType":"Block","src":"2707:51:3","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":409,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2736:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2741:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2736:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":412,"indexExpression":{"id":411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2746:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2736:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":406,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2717:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2724:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2717:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"2717:32:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2680:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2684:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2689:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2684:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:6:3","memberName":"length","nodeType":"MemberAccess","src":"2684:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2680:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"initializationExpression":{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"i","nameLocation":"2673:1:3","nodeType":"VariableDeclaration","scope":416,"src":"2665:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":397,"initialValue":{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2665:13:3"},"loopExpression":{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2702:3:3","subExpression":{"id":403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2704:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ExpressionStatement","src":"2702:3:3"},"nodeType":"ForStatement","src":"2660:98:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":417,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2765:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2772:11:3","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"2765:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"2765:20:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":424,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2802:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"2802:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2833:6:3","memberName":"length","nodeType":"MemberAccess","src":"2802:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2842:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2802:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":469,"nodeType":"IfStatement","src":"2798:346:3","trueBody":{"id":468,"nodeType":"Block","src":"2845:299:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":429,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2857:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2862:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"2857:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":431,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"2881:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2890:6:3","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":281,"src":"2881:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"2857:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":438,"nodeType":"IfStatement","src":"2853:88:3","trueBody":{"id":437,"nodeType":"Block","src":"2898:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"NoInlineSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2915:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"RevertStatement","src":"2908:24:3"}]}},{"expression":{"arguments":[{"hexValue":"736563726574734c6f636174696f6e","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2967:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""},"value":"secretsLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""}],"expression":{"id":439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2948:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2955:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"2948:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"2948:37:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":450,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3021:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3026:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3021:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}],"id":449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3013:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:3","typeDescriptions":{}}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3013:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":445,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2993:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3000:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"2993:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2993:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"2993:50:3"},{"expression":{"arguments":[{"hexValue":"73656372657473","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""},"value":"secrets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""}],"expression":{"id":455,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3051:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3058:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"3051:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"3051:29:3"},{"expression":{"arguments":[{"expression":{"id":464,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3106:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3111:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"3106:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3088:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3095:10:3","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"3088:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"3088:49:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":470,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3154:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3159:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3154:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:6:3","memberName":"length","nodeType":"MemberAccess","src":"3154:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3154:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":515,"nodeType":"IfStatement","src":"3150:246:3","trueBody":{"id":514,"nodeType":"Block","src":"3181:215:3","statements":[{"expression":{"arguments":[{"hexValue":"627974657341726773","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3208:11:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""},"value":"bytesArgs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""}],"expression":{"id":475,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3189:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3196:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"3189:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3189:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"3189:31:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":481,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3228:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3235:10:3","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"3228:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3228:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"3228:19:3"},{"body":{"id":507,"nodeType":"Block","src":"3307:55:3","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":501,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3335:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3340:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3335:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":504,"indexExpression":{"id":503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3350:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3335:17:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":498,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3317:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3324:10:3","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"3317:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"3317:36:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3275:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":491,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3279:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3284:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3279:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:6:3","memberName":"length","nodeType":"MemberAccess","src":"3279:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3275:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"initializationExpression":{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"i","nameLocation":"3268:1:3","nodeType":"VariableDeclaration","scope":508,"src":"3260:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":489,"initialValue":{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3272:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3260:13:3"},"loopExpression":{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3302:3:3","subExpression":{"id":495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3304:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"3302:3:3"},"nodeType":"ForStatement","src":"3255:107:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":509,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3369:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3376:11:3","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"3369:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"3369:20:3"}]}},{"expression":{"expression":{"expression":{"id":516,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3409:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3416:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"3409:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3420:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"3409:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":322,"id":519,"nodeType":"Return","src":"3402:21:3"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"2031:124:3","text":"@notice Encodes a Request to CBOR encoded bytes\n @param self The request to encode\n @return CBOR encoded bytes"},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCBOR","nameLocation":"2167:10:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"self","nameLocation":"2193:4:3","nodeType":"VariableDeclaration","scope":521,"src":"2178:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":317,"nodeType":"UserDefinedTypeName","pathNode":{"id":316,"name":"Request","nameLocations":["2178:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"2178:7:3"},"referencedDeclaration":306,"src":"2178:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"src":"2177:21:3"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"2222:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":320,"name":"bytes","nodeType":"ElementaryTypeName","src":"2222:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2221:14:3"},"scope":728,"src":"2158:1270:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":565,"nodeType":"Block","src":"3927:157:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":538,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3943:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3937:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":536,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:3","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3937:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:3","memberName":"length","nodeType":"MemberAccess","src":"3937:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3961:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3937:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"3933:51:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"EmptySource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3971:11:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"RevertStatement","src":"3964:20:3"}},{"expression":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":547,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3991:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3996:12:3","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":289,"src":"3991:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":550,"name":"codeLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4011:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"3991:32:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":552,"nodeType":"ExpressionStatement","src":"3991:32:3"},{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":553,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4029:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4034:8:3","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":295,"src":"4029:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":556,"name":"language","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4045:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"src":"4029:24:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"id":558,"nodeType":"ExpressionStatement","src":"4029:24:3"},{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":559,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4059:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4064:6:3","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":297,"src":"4059:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":562,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4073:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4059:20:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":564,"nodeType":"ExpressionStatement","src":"4059:20:3"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"3432:342:3","text":"@notice Initializes a Chainlink Functions Request\n @dev Sets the codeLocation and code on the request\n @param self The uninitialized request\n @param codeLocation The user provided source code location\n @param language The programming language of the user code\n @param source The user provided source code or a url"},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequest","nameLocation":"3786:17:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"self","nameLocation":"3824:4:3","nodeType":"VariableDeclaration","scope":566,"src":"3809:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":524,"nodeType":"UserDefinedTypeName","pathNode":{"id":523,"name":"Request","nameLocations":["3809:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"3809:7:3"},"referencedDeclaration":306,"src":"3809:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"codeLocation","nameLocation":"3843:12:3","nodeType":"VariableDeclaration","scope":566,"src":"3834:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"Location","nameLocations":["3834:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"3834:8:3"},"referencedDeclaration":284,"src":"3834:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"language","nameLocation":"3874:8:3","nodeType":"VariableDeclaration","scope":566,"src":"3861:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"CodeLanguage","nameLocations":["3861:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"3861:12:3"},"referencedDeclaration":286,"src":"3861:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"source","nameLocation":"3902:6:3","nodeType":"VariableDeclaration","scope":566,"src":"3888:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":532,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3803:109:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"3927:0:3"},"scope":728,"src":"3777:307:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"4436:94:3","statements":[{"expression":{"arguments":[{"id":576,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4460:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},{"expression":{"id":577,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4466:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4475:6:3","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":281,"src":"4466:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},{"expression":{"id":579,"name":"CodeLanguage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4483:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CodeLanguage_$286_$","typeString":"type(enum FunctionsRequest.CodeLanguage)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4496:10:3","memberName":"JavaScript","nodeType":"MemberAccess","referencedDeclaration":285,"src":"4483:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},{"id":581,"name":"javaScriptSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4508:16:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"},{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":575,"name":"initializeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4442:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$_t_enum$_Location_$284_$_t_enum$_CodeLanguage_$286_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct FunctionsRequest.Request memory,enum FunctionsRequest.Location,enum FunctionsRequest.CodeLanguage,string memory) pure"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"4442:83:3"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"4088:232:3","text":"@notice Initializes a Chainlink Functions Request\n @dev Simplified version of initializeRequest for PoC\n @param self The uninitialized request\n @param javaScriptSource The user provided JS code (must not be empty)"},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequestForInlineJavaScript","nameLocation":"4332:36:3","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"self","nameLocation":"4384:4:3","nodeType":"VariableDeclaration","scope":585,"src":"4369:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":569,"nodeType":"UserDefinedTypeName","pathNode":{"id":568,"name":"Request","nameLocations":["4369:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4369:7:3"},"referencedDeclaration":306,"src":"4369:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"javaScriptSource","nameLocation":"4404:16:3","nodeType":"VariableDeclaration","scope":585,"src":"4390:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"4390:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4368:53:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"4436:0:3"},"scope":728,"src":"4323:207:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"4852:184:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":594,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4862:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4888:6:3","memberName":"length","nodeType":"MemberAccess","src":"4862:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4862:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"4858:64:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":598,"name":"EmptySecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4908:12:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"RevertStatement","src":"4901:21:3"}},{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":602,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4929:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4934:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4929:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":605,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4952:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4961:6:3","memberName":"Remote","nodeType":"MemberAccess","referencedDeclaration":282,"src":"4952:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"4929:38:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":608,"nodeType":"ExpressionStatement","src":"4929:38:3"},{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":609,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4973:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4978:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"4973:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":612,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5006:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4973:58:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":614,"nodeType":"ExpressionStatement","src":"4973:58:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4534:211:3","text":"@notice Adds Remote user encrypted secrets to a Request\n @param self The initialized request\n @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets"},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"addSecretsReference","nameLocation":"4757:19:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"self","nameLocation":"4792:4:3","nodeType":"VariableDeclaration","scope":616,"src":"4777:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"Request","nameLocations":["4777:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4777:7:3"},"referencedDeclaration":306,"src":"4777:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"4811:25:3","nodeType":"VariableDeclaration","scope":616,"src":"4798:38:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"4798:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4776:61:3"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"4852:0:3"},"scope":728,"src":"4748:288:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"5357:311:3","statements":[{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"buffer","nameLocation":"5386:6:3","nodeType":"VariableDeclaration","scope":676,"src":"5363:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":630,"nodeType":"UserDefinedTypeName","pathNode":{"id":629,"name":"CBOR.CBORBuffer","nameLocations":["5363:4:3","5368:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5363:15:3"},"referencedDeclaration":1422,"src":"5363:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[{"id":634,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"5407:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":632,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"5395:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2267_$","typeString":"type(library CBOR)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:6:3","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"5395:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"5363:64:3"},{"expression":{"arguments":[{"hexValue":"736c6f744944","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5453:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""},"value":"slotID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""}],"expression":{"id":637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5434:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5441:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"5434:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5434:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5434:28:3"},{"expression":{"arguments":[{"id":646,"name":"slotID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5487:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":643,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5468:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5475:11:3","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"5468:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"5468:26:3"},{"expression":{"arguments":[{"hexValue":"76657273696f6e","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""},"value":"version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""}],"expression":{"id":649,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5500:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5507:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"5500:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"5500:29:3"},{"expression":{"arguments":[{"id":658,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5554:7:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":655,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5535:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5542:11:3","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"5535:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1422_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"5535:27:3"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":661,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5569:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5574:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"5569:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":664,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5592:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5601:9:3","memberName":"DONHosted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5592:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"5569:41:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":667,"nodeType":"ExpressionStatement","src":"5569:41:3"},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":668,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5616:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5621:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"5616:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":671,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5649:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5656:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"5649:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5660:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"5649:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5616:47:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":675,"nodeType":"ExpressionStatement","src":"5616:47:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"5040:220:3","text":"@notice Adds DON-hosted secrets reference to a Request\n @param self The initialized request\n @param slotID Slot ID of the user's secrets hosted on DON\n @param version User data version (for the slotID)"},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"addDONHostedSecrets","nameLocation":"5272:19:3","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"self","nameLocation":"5307:4:3","nodeType":"VariableDeclaration","scope":677,"src":"5292:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"Request","nameLocations":["5292:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"5292:7:3"},"referencedDeclaration":306,"src":"5292:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"slotID","nameLocation":"5319:6:3","nodeType":"VariableDeclaration","scope":677,"src":"5313:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":621,"name":"uint8","nodeType":"ElementaryTypeName","src":"5313:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"version","nameLocation":"5334:7:3","nodeType":"VariableDeclaration","scope":677,"src":"5327:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":623,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5291:51:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"5357:0:3"},"scope":728,"src":"5263:405:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"5901:74:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":687,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5911:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5916:6:3","memberName":"length","nodeType":"MemberAccess","src":"5911:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5926:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5911:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"5907:40:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"5936:9:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"RevertStatement","src":"5929:18:3"}},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":695,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5954:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5959:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5954:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5966:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"5954:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":700,"nodeType":"ExpressionStatement","src":"5954:16:3"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"5672:152:3","text":"@notice Sets args for the user run function\n @param self The initialized request\n @param args The array of string args (must not be empty)"},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"setArgs","nameLocation":"5836:7:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"self","nameLocation":"5859:4:3","nodeType":"VariableDeclaration","scope":702,"src":"5844:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":680,"nodeType":"UserDefinedTypeName","pathNode":{"id":679,"name":"Request","nameLocations":["5844:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"5844:7:3"},"referencedDeclaration":306,"src":"5844:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"args","nameLocation":"5881:4:3","nodeType":"VariableDeclaration","scope":702,"src":"5865:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":682,"name":"string","nodeType":"ElementaryTypeName","src":"5865:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":683,"nodeType":"ArrayTypeName","src":"5865:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5843:43:3"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"5901:0:3"},"scope":728,"src":"5827:148:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"6217:79:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6227:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6232:6:3","memberName":"length","nodeType":"MemberAccess","src":"6227:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6242:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6227:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"IfStatement","src":"6223:40:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":716,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"6252:9:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"RevertStatement","src":"6245:18:3"}},{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":720,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6270:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6275:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"6270:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":723,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6287:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"6270:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":725,"nodeType":"ExpressionStatement","src":"6270:21:3"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"5979:157:3","text":"@notice Sets bytes args for the user run function\n @param self The initialized request\n @param args The array of bytes args (must not be empty)"},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"setBytesArgs","nameLocation":"6148:12:3","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"self","nameLocation":"6176:4:3","nodeType":"VariableDeclaration","scope":727,"src":"6161:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":705,"nodeType":"UserDefinedTypeName","pathNode":{"id":704,"name":"Request","nameLocations":["6161:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"6161:7:3"},"referencedDeclaration":306,"src":"6161:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"args","nameLocation":"6197:4:3","nodeType":"VariableDeclaration","scope":727,"src":"6182:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"6182:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":708,"nodeType":"ArrayTypeName","src":"6182:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6160:42:3"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"6217:0:3"},"scope":728,"src":"6139:157:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":729,"src":"212:6086:3","usedErrors":[308,310,312,314],"usedEvents":[]}],"src":"32:6267:3"},"id":3},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","exportedSymbols":{"FunctionsResponse":[786]},"id":787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":730,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsResponse","contractDependencies":[],"contractKind":"library","documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"58:81:4","text":"@title Library of types that are used for fulfillment of a Functions request"},"fullyImplemented":true,"id":786,"linearizedBaseContracts":[786],"name":"FunctionsResponse","nameLocation":"147:17:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"FunctionsResponse.RequestMeta","id":754,"members":[{"constant":false,"id":733,"mutability":"mutable","name":"data","nameLocation":"273:4:4","nodeType":"VariableDeclaration","scope":754,"src":"267:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":732,"name":"bytes","nodeType":"ElementaryTypeName","src":"267:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"flags","nameLocation":"448:5:4","nodeType":"VariableDeclaration","scope":754,"src":"440:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"440:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"requestingContract","nameLocation":"542:18:4","nodeType":"VariableDeclaration","scope":754,"src":"534:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"availableBalance","nameLocation":"634:16:4","nodeType":"VariableDeclaration","scope":754,"src":"627:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":738,"name":"uint96","nodeType":"ElementaryTypeName","src":"627:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"adminFee","nameLocation":"796:8:4","nodeType":"VariableDeclaration","scope":754,"src":"789:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":740,"name":"uint72","nodeType":"ElementaryTypeName","src":"789:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"subscriptionId","nameLocation":"958:14:4","nodeType":"VariableDeclaration","scope":754,"src":"951:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":742,"name":"uint64","nodeType":"ElementaryTypeName","src":"951:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"initiatedRequests","nameLocation":"1075:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1068:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":744,"name":"uint64","nodeType":"ElementaryTypeName","src":"1068:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1162:16:4","nodeType":"VariableDeclaration","scope":754,"src":"1155:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":746,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"dataVersion","nameLocation":"1279:11:4","nodeType":"VariableDeclaration","scope":754,"src":"1272:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":748,"name":"uint16","nodeType":"ElementaryTypeName","src":"1272:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"completedRequests","nameLocation":"1402:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1395:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":750,"name":"uint64","nodeType":"ElementaryTypeName","src":"1395:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"subscriptionOwner","nameLocation":"1521:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1513:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RequestMeta","nameLocation":"249:11:4","nodeType":"StructDefinition","scope":786,"src":"242:1355:4","visibility":"public"},{"canonicalName":"FunctionsResponse.FulfillResult","id":762,"members":[{"id":755,"name":"FULFILLED","nameLocation":"1626:9:4","nodeType":"EnumValue","src":"1626:9:4"},{"id":756,"name":"USER_CALLBACK_ERROR","nameLocation":"1646:19:4","nodeType":"EnumValue","src":"1646:19:4"},{"id":757,"name":"INVALID_REQUEST_ID","nameLocation":"1676:18:4","nodeType":"EnumValue","src":"1676:18:4"},{"id":758,"name":"COST_EXCEEDS_COMMITMENT","nameLocation":"1705:23:4","nodeType":"EnumValue","src":"1705:23:4"},{"id":759,"name":"INSUFFICIENT_GAS_PROVIDED","nameLocation":"1739:25:4","nodeType":"EnumValue","src":"1739:25:4"},{"id":760,"name":"SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION","nameLocation":"1775:40:4","nodeType":"EnumValue","src":"1775:40:4"},{"id":761,"name":"INVALID_COMMITMENT","nameLocation":"1826:18:4","nodeType":"EnumValue","src":"1826:18:4"}],"name":"FulfillResult","nameLocation":"1606:13:4","nodeType":"EnumDefinition","src":"1601:252:4"},{"canonicalName":"FunctionsResponse.Commitment","id":785,"members":[{"constant":false,"id":764,"mutability":"mutable","name":"requestId","nameLocation":"1889:9:4","nodeType":"VariableDeclaration","scope":785,"src":"1881:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"coordinator","nameLocation":"2024:11:4","nodeType":"VariableDeclaration","scope":785,"src":"2016:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"estimatedTotalCostJuels","nameLocation":"2174:23:4","nodeType":"VariableDeclaration","scope":785,"src":"2167:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":767,"name":"uint96","nodeType":"ElementaryTypeName","src":"2167:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"client","nameLocation":"2313:6:4","nodeType":"VariableDeclaration","scope":785,"src":"2305:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"2305:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"subscriptionId","nameLocation":"2441:14:4","nodeType":"VariableDeclaration","scope":785,"src":"2434:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":771,"name":"uint64","nodeType":"ElementaryTypeName","src":"2434:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2564:16:4","nodeType":"VariableDeclaration","scope":785,"src":"2557:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":773,"name":"uint32","nodeType":"ElementaryTypeName","src":"2557:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"adminFee","nameLocation":"2709:8:4","nodeType":"VariableDeclaration","scope":785,"src":"2702:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":775,"name":"uint72","nodeType":"ElementaryTypeName","src":"2702:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"donFee","nameLocation":"2889:6:4","nodeType":"VariableDeclaration","scope":785,"src":"2882:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":777,"name":"uint72","nodeType":"ElementaryTypeName","src":"2882:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"gasOverheadBeforeCallback","nameLocation":"3025:25:4","nodeType":"VariableDeclaration","scope":785,"src":"3018:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":779,"name":"uint40","nodeType":"ElementaryTypeName","src":"3018:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"gasOverheadAfterCallback","nameLocation":"3147:24:4","nodeType":"VariableDeclaration","scope":785,"src":"3140:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":781,"name":"uint40","nodeType":"ElementaryTypeName","src":"3140:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"timeoutTimestamp","nameLocation":"3268:16:4","nodeType":"VariableDeclaration","scope":785,"src":"3261:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":783,"name":"uint32","nodeType":"ElementaryTypeName","src":"3261:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Commitment","nameLocation":"1864:10:4","nodeType":"StructDefinition","scope":786,"src":"1857:1538:4","visibility":"public"}],"scope":787,"src":"139:3258:4","usedErrors":[],"usedEvents":[]}],"src":"32:3366:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[807],"ConfirmedOwnerWithProposal":[970]},"id":808,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":788,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":971,"src":"57:76:5","symbolAliases":[{"foreign":{"id":789,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"65:26:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":792,"name":"ConfirmedOwnerWithProposal","nameLocations":["267:26:5"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"267:26:5"},"id":793,"nodeType":"InheritanceSpecifier","src":"267:26:5"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"135:105:5","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":807,"linearizedBaseContracts":[807,970,986],"name":"ConfirmedOwner","nameLocation":"249:14:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":805,"nodeType":"Block","src":"377:2:5","statements":[]},"id":806,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":798,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"355:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":803,"kind":"baseConstructorSpecifier","modifierName":{"id":797,"name":"ConfirmedOwnerWithProposal","nameLocations":["328:26:5"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"328:26:5"},"nodeType":"ModifierInvocation","src":"328:48:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:5","nodeType":"VariableDeclaration","scope":806,"src":"310:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:5"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"377:0:5"},"scope":807,"src":"298:81:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":808,"src":"240:141:5","usedErrors":[],"usedEvents":[824,830]}],"src":"32:350:5"},"id":5},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[970],"IOwnable":[986]},"id":971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":809,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":971,"sourceUnit":987,"src":"57:52:6","symbolAliases":[{"foreign":{"id":810,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"65:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":813,"name":"IOwnable","nameLocations":["255:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":986,"src":"255:8:6"},"id":814,"nodeType":"InheritanceSpecifier","src":"255:8:6"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"111:105:6","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":970,"linearizedBaseContracts":[970,986],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":816,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:6","nodeType":"VariableDeclaration","scope":970,"src":"268:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":818,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:6","nodeType":"VariableDeclaration","scope":970,"src":"295:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":824,"name":"OwnershipTransferRequested","nameLocation":"336:26:6","nodeType":"EventDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:6","nodeType":"VariableDeclaration","scope":824,"src":"363:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:6","nodeType":"VariableDeclaration","scope":824,"src":"385:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:6"},"src":"330:75:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":830,"name":"OwnershipTransferred","nameLocation":"414:20:6","nodeType":"EventDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:6","nodeType":"VariableDeclaration","scope":830,"src":"435:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:6","nodeType":"VariableDeclaration","scope":830,"src":"457:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:6"},"src":"408:69:6"},{"body":{"id":863,"nodeType":"Block","src":"533:230:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"598:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"610:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"598:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"590:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"590:59:6"},{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":847,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"656:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":848,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"666:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"656:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":850,"nodeType":"ExpressionStatement","src":"656:18:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"684:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"700:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:6","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"700:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":862,"nodeType":"IfStatement","src":"680:79:6","trueBody":{"id":861,"nodeType":"Block","src":"712:47:6","statements":[{"expression":{"arguments":[{"id":858,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"739:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":857,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"720:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"720:32:6"}]}}]},"id":864,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:6","nodeType":"VariableDeclaration","scope":864,"src":"493:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:6","nodeType":"VariableDeclaration","scope":864,"src":"511:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:6"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"533:0:6"},"scope":970,"src":"481:282:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[982],"body":{"id":877,"nodeType":"Block","src":"912:33:6","statements":[{"expression":{"arguments":[{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"937:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"918:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"918:22:6"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"767:77:6","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":878,"implemented":true,"kind":"function","modifiers":[{"id":871,"kind":"modifierInvocation","modifierName":{"id":870,"name":"onlyOwner","nameLocations":["902:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"902:9:6"},"nodeType":"ModifierInvocation","src":"902:9:6"}],"name":"transferOwnership","nameLocation":"856:17:6","nodeType":"FunctionDefinition","overrides":{"id":869,"nodeType":"OverrideSpecifier","overrides":[],"src":"893:8:6"},"parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"to","nameLocation":"882:2:6","nodeType":"VariableDeclaration","scope":878,"src":"874:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:6"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"912:0:6"},"scope":970,"src":"847:98:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[985],"body":{"id":913,"nodeType":"Block","src":"1071:271:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1136:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1136:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":886,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"1150:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:24:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1128:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"1128:63:6"},{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"oldOwner","nameLocation":"1206:8:6","nodeType":"VariableDeclaration","scope":913,"src":"1198:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":894,"initialValue":{"id":893,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1217:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1198:26:6"},{"expression":{"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1230:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1240:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":899,"nodeType":"ExpressionStatement","src":"1230:20:6"},{"expression":{"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":900,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"1256:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1273:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:6","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1256:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":906,"nodeType":"ExpressionStatement","src":"1256:27:6"},{"eventCall":{"arguments":[{"id":908,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"1316:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1326:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1330:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1326:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":907,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"1295:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"EmitStatement","src":"1290:47:6"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"949:74:6","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":914,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1035:15:6","nodeType":"FunctionDefinition","overrides":{"id":881,"nodeType":"OverrideSpecifier","overrides":[],"src":"1062:8:6"},"parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"1050:2:6"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"1071:0:6"},"scope":970,"src":"1026:316:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[977],"body":{"id":923,"nodeType":"Block","src":"1438:25:6","statements":[{"expression":{"id":921,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1451:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":920,"id":922,"nodeType":"Return","src":"1444:14:6"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"1346:33:6","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":924,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1391:5:6","nodeType":"FunctionDefinition","overrides":{"id":917,"nodeType":"OverrideSpecifier","overrides":[],"src":"1411:8:6"},"parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"1396:2:6"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"1429:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:9:6"},"scope":970,"src":"1382:81:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":947,"nodeType":"Block","src":"1584:191:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1649:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1655:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1659:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1655:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:25:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1641:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"1641:52:6"},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":938,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"1700:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":939,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1717:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1700:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":941,"nodeType":"ExpressionStatement","src":"1700:19:6"},{"eventCall":{"arguments":[{"id":943,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1758:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1767:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"1731:26:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"EmitStatement","src":"1726:44:6"}]},"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"1467:66:6","text":"@notice validate, transfer ownership, and emit relevant events"},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1545:18:6","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"1572:2:6","nodeType":"VariableDeclaration","scope":948,"src":"1564:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1563:12:6"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"1584:0:6"},"scope":970,"src":"1536:239:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":960,"nodeType":"Block","src":"1853:118:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1918:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1922:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1918:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":955,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1932:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1941:24:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1910:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"1910:56:6"}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"1779:27:6","text":"@notice validate access"},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1818:18:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"1836:2:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"1853:0:6"},"scope":970,"src":"1809:162:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":968,"nodeType":"Block","src":"2069:38:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2075:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"ExpressionStatement","src":"2075:20:6"},{"id":967,"nodeType":"PlaceholderStatement","src":"2101:1:6"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"1975:70:6","text":"@notice Reverts if called by anyone other than the contract owner."},"id":969,"name":"onlyOwner","nameLocation":"2057:9:6","nodeType":"ModifierDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"2066:2:6"},"src":"2048:59:6","virtual":false,"visibility":"internal"}],"scope":971,"src":"216:1893:6","usedErrors":[],"usedEvents":[824,830]}],"src":"32:2078:6"},"id":6},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[986]},"id":987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":972,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":986,"linearizedBaseContracts":[986],"name":"IOwnable","nameLocation":"67:8:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":977,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:7","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"94:2:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"115:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:7"},"scope":986,"src":"80:44:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:7","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"recipient","nameLocation":"163:9:7","nodeType":"VariableDeclaration","scope":982,"src":"155:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:7"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"182:0:7"},"scope":986,"src":"128:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":985,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:7","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"211:2:7"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"222:0:7"},"scope":986,"src":"187:36:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":987,"src":"57:168:7","usedErrors":[],"usedEvents":[]}],"src":"32:194:7"},"id":7},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","exportedSymbols":{"Buffer":[1408]},"id":1409,"license":"BSD-2-Clause","nodeType":"SourceUnit","nodes":[{"id":988,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"41:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Buffer","contractDependencies":[],"contractKind":"library","documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"66:378:8","text":" @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for appending to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."},"fullyImplemented":true,"id":1408,"linearizedBaseContracts":[1408],"name":"Buffer","nameLocation":"453:6:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Buffer.buffer","documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"466:249:8","text":" @dev Represents a mutable buffer. Buffers have a current value (buf) and\n      a capacity. The capacity may be longer than the current value, in\n      which case it can be extended without the need to allocate more memory."},"id":995,"members":[{"constant":false,"id":992,"mutability":"mutable","name":"buf","nameLocation":"750:3:8","nodeType":"VariableDeclaration","scope":995,"src":"744:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"744:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"capacity","nameLocation":"768:8:8","nodeType":"VariableDeclaration","scope":995,"src":"763:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint","nodeType":"ElementaryTypeName","src":"763:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"buffer","nameLocation":"727:6:8","nodeType":"StructDefinition","scope":1408,"src":"720:63:8","visibility":"public"},{"body":{"id":1032,"nodeType":"Block","src":"1105:470:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1119:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1119:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1119:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"1115:81:8","trueBody":{"id":1021,"nodeType":"Block","src":"1139:57:8","statements":[{"expression":{"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1012,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1153:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1171:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1171:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1170:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1165:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1153:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ExpressionStatement","src":"1153:32:8"}]}},{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1023,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1251:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1255:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"1251:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1026,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1266:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1251:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1028,"nodeType":"ExpressionStatement","src":"1251:23:8"},{"AST":{"nodeType":"YulBlock","src":"1293:256:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1307:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1324:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1318:5:8"},"nodeType":"YulFunctionCall","src":"1318:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1311:3:8","type":""}]},{"expression":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"1349:3:8"},{"name":"ptr","nodeType":"YulIdentifier","src":"1354:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:8"},"nodeType":"YulFunctionCall","src":"1342:16:8"},"nodeType":"YulExpressionStatement","src":"1342:16:8"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1378:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1383:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1371:6:8"},"nodeType":"YulFunctionCall","src":"1371:14:8"},"nodeType":"YulExpressionStatement","src":"1371:14:8"},{"nodeType":"YulVariableDeclaration","src":"1398:38:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1413:2:8","type":"","value":"32"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1421:3:8"},{"name":"capacity","nodeType":"YulIdentifier","src":"1426:8:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1417:3:8"},"nodeType":"YulFunctionCall","src":"1417:18:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1409:3:8"},"nodeType":"YulFunctionCall","src":"1409:27:8"},"variables":[{"name":"fpm","nodeType":"YulTypedName","src":"1402:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1465:44:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1490:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1493:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1483:6:8"},"nodeType":"YulFunctionCall","src":"1483:12:8"},"nodeType":"YulExpressionStatement","src":"1483:12:8"}]},"condition":{"arguments":[{"name":"fpm","nodeType":"YulIdentifier","src":"1455:3:8"},{"name":"ptr","nodeType":"YulIdentifier","src":"1460:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1452:2:8"},"nodeType":"YulFunctionCall","src":"1452:12:8"},"nodeType":"YulIf","src":"1449:60:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:4:8","type":"","value":"0x40"},{"name":"fpm","nodeType":"YulIdentifier","src":"1535:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1522:6:8"},"nodeType":"YulFunctionCall","src":"1522:17:8"},"nodeType":"YulExpressionStatement","src":"1522:17:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":999,"isOffset":false,"isSlot":false,"src":"1349:3:8","valueSize":1},{"declaration":1001,"isOffset":false,"isSlot":false,"src":"1426:8:8","valueSize":1}],"id":1029,"nodeType":"InlineAssembly","src":"1284:265:8"},{"expression":{"id":1030,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1565:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1006,"id":1031,"nodeType":"Return","src":"1558:10:8"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"789:226:8","text":" @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1029:4:8","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"buf","nameLocation":"1048:3:8","nodeType":"VariableDeclaration","scope":1033,"src":"1034:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"buffer","nameLocations":["1034:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"1034:6:8"},"referencedDeclaration":995,"src":"1034:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"capacity","nameLocation":"1058:8:8","nodeType":"VariableDeclaration","scope":1033,"src":"1053:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint","nodeType":"ElementaryTypeName","src":"1053:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1033:34:8"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1033,"src":"1090:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1004,"nodeType":"UserDefinedTypeName","pathNode":{"id":1003,"name":"buffer","nameLocations":["1090:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"1090:6:8"},"referencedDeclaration":995,"src":"1090:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1089:15:8"},"scope":1408,"src":"1020:555:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"1890:108:8","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"buf","nameLocation":"1914:3:8","nodeType":"VariableDeclaration","scope":1061,"src":"1900:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"buffer","nameLocations":["1900:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"1900:6:8"},"referencedDeclaration":995,"src":"1900:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"id":1045,"nodeType":"VariableDeclarationStatement","src":"1900:17:8"},{"expression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1046,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1927:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1931:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"1927:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1049,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1937:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1927:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1051,"nodeType":"ExpressionStatement","src":"1927:11:8"},{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1052,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1948:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1952:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"1948:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1963:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1965:6:8","memberName":"length","nodeType":"MemberAccess","src":"1963:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ExpressionStatement","src":"1948:23:8"},{"expression":{"id":1059,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1988:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1041,"id":1060,"nodeType":"Return","src":"1981:10:8"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1581:232:8","text":" @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"fromBytes","nameLocation":"1827:9:8","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"b","nameLocation":"1850:1:8","nodeType":"VariableDeclaration","scope":1062,"src":"1837:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1837:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1836:16:8"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"1875:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1039,"nodeType":"UserDefinedTypeName","pathNode":{"id":1038,"name":"buffer","nameLocations":["1875:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"1875:6:8"},"referencedDeclaration":995,"src":"1875:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1874:15:8"},"scope":1408,"src":"1818:180:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"2067:104:8","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"oldbuf","nameLocation":"2090:6:8","nodeType":"VariableDeclaration","scope":1085,"src":"2077:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"2077:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1074,"initialValue":{"expression":{"id":1072,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2099:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2103:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"2099:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2077:29:8"},{"expression":{"arguments":[{"id":1076,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2121:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1077,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2126:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1075,"name":"init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2116:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1079,"nodeType":"ExpressionStatement","src":"2116:19:8"},{"expression":{"arguments":[{"id":1081,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2152:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1082,"name":"oldbuf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2157:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1080,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1188,1208,1314],"referencedDeclaration":1208,"src":"2145:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1084,"nodeType":"ExpressionStatement","src":"2145:19:8"}]},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"resize","nameLocation":"2013:6:8","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"buf","nameLocation":"2034:3:8","nodeType":"VariableDeclaration","scope":1086,"src":"2020:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1064,"nodeType":"UserDefinedTypeName","pathNode":{"id":1063,"name":"buffer","nameLocations":["2020:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"2020:6:8"},"referencedDeclaration":995,"src":"2020:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"capacity","nameLocation":"2044:8:8","nodeType":"VariableDeclaration","scope":1086,"src":"2039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint","nodeType":"ElementaryTypeName","src":"2039:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2019:34:8"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"2067:0:8"},"scope":1408,"src":"2004:167:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1099,"nodeType":"Block","src":"2394:123:8","statements":[{"AST":{"nodeType":"YulBlock","src":"2413:78:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"2447:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2441:5:8"},"nodeType":"YulFunctionCall","src":"2441:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"2431:6:8","type":""}]},{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"2471:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2479:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2464:6:8"},"nodeType":"YulFunctionCall","src":"2464:17:8"},"nodeType":"YulExpressionStatement","src":"2464:17:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1090,"isOffset":false,"isSlot":false,"src":"2447:3:8","valueSize":1}],"id":1096,"nodeType":"InlineAssembly","src":"2404:87:8"},{"expression":{"id":1097,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2507:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1095,"id":1098,"nodeType":"Return","src":"2500:10:8"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"2177:137:8","text":" @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"truncate","nameLocation":"2328:8:8","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"buf","nameLocation":"2351:3:8","nodeType":"VariableDeclaration","scope":1100,"src":"2337:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1089,"nodeType":"UserDefinedTypeName","pathNode":{"id":1088,"name":"buffer","nameLocations":["2337:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"2337:6:8"},"referencedDeclaration":995,"src":"2337:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2336:19:8"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"2379:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"buffer","nameLocations":["2379:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"2379:6:8"},"referencedDeclaration":995,"src":"2379:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2378:15:8"},"scope":1408,"src":"2319:198:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1187,"nodeType":"Block","src":"2945:1326:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1115,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2963:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1116,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2970:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:6:8","memberName":"length","nodeType":"MemberAccess","src":"2970:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2963:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2955:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"2955:27:8"},{"assignments":[1122],"declarations":[{"constant":false,"id":1122,"mutability":"mutable","name":"off","nameLocation":"2998:3:8","nodeType":"VariableDeclaration","scope":1187,"src":"2993:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint","nodeType":"ElementaryTypeName","src":"2993:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1126,"initialValue":{"expression":{"expression":{"id":1123,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3004:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3008:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"3004:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3012:6:8","memberName":"length","nodeType":"MemberAccess","src":"3004:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2993:25:8"},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"newCapacity","nameLocation":"3033:11:8","nodeType":"VariableDeclaration","scope":1187,"src":"3028:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint","nodeType":"ElementaryTypeName","src":"3028:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3047:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1130,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3053:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3047:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3028:28:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3070:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1134,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3084:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"3084:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"3066:85:8","trueBody":{"id":1144,"nodeType":"Block","src":"3098:53:8","statements":[{"expression":{"arguments":[{"id":1138,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3119:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3124:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3124:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1137,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3112:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"3112:28:8"}]}},{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"dest","nameLocation":"3166:4:8","nodeType":"VariableDeclaration","scope":1187,"src":"3161:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint","nodeType":"ElementaryTypeName","src":"3161:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1148,"nodeType":"VariableDeclarationStatement","src":"3161:9:8"},{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"src","nameLocation":"3185:3:8","nodeType":"VariableDeclaration","scope":1187,"src":"3180:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint","nodeType":"ElementaryTypeName","src":"3180:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1151,"nodeType":"VariableDeclarationStatement","src":"3180:8:8"},{"AST":{"nodeType":"YulBlock","src":"3207:498:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3270:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"3290:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3284:5:8"},"nodeType":"YulFunctionCall","src":"3284:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"3274:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:27:8","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3373:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3367:5:8"},"nodeType":"YulFunctionCall","src":"3367:13:8"},"variables":[{"name":"buflen","nodeType":"YulTypedName","src":"3357:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3472:33:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3488:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3496:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3484:3:8"},"nodeType":"YulFunctionCall","src":"3484:15:8"},{"name":"off","nodeType":"YulIdentifier","src":"3501:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:8"},"nodeType":"YulFunctionCall","src":"3480:25:8"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"3472:4:8"}]},{"body":{"nodeType":"YulBlock","src":"3603:59:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3628:6:8"},{"name":"newCapacity","nodeType":"YulIdentifier","src":"3636:11:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3621:6:8"},"nodeType":"YulFunctionCall","src":"3621:27:8"},"nodeType":"YulExpressionStatement","src":"3621:27:8"}]},"condition":{"arguments":[{"name":"newCapacity","nodeType":"YulIdentifier","src":"3582:11:8"},{"name":"buflen","nodeType":"YulIdentifier","src":"3595:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3579:2:8"},"nodeType":"YulFunctionCall","src":"3579:23:8"},"nodeType":"YulIf","src":"3576:86:8"},{"nodeType":"YulAssignment","src":"3675:20:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3686:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3692:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3682:3:8"},"nodeType":"YulFunctionCall","src":"3682:13:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3675:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1104,"isOffset":false,"isSlot":false,"src":"3290:3:8","valueSize":1},{"declaration":1106,"isOffset":false,"isSlot":false,"src":"3686:4:8","valueSize":1},{"declaration":1147,"isOffset":false,"isSlot":false,"src":"3472:4:8","valueSize":1},{"declaration":1128,"isOffset":false,"isSlot":false,"src":"3582:11:8","valueSize":1},{"declaration":1128,"isOffset":false,"isSlot":false,"src":"3636:11:8","valueSize":1},{"declaration":1122,"isOffset":false,"isSlot":false,"src":"3501:3:8","valueSize":1},{"declaration":1150,"isOffset":false,"isSlot":false,"src":"3675:3:8","valueSize":1}],"id":1152,"nodeType":"InlineAssembly","src":"3198:507:8"},{"body":{"id":1169,"nodeType":"Block","src":"3794:136:8","statements":[{"AST":{"nodeType":"YulBlock","src":"3817:56:8","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3842:4:8"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3854:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3848:5:8"},"nodeType":"YulFunctionCall","src":"3848:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3835:6:8"},"nodeType":"YulFunctionCall","src":"3835:24:8"},"nodeType":"YulExpressionStatement","src":"3835:24:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1147,"isOffset":false,"isSlot":false,"src":"3842:4:8","valueSize":1},{"declaration":1150,"isOffset":false,"isSlot":false,"src":"3854:3:8","valueSize":1}],"id":1160,"nodeType":"InlineAssembly","src":"3808:65:8"},{"expression":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1161,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3886:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3894:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3886:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ExpressionStatement","src":"3886:10:8"},{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1165,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"3910:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3917:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3910:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ExpressionStatement","src":"3910:9:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3772:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3779:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3772:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"loopExpression":{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1156,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3783:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3790:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3783:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"3783:9:8"},"nodeType":"ForStatement","src":"3765:165:8"},{"id":1184,"nodeType":"UncheckedBlock","src":"3972:272:8","statements":[{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"mask","nameLocation":"4001:4:8","nodeType":"VariableDeclaration","scope":1184,"src":"3996:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint","nodeType":"ElementaryTypeName","src":"3996:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4009:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4017:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1175,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4022:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4017:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4016:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4009:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4008:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4008:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3996:35:8"},{"AST":{"nodeType":"YulBlock","src":"4054:180:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4072:41:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4097:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4091:5:8"},"nodeType":"YulFunctionCall","src":"4091:10:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4107:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4103:3:8"},"nodeType":"YulFunctionCall","src":"4103:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4087:3:8"},"nodeType":"YulFunctionCall","src":"4087:26:8"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"4076:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4130:38:8","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4156:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4150:5:8"},"nodeType":"YulFunctionCall","src":"4150:11:8"},{"name":"mask","nodeType":"YulIdentifier","src":"4163:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4146:3:8"},"nodeType":"YulFunctionCall","src":"4146:22:8"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"4134:8:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4192:4:8"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"4201:8:8"},{"name":"srcpart","nodeType":"YulIdentifier","src":"4211:7:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4198:2:8"},"nodeType":"YulFunctionCall","src":"4198:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4185:6:8"},"nodeType":"YulFunctionCall","src":"4185:35:8"},"nodeType":"YulExpressionStatement","src":"4185:35:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1147,"isOffset":false,"isSlot":false,"src":"4156:4:8","valueSize":1},{"declaration":1147,"isOffset":false,"isSlot":false,"src":"4192:4:8","valueSize":1},{"declaration":1172,"isOffset":false,"isSlot":false,"src":"4107:4:8","valueSize":1},{"declaration":1172,"isOffset":false,"isSlot":false,"src":"4163:4:8","valueSize":1},{"declaration":1150,"isOffset":false,"isSlot":false,"src":"4097:3:8","valueSize":1}],"id":1183,"nodeType":"InlineAssembly","src":"4045:189:8"}]},{"expression":{"id":1185,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"4261:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1113,"id":1186,"nodeType":"Return","src":"4254:10:8"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"2523:316:8","text":" @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"2853:6:8","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"buf","nameLocation":"2874:3:8","nodeType":"VariableDeclaration","scope":1188,"src":"2860:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1103,"nodeType":"UserDefinedTypeName","pathNode":{"id":1102,"name":"buffer","nameLocations":["2860:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"2860:6:8"},"referencedDeclaration":995,"src":"2860:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"data","nameLocation":"2892:4:8","nodeType":"VariableDeclaration","scope":1188,"src":"2879:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2879:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"len","nameLocation":"2903:3:8","nodeType":"VariableDeclaration","scope":1188,"src":"2898:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint","nodeType":"ElementaryTypeName","src":"2898:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2859:48:8"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"2930:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1111,"nodeType":"UserDefinedTypeName","pathNode":{"id":1110,"name":"buffer","nameLocations":["2930:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"2930:6:8"},"referencedDeclaration":995,"src":"2930:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2929:15:8"},"scope":1408,"src":"2844:1427:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"4631:54:8","statements":[{"expression":{"arguments":[{"id":1201,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"4655:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1202,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4660:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1203,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4666:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4671:6:8","memberName":"length","nodeType":"MemberAccess","src":"4666:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1188,1208,1314],"referencedDeclaration":1188,"src":"4648:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1199,"id":1206,"nodeType":"Return","src":"4641:37:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"4277:257:8","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4548:6:8","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"buf","nameLocation":"4569:3:8","nodeType":"VariableDeclaration","scope":1208,"src":"4555:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1191,"nodeType":"UserDefinedTypeName","pathNode":{"id":1190,"name":"buffer","nameLocations":["4555:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"4555:6:8"},"referencedDeclaration":995,"src":"4555:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"data","nameLocation":"4587:4:8","nodeType":"VariableDeclaration","scope":1208,"src":"4574:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1193,"name":"bytes","nodeType":"ElementaryTypeName","src":"4574:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4554:38:8"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"4616:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"buffer","nameLocations":["4616:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"4616:6:8"},"referencedDeclaration":995,"src":"4616:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"4615:15:8"},"scope":1408,"src":"4539:146:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"5037:610:8","statements":[{"assignments":[1221],"declarations":[{"constant":false,"id":1221,"mutability":"mutable","name":"off","nameLocation":"5052:3:8","nodeType":"VariableDeclaration","scope":1248,"src":"5047:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint","nodeType":"ElementaryTypeName","src":"5047:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"expression":{"expression":{"id":1222,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5058:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5062:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"5058:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:6:8","memberName":"length","nodeType":"MemberAccess","src":"5058:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5047:25:8"},{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"offPlusOne","nameLocation":"5087:10:8","nodeType":"VariableDeclaration","scope":1248,"src":"5082:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint","nodeType":"ElementaryTypeName","src":"5082:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1231,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5100:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5106:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5100:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5082:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5121:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1233,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5128:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5132:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"5128:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5121:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"5117:77:8","trueBody":{"id":1243,"nodeType":"Block","src":"5142:52:8","statements":[{"expression":{"arguments":[{"id":1237,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5163:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"offPlusOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5168:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5168:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"5156:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"5156:27:8"}]}},{"AST":{"nodeType":"YulBlock","src":"5213:407:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5276:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"5296:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5290:5:8"},"nodeType":"YulFunctionCall","src":"5290:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"5280:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5383:37:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5403:6:8"},{"name":"off","nodeType":"YulIdentifier","src":"5411:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5399:3:8"},"nodeType":"YulFunctionCall","src":"5399:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"5417:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:8"},"nodeType":"YulFunctionCall","src":"5395:25:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"5387:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5441:4:8"},{"name":"data","nodeType":"YulIdentifier","src":"5447:4:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5433:7:8"},"nodeType":"YulFunctionCall","src":"5433:19:8"},"nodeType":"YulExpressionStatement","src":"5433:19:8"},{"body":{"nodeType":"YulBlock","src":"5552:58:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5577:6:8"},{"name":"offPlusOne","nodeType":"YulIdentifier","src":"5585:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5570:6:8"},"nodeType":"YulFunctionCall","src":"5570:26:8"},"nodeType":"YulExpressionStatement","src":"5570:26:8"}]},"condition":{"arguments":[{"name":"offPlusOne","nodeType":"YulIdentifier","src":"5525:10:8"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5543:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5537:5:8"},"nodeType":"YulFunctionCall","src":"5537:13:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5522:2:8"},"nodeType":"YulFunctionCall","src":"5522:29:8"},"nodeType":"YulIf","src":"5519:91:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1212,"isOffset":false,"isSlot":false,"src":"5296:3:8","valueSize":1},{"declaration":1214,"isOffset":false,"isSlot":false,"src":"5447:4:8","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"5411:3:8","valueSize":1},{"declaration":1227,"isOffset":false,"isSlot":false,"src":"5525:10:8","valueSize":1},{"declaration":1227,"isOffset":false,"isSlot":false,"src":"5585:10:8","valueSize":1}],"id":1245,"nodeType":"InlineAssembly","src":"5204:416:8"},{"expression":{"id":1246,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5637:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1219,"id":1247,"nodeType":"Return","src":"5630:10:8"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"4691:252:8","text":" @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"appendUint8","nameLocation":"4957:11:8","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"buf","nameLocation":"4983:3:8","nodeType":"VariableDeclaration","scope":1249,"src":"4969:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"buffer","nameLocations":["4969:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"4969:6:8"},"referencedDeclaration":995,"src":"4969:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"data","nameLocation":"4994:4:8","nodeType":"VariableDeclaration","scope":1249,"src":"4988:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1213,"name":"uint8","nodeType":"ElementaryTypeName","src":"4988:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4968:31:8"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"5022:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"buffer","nameLocations":["5022:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"5022:6:8"},"referencedDeclaration":995,"src":"5022:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"5021:15:8"},"scope":1408,"src":"4948:699:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"6079:854:8","statements":[{"assignments":[1264],"declarations":[{"constant":false,"id":1264,"mutability":"mutable","name":"off","nameLocation":"6094:3:8","nodeType":"VariableDeclaration","scope":1313,"src":"6089:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint","nodeType":"ElementaryTypeName","src":"6089:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1268,"initialValue":{"expression":{"expression":{"id":1265,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6100:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6104:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"6100:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6108:6:8","memberName":"length","nodeType":"MemberAccess","src":"6100:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6089:25:8"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"newCapacity","nameLocation":"6129:11:8","nodeType":"VariableDeclaration","scope":1313,"src":"6124:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint","nodeType":"ElementaryTypeName","src":"6124:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1274,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6143:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1272,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6149:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6143:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6124:28:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6166:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1276,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6180:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6184:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6180:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6166:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1287,"nodeType":"IfStatement","src":"6162:85:8","trueBody":{"id":1286,"nodeType":"Block","src":"6194:53:8","statements":[{"expression":{"arguments":[{"id":1280,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6215:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6220:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6234:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6220:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1279,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6208:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"ExpressionStatement","src":"6208:28:8"}]}},{"id":1310,"nodeType":"UncheckedBlock","src":"6257:650:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"mask","nameLocation":"6286:4:8","nodeType":"VariableDeclaration","scope":1310,"src":"6281:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint","nodeType":"ElementaryTypeName","src":"6281:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6294:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1291,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6301:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6294:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6293:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6308:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6293:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6281:28:8"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1297,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6355:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6362:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6371:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1301,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6381:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6376:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6375:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6371:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6370:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6362:24:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6355:31:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1308,"nodeType":"ExpressionStatement","src":"6355:31:8"},{"AST":{"nodeType":"YulBlock","src":"6409:488:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6480:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"6500:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6494:5:8"},"nodeType":"YulFunctionCall","src":"6494:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"6484:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6603:36:8","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"6619:6:8"},{"name":"newCapacity","nodeType":"YulIdentifier","src":"6627:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6615:3:8"},"nodeType":"YulFunctionCall","src":"6615:24:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"6607:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"6663:4:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"6682:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6676:5:8"},"nodeType":"YulFunctionCall","src":"6676:11:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6693:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6689:3:8"},"nodeType":"YulFunctionCall","src":"6689:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6672:3:8"},"nodeType":"YulFunctionCall","src":"6672:27:8"},{"name":"data","nodeType":"YulIdentifier","src":"6701:4:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6669:2:8"},"nodeType":"YulFunctionCall","src":"6669:37:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6656:6:8"},"nodeType":"YulFunctionCall","src":"6656:51:8"},"nodeType":"YulExpressionStatement","src":"6656:51:8"},{"body":{"nodeType":"YulBlock","src":"6816:67:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"6845:6:8"},{"name":"newCapacity","nodeType":"YulIdentifier","src":"6853:11:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6838:6:8"},"nodeType":"YulFunctionCall","src":"6838:27:8"},"nodeType":"YulExpressionStatement","src":"6838:27:8"}]},"condition":{"arguments":[{"name":"newCapacity","nodeType":"YulIdentifier","src":"6788:11:8"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"6807:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6801:5:8"},"nodeType":"YulFunctionCall","src":"6801:13:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6785:2:8"},"nodeType":"YulFunctionCall","src":"6785:30:8"},"nodeType":"YulIf","src":"6782:101:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1253,"isOffset":false,"isSlot":false,"src":"6500:3:8","valueSize":1},{"declaration":1255,"isOffset":false,"isSlot":false,"src":"6701:4:8","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"6693:4:8","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"6627:11:8","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"6788:11:8","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"6853:11:8","valueSize":1}],"id":1309,"nodeType":"InlineAssembly","src":"6400:497:8"}]},{"expression":{"id":1311,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6923:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1262,"id":1312,"nodeType":"Return","src":"6916:10:8"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"5653:326:8","text":" @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"5993:6:8","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"buf","nameLocation":"6014:3:8","nodeType":"VariableDeclaration","scope":1314,"src":"6000:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1252,"nodeType":"UserDefinedTypeName","pathNode":{"id":1251,"name":"buffer","nameLocations":["6000:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"6000:6:8"},"referencedDeclaration":995,"src":"6000:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"data","nameLocation":"6027:4:8","nodeType":"VariableDeclaration","scope":1314,"src":"6019:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"len","nameLocation":"6038:3:8","nodeType":"VariableDeclaration","scope":1314,"src":"6033:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint","nodeType":"ElementaryTypeName","src":"6033:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5999:43:8"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1314,"src":"6064:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"buffer","nameLocations":["6064:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"6064:6:8"},"referencedDeclaration":995,"src":"6064:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"6063:15:8"},"scope":1408,"src":"5984:949:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1335,"nodeType":"Block","src":"7294:54:8","statements":[{"expression":{"arguments":[{"id":1327,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7318:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"arguments":[{"id":1330,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7331:4:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7323:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7323:7:8","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":1326,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1188,1208,1314],"referencedDeclaration":1314,"src":"7311:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1325,"id":1334,"nodeType":"Return","src":"7304:37:8"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"6939:256:8","text":" @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes20","nameLocation":"7209:13:8","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"buf","nameLocation":"7237:3:8","nodeType":"VariableDeclaration","scope":1336,"src":"7223:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1317,"nodeType":"UserDefinedTypeName","pathNode":{"id":1316,"name":"buffer","nameLocations":["7223:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"7223:6:8"},"referencedDeclaration":995,"src":"7223:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"7250:4:8","nodeType":"VariableDeclaration","scope":1336,"src":"7242:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1319,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7242:7:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7222:33:8"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"7279:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"buffer","nameLocations":["7279:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"7279:6:8"},"referencedDeclaration":995,"src":"7279:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7278:15:8"},"scope":1408,"src":"7200:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"7708:45:8","statements":[{"expression":{"arguments":[{"id":1349,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7732:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"7737:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3332","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7743:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1348,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1188,1208,1314],"referencedDeclaration":1314,"src":"7725:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1347,"id":1353,"nodeType":"Return","src":"7718:28:8"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"7354:255:8","text":" @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes32","nameLocation":"7623:13:8","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"buf","nameLocation":"7651:3:8","nodeType":"VariableDeclaration","scope":1355,"src":"7637:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"buffer","nameLocations":["7637:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"7637:6:8"},"referencedDeclaration":995,"src":"7637:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"7664:4:8","nodeType":"VariableDeclaration","scope":1355,"src":"7656:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7656:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7636:33:8"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1355,"src":"7693:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"buffer","nameLocations":["7693:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"7693:6:8"},"referencedDeclaration":995,"src":"7693:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7692:15:8"},"scope":1408,"src":"7614:139:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1406,"nodeType":"Block","src":"8179:699:8","statements":[{"assignments":[1370],"declarations":[{"constant":false,"id":1370,"mutability":"mutable","name":"off","nameLocation":"8194:3:8","nodeType":"VariableDeclaration","scope":1406,"src":"8189:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint","nodeType":"ElementaryTypeName","src":"8189:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"initialValue":{"expression":{"expression":{"id":1371,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"8200:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8204:3:8","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"8200:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8208:6:8","memberName":"length","nodeType":"MemberAccess","src":"8200:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8189:25:8"},{"assignments":[1376],"declarations":[{"constant":false,"id":1376,"mutability":"mutable","name":"newCapacity","nameLocation":"8229:11:8","nodeType":"VariableDeclaration","scope":1406,"src":"8224:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint","nodeType":"ElementaryTypeName","src":"8224:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1380,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8243:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1378,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8249:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8243:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8224:28:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8266:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1382,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"8280:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8280:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8266:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"8262:85:8","trueBody":{"id":1392,"nodeType":"Block","src":"8294:53:8","statements":[{"expression":{"arguments":[{"id":1386,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"8315:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8320:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8334:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8320:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8308:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"8308:28:8"}]}},{"assignments":[1395],"declarations":[{"constant":false,"id":1395,"mutability":"mutable","name":"mask","nameLocation":"8362:4:8","nodeType":"VariableDeclaration","scope":1406,"src":"8357:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint","nodeType":"ElementaryTypeName","src":"8357:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1402,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8370:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1397,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8377:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8370:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8369:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8384:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8369:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8357:28:8"},{"AST":{"nodeType":"YulBlock","src":"8404:448:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8467:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"8487:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8481:5:8"},"nodeType":"YulFunctionCall","src":"8481:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"8471:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8582:36:8","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"8598:6:8"},{"name":"newCapacity","nodeType":"YulIdentifier","src":"8606:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8594:3:8"},"nodeType":"YulFunctionCall","src":"8594:24:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"8586:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"8638:4:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"8657:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8651:5:8"},"nodeType":"YulFunctionCall","src":"8651:11:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"8668:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8664:3:8"},"nodeType":"YulFunctionCall","src":"8664:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8647:3:8"},"nodeType":"YulFunctionCall","src":"8647:27:8"},{"name":"data","nodeType":"YulIdentifier","src":"8676:4:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8644:2:8"},"nodeType":"YulFunctionCall","src":"8644:37:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8631:6:8"},"nodeType":"YulFunctionCall","src":"8631:51:8"},"nodeType":"YulExpressionStatement","src":"8631:51:8"},{"body":{"nodeType":"YulBlock","src":"8783:59:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"8808:6:8"},{"name":"newCapacity","nodeType":"YulIdentifier","src":"8816:11:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:8"},"nodeType":"YulFunctionCall","src":"8801:27:8"},"nodeType":"YulExpressionStatement","src":"8801:27:8"}]},"condition":{"arguments":[{"name":"newCapacity","nodeType":"YulIdentifier","src":"8755:11:8"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"8774:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8768:5:8"},"nodeType":"YulFunctionCall","src":"8768:13:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8752:2:8"},"nodeType":"YulFunctionCall","src":"8752:30:8"},"nodeType":"YulIf","src":"8749:93:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1359,"isOffset":false,"isSlot":false,"src":"8487:3:8","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":false,"src":"8676:4:8","valueSize":1},{"declaration":1395,"isOffset":false,"isSlot":false,"src":"8668:4:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"8606:11:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"8755:11:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"8816:11:8","valueSize":1}],"id":1403,"nodeType":"InlineAssembly","src":"8395:457:8"},{"expression":{"id":1404,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"8868:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1368,"id":1405,"nodeType":"Return","src":"8861:10:8"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"7759:319:8","text":" @dev Appends a byte to the end of the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer."},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"appendInt","nameLocation":"8092:9:8","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"buf","nameLocation":"8116:3:8","nodeType":"VariableDeclaration","scope":1407,"src":"8102:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"buffer","nameLocations":["8102:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"8102:6:8"},"referencedDeclaration":995,"src":"8102:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"data","nameLocation":"8126:4:8","nodeType":"VariableDeclaration","scope":1407,"src":"8121:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint","nodeType":"ElementaryTypeName","src":"8121:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"len","nameLocation":"8137:3:8","nodeType":"VariableDeclaration","scope":1407,"src":"8132:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint","nodeType":"ElementaryTypeName","src":"8132:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8101:40:8"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"8164:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"buffer","nameLocations":["8164:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"8164:6:8"},"referencedDeclaration":995,"src":"8164:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"8163:15:8"},"scope":1408,"src":"8083:795:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1409,"src":"445:8435:8","usedErrors":[],"usedEvents":[]}],"src":"41:8839:8"},"id":8},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","exportedSymbols":{"Buffer":[1408],"CBOR":[2267]},"id":2268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","file":"../../@ensdomains/buffer/v0.1.0/Buffer.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2268,"sourceUnit":1409,"src":"57:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CBOR","contractDependencies":[],"contractKind":"library","documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"111:553:9","text":" @dev A library for populating CBOR encoded payload in Solidity.\n https://datatracker.ietf.org/doc/html/rfc7049\n The library offers various write* and start* methods to encode values of different types.\n The resulted buffer can be obtained with data() method.\n Encoding of primitive types is staightforward, whereas encoding of sequences can result\n in an invalid CBOR if start/write/end flow is violated.\n For the purpose of gas saving, the library does not verify start/write/end flow internally,\n except for nested start/end pairs."},"fullyImplemented":true,"id":2267,"linearizedBaseContracts":[2267],"name":"CBOR","nameLocation":"674:4:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1416,"libraryName":{"id":1413,"name":"Buffer","nameLocations":["691:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1408,"src":"691:6:9"},"nodeType":"UsingForDirective","src":"685:31:9","typeName":{"id":1415,"nodeType":"UserDefinedTypeName","pathNode":{"id":1414,"name":"Buffer.buffer","nameLocations":["702:6:9","709:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"702:13:9"},"referencedDeclaration":995,"src":"702:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}}},{"canonicalName":"CBOR.CBORBuffer","id":1422,"members":[{"constant":false,"id":1419,"mutability":"mutable","name":"buf","nameLocation":"764:3:9","nodeType":"VariableDeclaration","scope":1422,"src":"750:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1418,"nodeType":"UserDefinedTypeName","pathNode":{"id":1417,"name":"Buffer.buffer","nameLocations":["750:6:9","757:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":995,"src":"750:13:9"},"referencedDeclaration":995,"src":"750:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"depth","nameLocation":"785:5:9","nodeType":"VariableDeclaration","scope":1422,"src":"777:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CBORBuffer","nameLocation":"729:10:9","nodeType":"StructDefinition","scope":2267,"src":"722:75:9","visibility":"public"},{"constant":true,"id":1425,"mutability":"constant","name":"MAJOR_TYPE_INT","nameLocation":"826:14:9","nodeType":"VariableDeclaration","scope":2267,"src":"803:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1423,"name":"uint8","nodeType":"ElementaryTypeName","src":"803:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1428,"mutability":"constant","name":"MAJOR_TYPE_NEGATIVE_INT","nameLocation":"873:23:9","nodeType":"VariableDeclaration","scope":2267,"src":"850:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1426,"name":"uint8","nodeType":"ElementaryTypeName","src":"850:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1431,"mutability":"constant","name":"MAJOR_TYPE_BYTES","nameLocation":"929:16:9","nodeType":"VariableDeclaration","scope":2267,"src":"906:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1429,"name":"uint8","nodeType":"ElementaryTypeName","src":"906:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1434,"mutability":"constant","name":"MAJOR_TYPE_STRING","nameLocation":"978:17:9","nodeType":"VariableDeclaration","scope":2267,"src":"955:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1432,"name":"uint8","nodeType":"ElementaryTypeName","src":"955:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"998:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1437,"mutability":"constant","name":"MAJOR_TYPE_ARRAY","nameLocation":"1028:16:9","nodeType":"VariableDeclaration","scope":2267,"src":"1005:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1435,"name":"uint8","nodeType":"ElementaryTypeName","src":"1005:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1440,"mutability":"constant","name":"MAJOR_TYPE_MAP","nameLocation":"1077:14:9","nodeType":"VariableDeclaration","scope":2267,"src":"1054:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1438,"name":"uint8","nodeType":"ElementaryTypeName","src":"1054:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"35","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1094:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"private"},{"constant":true,"id":1443,"mutability":"constant","name":"MAJOR_TYPE_TAG","nameLocation":"1124:14:9","nodeType":"VariableDeclaration","scope":2267,"src":"1101:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1441,"name":"uint8","nodeType":"ElementaryTypeName","src":"1101:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1141:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":true,"id":1446,"mutability":"constant","name":"MAJOR_TYPE_CONTENT_FREE","nameLocation":"1171:23:9","nodeType":"VariableDeclaration","scope":2267,"src":"1148:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1444,"name":"uint8","nodeType":"ElementaryTypeName","src":"1148:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"37","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1197:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":1449,"mutability":"constant","name":"TAG_TYPE_BIGNUM","nameLocation":"1228:15:9","nodeType":"VariableDeclaration","scope":2267,"src":"1205:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1447,"name":"uint8","nodeType":"ElementaryTypeName","src":"1205:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1246:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1452,"mutability":"constant","name":"TAG_TYPE_NEGATIVE_BIGNUM","nameLocation":"1276:24:9","nodeType":"VariableDeclaration","scope":2267,"src":"1253:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1450,"name":"uint8","nodeType":"ElementaryTypeName","src":"1253:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1303:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1455,"mutability":"constant","name":"CBOR_FALSE","nameLocation":"1334:10:9","nodeType":"VariableDeclaration","scope":2267,"src":"1311:38:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1453,"name":"uint8","nodeType":"ElementaryTypeName","src":"1311:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1458,"mutability":"constant","name":"CBOR_TRUE","nameLocation":"1378:9:9","nodeType":"VariableDeclaration","scope":2267,"src":"1355:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1456,"name":"uint8","nodeType":"ElementaryTypeName","src":"1355:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3231","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:2:9","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"visibility":"private"},{"constant":true,"id":1461,"mutability":"constant","name":"CBOR_NULL","nameLocation":"1421:9:9","nodeType":"VariableDeclaration","scope":2267,"src":"1398:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1459,"name":"uint8","nodeType":"ElementaryTypeName","src":"1398:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3232","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:2:9","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"visibility":"private"},{"constant":true,"id":1464,"mutability":"constant","name":"CBOR_UNDEFINED","nameLocation":"1464:14:9","nodeType":"VariableDeclaration","scope":2267,"src":"1441:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1462,"name":"uint8","nodeType":"ElementaryTypeName","src":"1441:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3233","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1481:2:9","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"visibility":"private"},{"body":{"id":1488,"nodeType":"Block","src":"1570:93:9","statements":[{"expression":{"arguments":[{"expression":{"id":1475,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1592:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"1592:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1477,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"1602:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1472,"name":"Buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1580:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Buffer_$1408_$","typeString":"type(library Buffer)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:4:9","memberName":"init","nodeType":"MemberAccess","referencedDeclaration":1033,"src":"1580:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1479,"nodeType":"ExpressionStatement","src":"1580:31:9"},{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1480,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1621:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1626:5:9","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"1621:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1634:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1621:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ExpressionStatement","src":"1621:14:9"},{"expression":{"id":1486,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1652:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"functionReturnParameters":1471,"id":1487,"nodeType":"Return","src":"1645:11:9"}]},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"1499:6:9","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"capacity","nameLocation":"1514:8:9","nodeType":"VariableDeclaration","scope":1489,"src":"1506:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:18:9"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"cbor","nameLocation":"1564:4:9","nodeType":"VariableDeclaration","scope":1489,"src":"1546:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1469,"nodeType":"UserDefinedTypeName","pathNode":{"id":1468,"name":"CBORBuffer","nameLocations":["1546:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"1546:10:9"},"referencedDeclaration":1422,"src":"1546:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1545:24:9"},"scope":2267,"src":"1490:173:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"1742:84:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1498,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1760:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1764:5:9","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"1760:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1773:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1760:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642043424f52","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1776:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""},"value":"Invalid CBOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""}],"id":1497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1752:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"ExpressionStatement","src":"1752:39:9"},{"expression":{"expression":{"expression":{"id":1505,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1808:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1812:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"1808:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1816:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":992,"src":"1808:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1496,"id":1508,"nodeType":"Return","src":"1801:18:9"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"data","nameLocation":"1678:4:9","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"buf","nameLocation":"1701:3:9","nodeType":"VariableDeclaration","scope":1510,"src":"1683:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"CBORBuffer","nameLocations":["1683:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"1683:10:9"},"referencedDeclaration":1422,"src":"1683:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1682:23:9"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"1728:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"1728:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1727:14:9"},"scope":2267,"src":"1669:157:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1542,"nodeType":"Block","src":"1906:128:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1525,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1943:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1943:19:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1942:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1529,"name":"TAG_TYPE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"1966:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1942:39:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1523,"name":"uint8","nodeType":"ElementaryTypeName","src":"1936:5:9","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1518,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1916:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1920:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"1916:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1924:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"1916:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1533,"nodeType":"ExpressionStatement","src":"1916:67:9"},{"expression":{"arguments":[{"id":1535,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2004:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2020:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1536,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2009:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2013:6:9","memberName":"encode","nodeType":"MemberAccess","src":"2009:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1534,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1993:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"ExpressionStatement","src":"1993:34:9"}]},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt256","nameLocation":"1841:12:9","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"buf","nameLocation":"1872:3:9","nodeType":"VariableDeclaration","scope":1543,"src":"1854:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1512,"nodeType":"UserDefinedTypeName","pathNode":{"id":1511,"name":"CBORBuffer","nameLocations":["1854:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"1854:10:9"},"referencedDeclaration":1422,"src":"1854:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"value","nameLocation":"1885:5:9","nodeType":"VariableDeclaration","scope":1543,"src":"1877:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1853:38:9"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[],"src":"1906:0:9"},"scope":2267,"src":"1832:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"2112:288:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2126:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2134:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2126:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1593,"nodeType":"Block","src":"2336:58:9","statements":[{"expression":{"arguments":[{"id":1586,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2363:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2376:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:9","typeDescriptions":{}}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1585,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2350:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"2350:33:9"}]},"id":1594,"nodeType":"IfStatement","src":"2122:272:9","trueBody":{"id":1584,"nodeType":"Block","src":"2137:193:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1561,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"2195:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2213:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2195:19:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2194:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1565,"name":"TAG_TYPE_NEGATIVE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"2218:24:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2194:48:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2188:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1559,"name":"uint8","nodeType":"ElementaryTypeName","src":"2188:5:9","typeDescriptions":{}}},"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2188:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1554,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2151:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2155:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"2151:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2159:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"2151:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:106:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1569,"nodeType":"ExpressionStatement","src":"2151:106:9"},{"expression":{"arguments":[{"id":1571,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2282:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2306:2:9","subExpression":{"hexValue":"31","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2307:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2311:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2306:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:9","typeDescriptions":{}}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1572,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2287:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2291:6:9","memberName":"encode","nodeType":"MemberAccess","src":"2287:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1570,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"2271:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"ExpressionStatement","src":"2271:48:9"}]}}]},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt256","nameLocation":"2049:11:9","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"buf","nameLocation":"2079:3:9","nodeType":"VariableDeclaration","scope":1596,"src":"2061:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1545,"nodeType":"UserDefinedTypeName","pathNode":{"id":1544,"name":"CBORBuffer","nameLocations":["2061:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2061:10:9"},"referencedDeclaration":1422,"src":"2061:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"2091:5:9","nodeType":"VariableDeclaration","scope":1596,"src":"2084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1547,"name":"int256","nodeType":"ElementaryTypeName","src":"2084:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2060:37:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"2112:0:9"},"scope":2267,"src":"2040:360:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"2478:62:9","statements":[{"expression":{"arguments":[{"id":1605,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2506:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1606,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"2511:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2527:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1604,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2488:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"2488:45:9"}]},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt64","nameLocation":"2415:11:9","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"buf","nameLocation":"2445:3:9","nodeType":"VariableDeclaration","scope":1611,"src":"2427:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1598,"nodeType":"UserDefinedTypeName","pathNode":{"id":1597,"name":"CBORBuffer","nameLocations":["2427:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2427:10:9"},"referencedDeclaration":1422,"src":"2427:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"value","nameLocation":"2457:5:9","nodeType":"VariableDeclaration","scope":1611,"src":"2450:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1600,"name":"uint64","nodeType":"ElementaryTypeName","src":"2450:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2426:37:9"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"2478:0:9"},"scope":2267,"src":"2406:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"2616:206:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2629:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2629:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1644,"nodeType":"Block","src":"2724:92:9","statements":[{"expression":{"arguments":[{"id":1633,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2756:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1634,"name":"MAJOR_TYPE_NEGATIVE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2761:23:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2793:2:9","subExpression":{"hexValue":"31","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2798:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"2793:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2786:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1635,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:9","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1632,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2738:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1643,"nodeType":"ExpressionStatement","src":"2738:67:9"}]},"id":1645,"nodeType":"IfStatement","src":"2626:190:9","trueBody":{"id":1631,"nodeType":"Block","src":"2641:78:9","statements":[{"expression":{"arguments":[{"id":1623,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2673:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1624,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"2678:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2701:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2694:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1625,"name":"uint64","nodeType":"ElementaryTypeName","src":"2694:6:9","typeDescriptions":{}}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1622,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2655:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1630,"nodeType":"ExpressionStatement","src":"2655:53:9"}]}}]},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt64","nameLocation":"2555:10:9","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"buf","nameLocation":"2584:3:9","nodeType":"VariableDeclaration","scope":1647,"src":"2566:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1613,"nodeType":"UserDefinedTypeName","pathNode":{"id":1612,"name":"CBORBuffer","nameLocations":["2566:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2566:10:9"},"referencedDeclaration":1422,"src":"2566:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"value","nameLocation":"2595:5:9","nodeType":"VariableDeclaration","scope":1647,"src":"2589:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1615,"name":"int64","nodeType":"ElementaryTypeName","src":"2589:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"2565:36:9"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[],"src":"2616:0:9"},"scope":2267,"src":"2546:276:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"2905:110:9","statements":[{"expression":{"arguments":[{"id":1656,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2933:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1657,"name":"MAJOR_TYPE_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2938:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"id":1660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2963:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:9","memberName":"length","nodeType":"MemberAccess","src":"2963:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2956:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1658,"name":"uint64","nodeType":"ElementaryTypeName","src":"2956:6:9","typeDescriptions":{}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2956:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1655,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2915:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"2915:62:9"},{"expression":{"arguments":[{"id":1670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3002:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1665,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2987:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"2987:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2995:6:9","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"2987:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1672,"nodeType":"ExpressionStatement","src":"2987:21:9"}]},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"2837:10:9","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"buf","nameLocation":"2866:3:9","nodeType":"VariableDeclaration","scope":1674,"src":"2848:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1649,"nodeType":"UserDefinedTypeName","pathNode":{"id":1648,"name":"CBORBuffer","nameLocations":["2848:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2848:10:9"},"referencedDeclaration":1422,"src":"2848:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"value","nameLocation":"2884:5:9","nodeType":"VariableDeclaration","scope":1674,"src":"2871:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"2871:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2847:43:9"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"2905:0:9"},"scope":2267,"src":"2828:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"3100:125:9","statements":[{"expression":{"arguments":[{"id":1683,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"3128:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1684,"name":"MAJOR_TYPE_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3133:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"arguments":[{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"3165:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3159:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1687,"name":"bytes","nodeType":"ElementaryTypeName","src":"3159:5:9","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:6:9","memberName":"length","nodeType":"MemberAccess","src":"3159:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3152:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1685,"name":"uint64","nodeType":"ElementaryTypeName","src":"3152:6:9","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1682,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"3110:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"3110:70:9"},{"expression":{"arguments":[{"arguments":[{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"3211:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3205:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1700,"name":"bytes","nodeType":"ElementaryTypeName","src":"3205:5:9","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1695,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"3190:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3194:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"3190:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3198:6:9","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3190:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1705,"nodeType":"ExpressionStatement","src":"3190:28:9"}]},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"3030:11:9","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"buf","nameLocation":"3060:3:9","nodeType":"VariableDeclaration","scope":1707,"src":"3042:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1676,"nodeType":"UserDefinedTypeName","pathNode":{"id":1675,"name":"CBORBuffer","nameLocations":["3042:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3042:10:9"},"referencedDeclaration":1422,"src":"3042:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"value","nameLocation":"3079:5:9","nodeType":"VariableDeclaration","scope":1707,"src":"3065:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1678,"name":"string","nodeType":"ElementaryTypeName","src":"3065:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3041:44:9"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"3100:0:9"},"scope":2267,"src":"3021:204:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"3299:70:9","statements":[{"expression":{"arguments":[{"id":1716,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3326:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"condition":{"id":1717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3331:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1719,"name":"CBOR_FALSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3351:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3331:30:9","trueExpression":{"id":1718,"name":"CBOR_TRUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3339:9:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1715,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3309:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3309:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"ExpressionStatement","src":"3309:53:9"}]},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"3240:9:9","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"buf","nameLocation":"3268:3:9","nodeType":"VariableDeclaration","scope":1724,"src":"3250:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"CBORBuffer","nameLocations":["3250:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3250:10:9"},"referencedDeclaration":1422,"src":"3250:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"value","nameLocation":"3278:5:9","nodeType":"VariableDeclaration","scope":1724,"src":"3273:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"3273:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3249:35:9"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"3299:0:9"},"scope":2267,"src":"3231:138:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1735,"nodeType":"Block","src":"3431:49:9","statements":[{"expression":{"arguments":[{"id":1731,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3458:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1732,"name":"CBOR_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3463:9:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1730,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3441:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"3441:32:9"}]},"id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"writeNull","nameLocation":"3384:9:9","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"buf","nameLocation":"3412:3:9","nodeType":"VariableDeclaration","scope":1736,"src":"3394:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1726,"nodeType":"UserDefinedTypeName","pathNode":{"id":1725,"name":"CBORBuffer","nameLocations":["3394:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3394:10:9"},"referencedDeclaration":1422,"src":"3394:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3393:23:9"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[],"src":"3431:0:9"},"scope":2267,"src":"3375:105:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"3547:54:9","statements":[{"expression":{"arguments":[{"id":1743,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"3574:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1744,"name":"CBOR_UNDEFINED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"3579:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1742,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3557:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1746,"nodeType":"ExpressionStatement","src":"3557:37:9"}]},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"writeUndefined","nameLocation":"3495:14:9","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"buf","nameLocation":"3528:3:9","nodeType":"VariableDeclaration","scope":1748,"src":"3510:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"CBORBuffer","nameLocations":["3510:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3510:10:9"},"referencedDeclaration":1422,"src":"3510:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3509:23:9"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"3547:0:9"},"scope":2267,"src":"3486:115:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"3664:89:9","statements":[{"expression":{"arguments":[{"id":1755,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3700:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1756,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3705:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1754,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3674:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"3674:48:9"},{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1759,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3732:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3736:5:9","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"3732:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3732:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1764,"nodeType":"ExpressionStatement","src":"3732:14:9"}]},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"startArray","nameLocation":"3616:10:9","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"buf","nameLocation":"3645:3:9","nodeType":"VariableDeclaration","scope":1766,"src":"3627:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1750,"nodeType":"UserDefinedTypeName","pathNode":{"id":1749,"name":"CBORBuffer","nameLocations":["3627:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3627:10:9"},"referencedDeclaration":1422,"src":"3627:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3626:23:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"3664:0:9"},"scope":2267,"src":"3607:146:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1780,"nodeType":"Block","src":"3836:71:9","statements":[{"expression":{"arguments":[{"id":1775,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3870:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1776,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3875:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1777,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3893:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1774,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3846:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"3846:54:9"}]},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedArray","nameLocation":"3768:15:9","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"buf","nameLocation":"3802:3:9","nodeType":"VariableDeclaration","scope":1781,"src":"3784:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1768,"nodeType":"UserDefinedTypeName","pathNode":{"id":1767,"name":"CBORBuffer","nameLocations":["3784:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3784:10:9"},"referencedDeclaration":1422,"src":"3784:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"length","nameLocation":"3814:6:9","nodeType":"VariableDeclaration","scope":1781,"src":"3807:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1770,"name":"uint64","nodeType":"ElementaryTypeName","src":"3807:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3783:38:9"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[],"src":"3836:0:9"},"scope":2267,"src":"3759:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"3968:87:9","statements":[{"expression":{"arguments":[{"id":1788,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4004:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1789,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"4009:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1787,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3978:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3978:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"3978:46:9"},{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1792,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4034:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4038:5:9","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"4034:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4034:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"4034:14:9"}]},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"startMap","nameLocation":"3922:8:9","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"buf","nameLocation":"3949:3:9","nodeType":"VariableDeclaration","scope":1799,"src":"3931:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1783,"nodeType":"UserDefinedTypeName","pathNode":{"id":1782,"name":"CBORBuffer","nameLocations":["3931:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3931:10:9"},"referencedDeclaration":1422,"src":"3931:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3930:23:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"3968:0:9"},"scope":2267,"src":"3913:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1813,"nodeType":"Block","src":"4136:69:9","statements":[{"expression":{"arguments":[{"id":1808,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4170:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1809,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"4175:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1810,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"4191:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1807,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4146:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"4146:52:9"}]},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedMap","nameLocation":"4070:13:9","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"buf","nameLocation":"4102:3:9","nodeType":"VariableDeclaration","scope":1814,"src":"4084:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1801,"nodeType":"UserDefinedTypeName","pathNode":{"id":1800,"name":"CBORBuffer","nameLocations":["4084:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4084:10:9"},"referencedDeclaration":1422,"src":"4084:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"length","nameLocation":"4114:6:9","nodeType":"VariableDeclaration","scope":1814,"src":"4107:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1803,"name":"uint64","nodeType":"ElementaryTypeName","src":"4107:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4083:38:9"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[],"src":"4136:0:9"},"scope":2267,"src":"4061:144:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1831,"nodeType":"Block","src":"4269:96:9","statements":[{"expression":{"arguments":[{"id":1821,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"4305:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1822,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"4310:23:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1820,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"4279:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"4279:55:9"},{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1825,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"4344:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4348:5:9","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"4344:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4344:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"4344:14:9"}]},"id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"endSequence","nameLocation":"4220:11:9","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"buf","nameLocation":"4250:3:9","nodeType":"VariableDeclaration","scope":1832,"src":"4232:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1816,"nodeType":"UserDefinedTypeName","pathNode":{"id":1815,"name":"CBORBuffer","nameLocations":["4232:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4232:10:9"},"referencedDeclaration":1422,"src":"4232:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"4231:23:9"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"4269:0:9"},"scope":2267,"src":"4211:154:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"4471:71:9","statements":[{"expression":{"arguments":[{"id":1843,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4493:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1844,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"4498:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1842,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4481:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"4481:21:9"},{"expression":{"arguments":[{"id":1848,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4524:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"4529:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4512:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"ExpressionStatement","src":"4512:23:9"}]},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVString","nameLocation":"4380:13:9","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"buf","nameLocation":"4412:3:9","nodeType":"VariableDeclaration","scope":1853,"src":"4394:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1834,"nodeType":"UserDefinedTypeName","pathNode":{"id":1833,"name":"CBORBuffer","nameLocations":["4394:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4394:10:9"},"referencedDeclaration":1422,"src":"4394:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"key","nameLocation":"4431:3:9","nodeType":"VariableDeclaration","scope":1853,"src":"4417:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"4417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"value","nameLocation":"4450:5:9","nodeType":"VariableDeclaration","scope":1853,"src":"4436:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1838,"name":"string","nodeType":"ElementaryTypeName","src":"4436:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4393:63:9"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"4471:0:9"},"scope":2267,"src":"4371:171:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1873,"nodeType":"Block","src":"4646:70:9","statements":[{"expression":{"arguments":[{"id":1864,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"4668:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1865,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4673:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1863,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4656:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"ExpressionStatement","src":"4656:21:9"},{"expression":{"arguments":[{"id":1869,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"4698:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"4703:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"4687:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"ExpressionStatement","src":"4687:22:9"}]},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBytes","nameLocation":"4557:12:9","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"buf","nameLocation":"4588:3:9","nodeType":"VariableDeclaration","scope":1874,"src":"4570:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1855,"nodeType":"UserDefinedTypeName","pathNode":{"id":1854,"name":"CBORBuffer","nameLocations":["4570:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4570:10:9"},"referencedDeclaration":1422,"src":"4570:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"key","nameLocation":"4607:3:9","nodeType":"VariableDeclaration","scope":1874,"src":"4593:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"4593:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"value","nameLocation":"4625:5:9","nodeType":"VariableDeclaration","scope":1874,"src":"4612:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"4612:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4569:62:9"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"4646:0:9"},"scope":2267,"src":"4548:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"4817:72:9","statements":[{"expression":{"arguments":[{"id":1885,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4839:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1886,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4844:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1884,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4827:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"4827:21:9"},{"expression":{"arguments":[{"id":1890,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4871:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4876:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1889,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"4858:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4858:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"4858:24:9"}]},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt256","nameLocation":"4731:14:9","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"buf","nameLocation":"4764:3:9","nodeType":"VariableDeclaration","scope":1895,"src":"4746:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"CBORBuffer","nameLocations":["4746:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4746:10:9"},"referencedDeclaration":1422,"src":"4746:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"key","nameLocation":"4783:3:9","nodeType":"VariableDeclaration","scope":1895,"src":"4769:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"4769:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"value","nameLocation":"4796:5:9","nodeType":"VariableDeclaration","scope":1895,"src":"4788:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4788:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:57:9"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"4817:0:9"},"scope":2267,"src":"4722:167:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1915,"nodeType":"Block","src":"4988:71:9","statements":[{"expression":{"arguments":[{"id":1906,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5010:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1907,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5015:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1905,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4998:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1909,"nodeType":"ExpressionStatement","src":"4998:21:9"},{"expression":{"arguments":[{"id":1911,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5041:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"5046:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1910,"name":"writeInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"5029:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_int256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int256) pure"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"ExpressionStatement","src":"5029:23:9"}]},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt256","nameLocation":"4904:13:9","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"buf","nameLocation":"4936:3:9","nodeType":"VariableDeclaration","scope":1916,"src":"4918:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"CBORBuffer","nameLocations":["4918:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"4918:10:9"},"referencedDeclaration":1422,"src":"4918:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"key","nameLocation":"4955:3:9","nodeType":"VariableDeclaration","scope":1916,"src":"4941:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1899,"name":"string","nodeType":"ElementaryTypeName","src":"4941:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"value","nameLocation":"4967:5:9","nodeType":"VariableDeclaration","scope":1916,"src":"4960:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1901,"name":"int256","nodeType":"ElementaryTypeName","src":"4960:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4917:56:9"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"4988:0:9"},"scope":2267,"src":"4895:164:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"5158:71:9","statements":[{"expression":{"arguments":[{"id":1927,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"5180:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1928,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"5185:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1926,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5168:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"5168:21:9"},{"expression":{"arguments":[{"id":1932,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"5211:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5216:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1931,"name":"writeUInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5199:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1935,"nodeType":"ExpressionStatement","src":"5199:23:9"}]},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt64","nameLocation":"5074:13:9","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"buf","nameLocation":"5106:3:9","nodeType":"VariableDeclaration","scope":1937,"src":"5088:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1918,"nodeType":"UserDefinedTypeName","pathNode":{"id":1917,"name":"CBORBuffer","nameLocations":["5088:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5088:10:9"},"referencedDeclaration":1422,"src":"5088:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"key","nameLocation":"5125:3:9","nodeType":"VariableDeclaration","scope":1937,"src":"5111:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1920,"name":"string","nodeType":"ElementaryTypeName","src":"5111:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"value","nameLocation":"5137:5:9","nodeType":"VariableDeclaration","scope":1937,"src":"5130:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1922,"name":"uint64","nodeType":"ElementaryTypeName","src":"5130:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5087:56:9"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"5158:0:9"},"scope":2267,"src":"5065:164:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"5326:70:9","statements":[{"expression":{"arguments":[{"id":1948,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5348:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1949,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5353:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1947,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5336:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5336:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"5336:21:9"},{"expression":{"arguments":[{"id":1953,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5378:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5383:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1952,"name":"writeInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5367:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_int64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int64) pure"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5367:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"5367:22:9"}]},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt64","nameLocation":"5244:12:9","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"buf","nameLocation":"5275:3:9","nodeType":"VariableDeclaration","scope":1958,"src":"5257:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"CBORBuffer","nameLocations":["5257:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5257:10:9"},"referencedDeclaration":1422,"src":"5257:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"key","nameLocation":"5294:3:9","nodeType":"VariableDeclaration","scope":1958,"src":"5280:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1941,"name":"string","nodeType":"ElementaryTypeName","src":"5280:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"value","nameLocation":"5305:5:9","nodeType":"VariableDeclaration","scope":1958,"src":"5299:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1943,"name":"int64","nodeType":"ElementaryTypeName","src":"5299:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5256:55:9"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"5326:0:9"},"scope":2267,"src":"5235:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"5491:69:9","statements":[{"expression":{"arguments":[{"id":1969,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"5513:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1970,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5518:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1968,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5501:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5501:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"5501:21:9"},{"expression":{"arguments":[{"id":1974,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"5542:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5547:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1973,"name":"writeBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"5532:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_bool_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bool) pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5532:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"5532:21:9"}]},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBool","nameLocation":"5411:11:9","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"buf","nameLocation":"5441:3:9","nodeType":"VariableDeclaration","scope":1979,"src":"5423:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"CBORBuffer","nameLocations":["5423:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5423:10:9"},"referencedDeclaration":1422,"src":"5423:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"key","nameLocation":"5460:3:9","nodeType":"VariableDeclaration","scope":1979,"src":"5446:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"5446:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"value","nameLocation":"5470:5:9","nodeType":"VariableDeclaration","scope":1979,"src":"5465:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1964,"name":"bool","nodeType":"ElementaryTypeName","src":"5465:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5422:54:9"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"5491:0:9"},"scope":2267,"src":"5402:158:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"5643:62:9","statements":[{"expression":{"arguments":[{"id":1988,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5665:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1989,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"5670:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1987,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5653:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"ExpressionStatement","src":"5653:21:9"},{"expression":{"arguments":[{"id":1993,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5694:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":1992,"name":"writeNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"5684:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5684:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"5684:14:9"}]},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVNull","nameLocation":"5575:11:9","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"buf","nameLocation":"5605:3:9","nodeType":"VariableDeclaration","scope":1997,"src":"5587:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"CBORBuffer","nameLocations":["5587:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5587:10:9"},"referencedDeclaration":1422,"src":"5587:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"key","nameLocation":"5624:3:9","nodeType":"VariableDeclaration","scope":1997,"src":"5610:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"5610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5586:42:9"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"5643:0:9"},"scope":2267,"src":"5566:139:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"5793:67:9","statements":[{"expression":{"arguments":[{"id":2006,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"5815:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2007,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"5820:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2005,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5803:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5803:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"5803:21:9"},{"expression":{"arguments":[{"id":2011,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"5849:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2010,"name":"writeUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5834:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2013,"nodeType":"ExpressionStatement","src":"5834:19:9"}]},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUndefined","nameLocation":"5720:16:9","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"buf","nameLocation":"5755:3:9","nodeType":"VariableDeclaration","scope":2015,"src":"5737:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1999,"nodeType":"UserDefinedTypeName","pathNode":{"id":1998,"name":"CBORBuffer","nameLocations":["5737:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5737:10:9"},"referencedDeclaration":1422,"src":"5737:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"key","nameLocation":"5774:3:9","nodeType":"VariableDeclaration","scope":2015,"src":"5760:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2001,"name":"string","nodeType":"ElementaryTypeName","src":"5760:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5736:42:9"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"5793:0:9"},"scope":2267,"src":"5711:149:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"5942:61:9","statements":[{"expression":{"arguments":[{"id":2024,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"5964:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2025,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5969:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2023,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"5952:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"ExpressionStatement","src":"5952:21:9"},{"expression":{"arguments":[{"id":2029,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"5992:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2028,"name":"startMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"5983:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"ExpressionStatement","src":"5983:13:9"}]},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVMap","nameLocation":"5875:10:9","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"buf","nameLocation":"5904:3:9","nodeType":"VariableDeclaration","scope":2033,"src":"5886:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"CBORBuffer","nameLocations":["5886:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5886:10:9"},"referencedDeclaration":1422,"src":"5886:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"key","nameLocation":"5923:3:9","nodeType":"VariableDeclaration","scope":2033,"src":"5909:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"5909:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5885:42:9"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[],"src":"5942:0:9"},"scope":2267,"src":"5866:137:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"6087:63:9","statements":[{"expression":{"arguments":[{"id":2042,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6109:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2043,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6114:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2041,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6097:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"6097:21:9"},{"expression":{"arguments":[{"id":2047,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6139:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2046,"name":"startArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"6128:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"6128:15:9"}]},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVArray","nameLocation":"6018:12:9","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"buf","nameLocation":"6049:3:9","nodeType":"VariableDeclaration","scope":2051,"src":"6031:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"CBORBuffer","nameLocations":["6031:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"6031:10:9"},"referencedDeclaration":1422,"src":"6031:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"key","nameLocation":"6068:3:9","nodeType":"VariableDeclaration","scope":2051,"src":"6054:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"6054:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6030:42:9"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"6087:0:9"},"scope":2267,"src":"6009:141:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2198,"nodeType":"Block","src":"6276:639:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6290:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3233","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6299:2:9","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"6290:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6386:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6395:4:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"6386:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6522:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307846464646","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6531:6:9","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"6522:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6660:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6669:10:9","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xFFFFFFFF"},"src":"6660:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2193,"nodeType":"Block","src":"6798:111:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6839:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6848:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6839:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6838:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3237","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6853:2:9","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6838:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6832:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2173,"name":"uint8","nodeType":"ElementaryTypeName","src":"6832:5:9","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2168,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6812:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6816:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6812:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6820:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6812:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6812:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2183,"nodeType":"ExpressionStatement","src":"6812:45:9"},{"expression":{"arguments":[{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6889:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"38","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"expression":{"id":2184,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6871:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6875:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6871:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:9:9","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6871:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2192,"nodeType":"ExpressionStatement","src":"6871:27:9"}]},"id":2194,"nodeType":"IfStatement","src":"6656:253:9","trueBody":{"id":2167,"nodeType":"Block","src":"6681:111:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6722:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6722:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6721:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3236","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6736:2:9","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"6721:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6715:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2147,"name":"uint8","nodeType":"ElementaryTypeName","src":"6715:5:9","typeDescriptions":{}}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2142,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6695:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6699:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6695:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6703:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6695:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2157,"nodeType":"ExpressionStatement","src":"6695:45:9"},{"expression":{"arguments":[{"id":2163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6772:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"34","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"expression":{"expression":{"id":2158,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6754:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6758:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6754:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6762:9:9","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6754:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6754:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2166,"nodeType":"ExpressionStatement","src":"6754:27:9"}]}},"id":2195,"nodeType":"IfStatement","src":"6518:391:9","trueBody":{"id":2138,"nodeType":"Block","src":"6539:111:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6580:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6589:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6580:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6579:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3235","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:2:9","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"6579:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6573:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2118,"name":"uint8","nodeType":"ElementaryTypeName","src":"6573:5:9","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2113,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6553:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6557:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6553:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6561:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6553:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2128,"nodeType":"ExpressionStatement","src":"6553:45:9"},{"expression":{"arguments":[{"id":2134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6630:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"32","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"expression":{"id":2129,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6612:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6616:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6612:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6620:9:9","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6612:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2137,"nodeType":"ExpressionStatement","src":"6612:27:9"}]}},"id":2196,"nodeType":"IfStatement","src":"6382:527:9","trueBody":{"id":2109,"nodeType":"Block","src":"6401:111:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6442:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6451:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6442:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6441:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3234","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6456:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"6441:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6435:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2089,"name":"uint8","nodeType":"ElementaryTypeName","src":"6435:5:9","typeDescriptions":{}}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2084,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6415:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6419:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6415:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6423:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6415:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2099,"nodeType":"ExpressionStatement","src":"6415:45:9"},{"expression":{"arguments":[{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6492:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"31","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6499:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":2100,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6474:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6478:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6474:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6482:9:9","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6474:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2108,"nodeType":"ExpressionStatement","src":"6474:27:9"}]}},"id":2197,"nodeType":"IfStatement","src":"6286:623:9","trueBody":{"id":2080,"nodeType":"Block","src":"6303:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6344:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6344:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6343:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6358:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6343:20:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6337:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2069,"name":"uint8","nodeType":"ElementaryTypeName","src":"6337:5:9","typeDescriptions":{}}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6337:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2064,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6317:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6321:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"6317:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6325:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"6317:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2079,"nodeType":"ExpressionStatement","src":"6317:48:9"}]}}]},"id":2199,"implemented":true,"kind":"function","modifiers":[],"name":"writeFixedNumeric","nameLocation":"6165:17:9","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"buf","nameLocation":"6210:3:9","nodeType":"VariableDeclaration","scope":2199,"src":"6192:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"CBORBuffer","nameLocations":["6192:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"6192:10:9"},"referencedDeclaration":1422,"src":"6192:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"major","nameLocation":"6229:5:9","nodeType":"VariableDeclaration","scope":2199,"src":"6223:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2055,"name":"uint8","nodeType":"ElementaryTypeName","src":"6223:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"6251:5:9","nodeType":"VariableDeclaration","scope":2199,"src":"6244:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2057,"name":"uint64","nodeType":"ElementaryTypeName","src":"6244:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6182:80:9"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"6276:0:9"},"scope":2267,"src":"6156:759:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2223,"nodeType":"Block","src":"7025:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"7062:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7062:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7061:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3331","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7076:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"7061:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7055:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2212,"name":"uint8","nodeType":"ElementaryTypeName","src":"7055:5:9","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2207,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"7035:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"7035:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7043:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"7035:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7035:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2222,"nodeType":"ExpressionStatement","src":"7035:45:9"}]},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"writeIndefiniteLengthType","nameLocation":"6930:25:9","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"buf","nameLocation":"6974:3:9","nodeType":"VariableDeclaration","scope":2224,"src":"6956:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2201,"nodeType":"UserDefinedTypeName","pathNode":{"id":2200,"name":"CBORBuffer","nameLocations":["6956:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"6956:10:9"},"referencedDeclaration":1422,"src":"6956:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"major","nameLocation":"6985:5:9","nodeType":"VariableDeclaration","scope":2224,"src":"6979:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2203,"name":"uint8","nodeType":"ElementaryTypeName","src":"6979:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6955:36:9"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"7025:0:9"},"scope":2267,"src":"6921:166:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2240,"nodeType":"Block","src":"7210:54:9","statements":[{"expression":{"arguments":[{"id":2235,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"7238:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2236,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"7243:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2237,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"7250:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2234,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"7220:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1422_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7220:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2239,"nodeType":"ExpressionStatement","src":"7220:37:9"}]},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"writeDefiniteLengthType","nameLocation":"7102:23:9","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"buf","nameLocation":"7144:3:9","nodeType":"VariableDeclaration","scope":2241,"src":"7126:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2226,"nodeType":"UserDefinedTypeName","pathNode":{"id":2225,"name":"CBORBuffer","nameLocations":["7126:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"7126:10:9"},"referencedDeclaration":1422,"src":"7126:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"major","nameLocation":"7155:5:9","nodeType":"VariableDeclaration","scope":2241,"src":"7149:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2228,"name":"uint8","nodeType":"ElementaryTypeName","src":"7149:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"length","nameLocation":"7169:6:9","nodeType":"VariableDeclaration","scope":2241,"src":"7162:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2230,"name":"uint64","nodeType":"ElementaryTypeName","src":"7162:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7125:51:9"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[],"src":"7210:0:9"},"scope":2267,"src":"7093:171:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2265,"nodeType":"Block","src":"7345:83:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2256,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7382:23:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7409:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7382:28:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7381:30:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"7414:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7381:38:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7375:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2254,"name":"uint8","nodeType":"ElementaryTypeName","src":"7375:5:9","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2249,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"7355:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7359:3:9","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"7355:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7363:11:9","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"7355:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$995_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$995_memory_ptr_$attached_to$_t_struct$_buffer_$995_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$995_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2264,"nodeType":"ExpressionStatement","src":"7355:66:9"}]},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"writeContentFree","nameLocation":"7279:16:9","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"buf","nameLocation":"7314:3:9","nodeType":"VariableDeclaration","scope":2266,"src":"7296:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2243,"nodeType":"UserDefinedTypeName","pathNode":{"id":2242,"name":"CBORBuffer","nameLocations":["7296:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"7296:10:9"},"referencedDeclaration":1422,"src":"7296:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1422_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"value","nameLocation":"7325:5:9","nodeType":"VariableDeclaration","scope":2266,"src":"7319:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2245,"name":"uint8","nodeType":"ElementaryTypeName","src":"7319:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7295:36:9"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"7345:0:9"},"scope":2267,"src":"7270:158:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2268,"src":"666:6764:9","usedErrors":[],"usedEvents":[]}],"src":"32:7398:9"},"id":9},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","exportedSymbols":{"ConfirmedOwner":[807],"IVRFCoordinatorV2Plus":[2448],"IVRFMigratableConsumerV2Plus":[2462],"VRFConsumerBaseV2Plus":[2430]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2269,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"./interfaces/IVRFCoordinatorV2Plus.sol","id":2271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":2449,"src":"57:77:10","symbolAliases":[{"foreign":{"id":2270,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"65:21:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","file":"./interfaces/IVRFMigratableConsumerV2Plus.sol","id":2273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":2463,"src":"135:91:10","symbolAliases":[{"foreign":{"id":2272,"name":"IVRFMigratableConsumerV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"143:28:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":808,"src":"227:70:10","symbolAliases":[{"foreign":{"id":2274,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"235:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2277,"name":"IVRFMigratableConsumerV2Plus","nameLocations":["5712:28:10"],"nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"5712:28:10"},"id":2278,"nodeType":"InheritanceSpecifier","src":"5712:28:10"},{"baseName":{"id":2279,"name":"ConfirmedOwner","nameLocations":["5742:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"5742:14:10"},"id":2280,"nodeType":"InheritanceSpecifier","src":"5742:14:10"}],"canonicalName":"VRFConsumerBaseV2Plus","contractDependencies":[],"contractKind":"contract","documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"299:5369:10","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2430,"linearizedBaseContracts":[2430,807,970,986,2462],"name":"VRFConsumerBaseV2Plus","nameLocation":"5687:21:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2286,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5767:25:10","nodeType":"ErrorDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"have","nameLocation":"5801:4:10","nodeType":"VariableDeclaration","scope":2286,"src":"5793:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"want","nameLocation":"5815:4:10","nodeType":"VariableDeclaration","scope":2286,"src":"5807:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"5807:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5792:28:10"},"src":"5761:60:10"},{"errorSelector":"061db9c1","id":2294,"name":"OnlyOwnerOrCoordinator","nameLocation":"5830:22:10","nodeType":"ErrorDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"have","nameLocation":"5861:4:10","nodeType":"VariableDeclaration","scope":2294,"src":"5853:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"5853:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"owner","nameLocation":"5875:5:10","nodeType":"VariableDeclaration","scope":2294,"src":"5867:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"coordinator","nameLocation":"5890:11:10","nodeType":"VariableDeclaration","scope":2294,"src":"5882:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5852:50:10"},"src":"5824:79:10"},{"errorSelector":"d92e233d","id":2296,"name":"ZeroAddress","nameLocation":"5912:11:10","nodeType":"ErrorDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"5923:2:10"},"src":"5906:20:10"},{"constant":false,"functionSelector":"9eccacf6","id":2299,"mutability":"mutable","name":"s_vrfCoordinator","nameLocation":"6106:16:10","nodeType":"VariableDeclaration","scope":2430,"src":"6077:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"IVRFCoordinatorV2Plus","nameLocations":["6077:21:10"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"6077:21:10"},"referencedDeclaration":2448,"src":"6077:21:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"public"},{"body":{"id":2326,"nodeType":"Block","src":"6266:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6276:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:10","typeDescriptions":{}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2319,"nodeType":"IfStatement","src":"6272:70:10","trueBody":{"id":2318,"nodeType":"Block","src":"6307:35:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2315,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"6322:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"RevertStatement","src":"6315:20:10"}]}},{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2320,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6347:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2322,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6388:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2321,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6366:21:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2448_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"6347:57:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2325,"nodeType":"ExpressionStatement","src":"6347:57:10"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"6127:72:10","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2327,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6254:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6254:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2307,"kind":"baseConstructorSpecifier","modifierName":{"id":2304,"name":"ConfirmedOwner","nameLocations":["6239:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"6239:14:10"},"nodeType":"ModifierInvocation","src":"6239:26:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"6222:15:10","nodeType":"VariableDeclaration","scope":2327,"src":"6214:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6213:25:10"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"6266:0:10"},"scope":2430,"src":"6202:207:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"6413:690:10","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2336,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7207:18:10","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"requestId","nameLocation":"7234:9:10","nodeType":"VariableDeclaration","scope":2336,"src":"7226:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"7226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"randomWords","nameLocation":"7264:11:10","nodeType":"VariableDeclaration","scope":2336,"src":"7245:30:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ArrayTypeName","src":"7245:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7225:51:10"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"7293:0:10"},"scope":2430,"src":"7198:96:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"7580:189:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7590:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7594:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7590:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2348,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"7612:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:10","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"7586:131:10","trueBody":{"id":2360,"nodeType":"Block","src":"7631:86:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7672:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7672:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2356,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"7692:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7684:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"7684:7:10","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2351,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"7646:25:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"RevertStatement","src":"7639:71:10"}]}},{"expression":{"arguments":[{"id":2363,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"7741:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2364,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7752:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2362,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"7722:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,uint256[] calldata)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"ExpressionStatement","src":"7722:42:10"}]},"functionSelector":"1fe543e3","id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"7498:21:10","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"requestId","nameLocation":"7528:9:10","nodeType":"VariableDeclaration","scope":2368,"src":"7520:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"randomWords","nameLocation":"7558:11:10","nodeType":"VariableDeclaration","scope":2368,"src":"7539:30:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2340,"nodeType":"ArrayTypeName","src":"7539:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7519:51:10"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[],"src":"7580:0:10"},"scope":2430,"src":"7489:280:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2461],"body":{"id":2398,"nodeType":"Block","src":"7921:186:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"7931:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7950:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"7950:7:10","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7950:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7931:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2387,"nodeType":"IfStatement","src":"7927:70:10","trueBody":{"id":2386,"nodeType":"Block","src":"7962:35:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2383,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"7977:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"RevertStatement","src":"7970:20:10"}]}},{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2388,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"8002:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2390,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8043:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2389,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"8021:21:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2448_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"8002:57:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2393,"nodeType":"ExpressionStatement","src":"8002:57:10"},{"eventCall":{"arguments":[{"id":2395,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8086:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2394,"name":"CoordinatorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"8071:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2397,"nodeType":"EmitStatement","src":"8066:36:10"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"7773:55:10","text":" @inheritdoc IVRFMigratableConsumerV2Plus"},"functionSelector":"8ea98117","id":2399,"implemented":true,"kind":"function","modifiers":[{"id":2375,"kind":"modifierInvocation","modifierName":{"id":2374,"name":"onlyOwnerOrCoordinator","nameLocations":["7898:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2429,"src":"7898:22:10"},"nodeType":"ModifierInvocation","src":"7898:22:10"}],"name":"setCoordinator","nameLocation":"7840:14:10","nodeType":"FunctionDefinition","overrides":{"id":2373,"nodeType":"OverrideSpecifier","overrides":[],"src":"7889:8:10"},"parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"7863:15:10","nodeType":"VariableDeclaration","scope":2399,"src":"7855:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:25:10"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"7921:0:10"},"scope":2430,"src":"7831:276:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2428,"nodeType":"Block","src":"8145:179:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8155:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2403,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8169:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8169:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8155:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8180:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2410,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"8202:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:10","typeDescriptions":{}}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8180:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8155:64:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2426,"nodeType":"IfStatement","src":"8151:162:10","trueBody":{"id":2425,"nodeType":"Block","src":"8221:92:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2415,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8259:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8263:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8259:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8271:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2421,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"8288:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"8280:7:10","typeDescriptions":{}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2414,"name":"OnlyOwnerOrCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8236:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2424,"nodeType":"RevertStatement","src":"8229:77:10"}]}},{"id":2427,"nodeType":"PlaceholderStatement","src":"8318:1:10"}]},"id":2429,"name":"onlyOwnerOrCoordinator","nameLocation":"8120:22:10","nodeType":"ModifierDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"8142:2:10"},"src":"8111:213:10","virtual":false,"visibility":"internal"}],"scope":2431,"src":"5669:2657:10","usedErrors":[2286,2294,2296],"usedEvents":[824,830,2455]}],"src":"32:8295:10"},"id":10},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2448],"IVRFSubscriptionV2Plus":[2551],"VRFV2PlusClient":[2593]},"id":2449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../libraries/VRFV2PlusClient.sol","id":2434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2449,"sourceUnit":2594,"src":"57:65:11","symbolAliases":[{"foreign":{"id":2433,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"65:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./IVRFSubscriptionV2Plus.sol","id":2436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2449,"sourceUnit":2552,"src":"123:68:11","symbolAliases":[{"foreign":{"id":2435,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"131:22:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2437,"name":"IVRFSubscriptionV2Plus","nameLocations":["398:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":2551,"src":"398:22:11"},"id":2438,"nodeType":"InheritanceSpecifier","src":"398:22:11"}],"canonicalName":"IVRFCoordinatorV2Plus","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2448,"linearizedBaseContracts":[2448,2551],"name":"IVRFCoordinatorV2Plus","nameLocation":"373:21:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"425:1588:11","text":" @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"9b1c385e","id":2447,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2025:18:11","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"req","nameLocation":"2088:3:11","nodeType":"VariableDeclaration","scope":2447,"src":"2044:47:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2577_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":2441,"nodeType":"UserDefinedTypeName","pathNode":{"id":2440,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["2044:15:11","2060:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2577,"src":"2044:34:11"},"referencedDeclaration":2577,"src":"2044:34:11","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2577_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"2043:49:11"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:11","nodeType":"VariableDeclaration","scope":2447,"src":"2111:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:19:11"},"scope":2448,"src":"2016:114:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2449,"src":"363:1769:11","usedErrors":[],"usedEvents":[]}],"src":"32:2101:11"},"id":11},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","exportedSymbols":{"IVRFMigratableConsumerV2Plus":[2462]},"id":2463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2450,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFMigratableConsumerV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"57:211:12","text":"@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."},"fullyImplemented":false,"id":2462,"linearizedBaseContracts":[2462],"name":"IVRFMigratableConsumerV2Plus","nameLocation":"278:28:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6","id":2455,"name":"CoordinatorSet","nameLocation":"317:14:12","nodeType":"EventDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"indexed":false,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"340:14:12","nodeType":"VariableDeclaration","scope":2455,"src":"332:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:24:12"},"src":"311:45:12"},{"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"360:131:12","text":"@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"},"functionSelector":"8ea98117","id":2461,"implemented":false,"kind":"function","modifiers":[],"name":"setCoordinator","nameLocation":"503:14:12","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"526:14:12","nodeType":"VariableDeclaration","scope":2461,"src":"518:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:24:12"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[],"src":"550:0:12"},"scope":2462,"src":"494:57:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2463,"src":"268:285:12","usedErrors":[],"usedEvents":[2455]}],"src":"32:522:12"},"id":12},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","exportedSymbols":{"IVRFSubscriptionV2Plus":[2551]},"id":2552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2464,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"57:141:13","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"id":2551,"linearizedBaseContracts":[2551],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"235:170:13","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","id":2473,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:13","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"subId","nameLocation":"437:5:13","nodeType":"VariableDeclaration","scope":2473,"src":"429:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"consumer","nameLocation":"452:8:13","nodeType":"VariableDeclaration","scope":2473,"src":"444:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:13"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"470:0:13"},"scope":2551,"src":"408:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"475:172:13","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","id":2481,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:13","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"subId","nameLocation":"682:5:13","nodeType":"VariableDeclaration","scope":2481,"src":"674:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"consumer","nameLocation":"697:8:13","nodeType":"VariableDeclaration","scope":2481,"src":"689:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:13"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"715:0:13"},"scope":2551,"src":"650:66:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"720:140:13","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","id":2489,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:13","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"subId","nameLocation":"899:5:13","nodeType":"VariableDeclaration","scope":2489,"src":"891:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"to","nameLocation":"914:2:13","nodeType":"VariableDeclaration","scope":2489,"src":"906:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:13"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"926:0:13"},"scope":2551,"src":"863:64:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"931:211:13","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","id":2495,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:13","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"subId","nameLocation":"1194:5:13","nodeType":"VariableDeclaration","scope":2495,"src":"1186:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:13"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[],"src":"1209:0:13"},"scope":2551,"src":"1145:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"1214:164:13","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","id":2503,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:13","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"subId","nameLocation":"1431:5:13","nodeType":"VariableDeclaration","scope":2503,"src":"1423:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:13","nodeType":"VariableDeclaration","scope":2503,"src":"1438:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:13"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"1464:0:13"},"scope":2551,"src":"1381:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"1469:613:13","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","id":2509,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:13","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[],"src":"2112:2:13"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"subId","nameLocation":"2141:5:13","nodeType":"VariableDeclaration","scope":2509,"src":"2133:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:13"},"scope":2551,"src":"2085:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"2152:422:13","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","id":2526,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:13","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"subId","nameLocation":"2615:5:13","nodeType":"VariableDeclaration","scope":2526,"src":"2607:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:13"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"balance","nameLocation":"2667:7:13","nodeType":"VariableDeclaration","scope":2526,"src":"2660:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2514,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:13","nodeType":"VariableDeclaration","scope":2526,"src":"2676:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2516,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:13","nodeType":"VariableDeclaration","scope":2526,"src":"2698:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2518,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"owner","nameLocation":"2723:5:13","nodeType":"VariableDeclaration","scope":2526,"src":"2715:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:13","nodeType":"VariableDeclaration","scope":2526,"src":"2730:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2523,"nodeType":"ArrayTypeName","src":"2730:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:13"},"scope":2551,"src":"2577:181:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41af6c87","id":2533,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:13","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"subId","nameLocation":"3092:5:13","nodeType":"VariableDeclaration","scope":2533,"src":"3084:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:13"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"3122:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2530,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:13"},"scope":2551,"src":"3054:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"3132:427:13","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","id":2544,"implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:13","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:13","nodeType":"VariableDeclaration","scope":2544,"src":"3596:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:13","nodeType":"VariableDeclaration","scope":2544,"src":"3616:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:13"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2544,"src":"3657:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ArrayTypeName","src":"3657:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:13"},"scope":2551,"src":"3562:113:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"3679:175:13","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:13","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"subId","nameLocation":"3901:5:13","nodeType":"VariableDeclaration","scope":2550,"src":"3893:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:13"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"3924:0:13"},"scope":2551,"src":"3857:68:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2552,"src":"198:3729:13","usedErrors":[],"usedEvents":[]}],"src":"32:3896:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","exportedSymbols":{"VRFV2PlusClient":[2593]},"id":2594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2553,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFV2PlusClient","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2593,"linearizedBaseContracts":[2593],"name":"VRFV2PlusClient","nameLocation":"90:15:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f7514ab4","id":2561,"mutability":"constant","name":"EXTRA_ARGS_V1_TAG","nameLocation":"184:17:14","nodeType":"VariableDeclaration","scope":2593,"src":"161:79:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2554,"name":"bytes4","nodeType":"ElementaryTypeName","src":"161:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"565246204578747261417267735631","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"221:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""},"value":"VRF ExtraArgsV1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""}],"id":2557,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"211:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"211:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"204:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2555,"name":"bytes4","nodeType":"ElementaryTypeName","src":"204:6:14","typeDescriptions":{}}},"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"canonicalName":"VRFV2PlusClient.ExtraArgsV1","id":2564,"members":[{"constant":false,"id":2563,"mutability":"mutable","name":"nativePayment","nameLocation":"274:13:14","nodeType":"VariableDeclaration","scope":2564,"src":"269:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2562,"name":"bool","nodeType":"ElementaryTypeName","src":"269:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExtraArgsV1","nameLocation":"251:11:14","nodeType":"StructDefinition","scope":2593,"src":"244:48:14","visibility":"public"},{"canonicalName":"VRFV2PlusClient.RandomWordsRequest","id":2577,"members":[{"constant":false,"id":2566,"mutability":"mutable","name":"keyHash","nameLocation":"336:7:14","nodeType":"VariableDeclaration","scope":2577,"src":"328:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"328:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"subId","nameLocation":"357:5:14","nodeType":"VariableDeclaration","scope":2577,"src":"349:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"requestConfirmations","nameLocation":"375:20:14","nodeType":"VariableDeclaration","scope":2577,"src":"368:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2569,"name":"uint16","nodeType":"ElementaryTypeName","src":"368:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"408:16:14","nodeType":"VariableDeclaration","scope":2577,"src":"401:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2571,"name":"uint32","nodeType":"ElementaryTypeName","src":"401:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"numWords","nameLocation":"437:8:14","nodeType":"VariableDeclaration","scope":2577,"src":"430:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2573,"name":"uint32","nodeType":"ElementaryTypeName","src":"430:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"extraArgs","nameLocation":"457:9:14","nodeType":"VariableDeclaration","scope":2577,"src":"451:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"451:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RandomWordsRequest","nameLocation":"303:18:14","nodeType":"StructDefinition","scope":2593,"src":"296:175:14","visibility":"public"},{"body":{"id":2591,"nodeType":"Block","src":"568:70:14","statements":[{"expression":{"arguments":[{"id":2587,"name":"EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"604:17:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2588,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"623:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2585,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"581:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"585:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"581:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2584,"id":2590,"nodeType":"Return","src":"574:59:14"}]},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"484:12:14","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"extraArgs","nameLocation":"516:9:14","nodeType":"VariableDeclaration","scope":2592,"src":"497:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":2579,"nodeType":"UserDefinedTypeName","pathNode":{"id":2578,"name":"ExtraArgsV1","nameLocations":["497:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2564,"src":"497:11:14"},"referencedDeclaration":2564,"src":"497:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"496:30:14"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"bts","nameLocation":"563:3:14","nodeType":"VariableDeclaration","scope":2592,"src":"550:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"549:18:14"},"scope":2593,"src":"475:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2594,"src":"82:558:14","usedErrors":[],"usedEvents":[]}],"src":"32:609:14"},"id":14},"contracts/ChainlinkMultiverse.sol":{"ast":{"absolutePath":"contracts/ChainlinkMultiverse.sol","exportedSymbols":{"ConfirmedOwner":[807],"EnterTheChainlinkMultiverse":[2897],"FunctionsClient":[117],"FunctionsRequest":[728],"VRFConsumerBaseV2Plus":[2430],"VRFV2PlusClient":[2593]},"id":2898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2595,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","id":2597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2898,"sourceUnit":118,"src":"57:99:15","symbolAliases":[{"foreign":{"id":2596,"name":"FunctionsClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"65:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","id":2599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2898,"sourceUnit":808,"src":"157:94:15","symbolAliases":[{"foreign":{"id":2598,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"165:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","id":2601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2898,"sourceUnit":729,"src":"252:111:15","symbolAliases":[{"foreign":{"id":2600,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"260:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","id":2603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2898,"sourceUnit":2431,"src":"365:102:15","symbolAliases":[{"foreign":{"id":2602,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"373:21:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","id":2605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2898,"sourceUnit":2594,"src":"468:100:15","symbolAliases":[{"foreign":{"id":2604,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"476:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2606,"name":"FunctionsClient","nameLocations":["610:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":117,"src":"610:15:15"},"id":2607,"nodeType":"InheritanceSpecifier","src":"610:15:15"},{"baseName":{"id":2608,"name":"VRFConsumerBaseV2Plus","nameLocations":["627:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"627:21:15"},"id":2609,"nodeType":"InheritanceSpecifier","src":"627:21:15"}],"canonicalName":"EnterTheChainlinkMultiverse","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2897,"linearizedBaseContracts":[2897,2430,807,970,986,2462,117,131],"name":"EnterTheChainlinkMultiverse","nameLocation":"579:27:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2613,"libraryName":{"id":2610,"name":"FunctionsRequest","nameLocations":["661:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"661:16:15"},"nodeType":"UsingForDirective","src":"655:52:15","typeName":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"FunctionsRequest.Request","nameLocations":["682:16:15","699:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"682:24:15"},"referencedDeclaration":306,"src":"682:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"canonicalName":"EnterTheChainlinkMultiverse.RequestStatus","id":2621,"members":[{"constant":false,"id":2615,"mutability":"mutable","name":"fulfilled","nameLocation":"749:9:15","nodeType":"VariableDeclaration","scope":2621,"src":"744:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2614,"name":"bool","nodeType":"ElementaryTypeName","src":"744:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"exists","nameLocation":"773:6:15","nodeType":"VariableDeclaration","scope":2621,"src":"768:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"randomWords","nameLocation":"799:11:15","nodeType":"VariableDeclaration","scope":2621,"src":"789:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ArrayTypeName","src":"789:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RequestStatus","nameLocation":"720:13:15","nodeType":"StructDefinition","scope":2897,"src":"713:104:15","visibility":"public"},{"canonicalName":"EnterTheChainlinkMultiverse.MultiverseFunctionRequest","id":2626,"members":[{"constant":false,"id":2623,"mutability":"mutable","name":"userWallet","nameLocation":"874:10:15","nodeType":"VariableDeclaration","scope":2626,"src":"866:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"isPending","nameLocation":"899:9:15","nodeType":"VariableDeclaration","scope":2626,"src":"894:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2624,"name":"bool","nodeType":"ElementaryTypeName","src":"894:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MultiverseFunctionRequest","nameLocation":"830:25:15","nodeType":"StructDefinition","scope":2897,"src":"823:92:15","visibility":"public"},{"constant":false,"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"921:33:15","text":"CHAINLINK SHARED VARIABLES "},"functionSelector":"09c1ba2e","id":2630,"mutability":"mutable","name":"subscriptionId","nameLocation":"974:14:15","nodeType":"VariableDeclaration","scope":2897,"src":"960:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2628,"name":"uint64","nodeType":"ElementaryTypeName","src":"960:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3637","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"991:2:15","typeDescriptions":{"typeIdentifier":"t_rational_67_by_1","typeString":"int_const 67"},"value":"67"},"visibility":"public"},{"constant":false,"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"1000:36:15","text":"CHAINLINK FUNCTIONS VARIABLES "},"functionSelector":"cfd30a6e","id":2634,"mutability":"mutable","name":"multiverseApiSources","nameLocation":"1058:20:15","nodeType":"VariableDeclaration","scope":2897,"src":"1042:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":2632,"name":"string","nodeType":"ElementaryTypeName","src":"1042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2633,"nodeType":"ArrayTypeName","src":"1042:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"constant":false,"functionSelector":"8e84737f","id":2639,"mutability":"mutable","name":"requestIdPending","nameLocation":"1138:16:15","nodeType":"VariableDeclaration","scope":2897,"src":"1085:69:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest)"},"typeName":{"id":2638,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1085:45:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2637,"nodeType":"UserDefinedTypeName","pathNode":{"id":2636,"name":"MultiverseFunctionRequest","nameLocations":["1104:25:15"],"nodeType":"IdentifierPath","referencedDeclaration":2626,"src":"1104:25:15"},"referencedDeclaration":2626,"src":"1104:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage_ptr","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"2e0a5890","id":2643,"mutability":"mutable","name":"userToRequestResult","nameLocation":"1195:19:15","nodeType":"VariableDeclaration","scope":2897,"src":"1161:53:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"typeName":{"id":2642,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1161:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"f887ea40","id":2646,"mutability":"mutable","name":"router","nameLocation":"1311:6:15","nodeType":"VariableDeclaration","scope":2897,"src":"1296:66:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307832333461356662354264363134613741413246664142323434443630336162464130416335433543","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1320:42:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x234a5fb5Bd614a7AA2FfAB244D603abFA0Ac5C5C"},"visibility":"public"},{"constant":false,"id":2649,"mutability":"mutable","name":"donId","nameLocation":"1477:5:15","nodeType":"VariableDeclaration","scope":2897,"src":"1469:90:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1469:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836363735366532643631373236323639373437323735366432643733363537303666366336393631326433313030303030303030303030303030303030303030","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1493:66:15","typeDescriptions":{"typeIdentifier":"t_rational_46343392077630336878048714497730444752871115003929837516402919242763780227072_by_1","typeString":"int_const 4634...(69 digits omitted)...7072"},"value":"0x66756e2d617262697472756d2d7365706f6c69612d3100000000000000000000"},"visibility":"internal"},{"constant":false,"functionSelector":"f68016b7","id":2652,"mutability":"mutable","name":"gasLimit","nameLocation":"1580:8:15","nodeType":"VariableDeclaration","scope":2897,"src":"1566:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2650,"name":"uint32","nodeType":"ElementaryTypeName","src":"1566:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"333030303030","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1591:6:15","typeDescriptions":{"typeIdentifier":"t_rational_300000_by_1","typeString":"int_const 300000"},"value":"300000"},"visibility":"public"},{"constant":false,"functionSelector":"b1e21749","id":2654,"mutability":"mutable","name":"s_lastRequestId","nameLocation":"1619:15:15","nodeType":"VariableDeclaration","scope":2897,"src":"1604:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"3944ea3a","id":2656,"mutability":"mutable","name":"s_lastResponse","nameLocation":"1654:14:15","nodeType":"VariableDeclaration","scope":2897,"src":"1641:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":2655,"name":"bytes","nodeType":"ElementaryTypeName","src":"1641:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"constant":false,"functionSelector":"4b0795a8","id":2658,"mutability":"mutable","name":"s_lastError","nameLocation":"1688:11:15","nodeType":"VariableDeclaration","scope":2897,"src":"1675:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":2657,"name":"bytes","nodeType":"ElementaryTypeName","src":"1675:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"constant":false,"functionSelector":"65372147","id":2660,"mutability":"mutable","name":"result","nameLocation":"1720:6:15","nodeType":"VariableDeclaration","scope":2897,"src":"1706:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"1706:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"1733:30:15","text":"CHAINLINK VRF VARIABLES "},"functionSelector":"a168fa89","id":2666,"mutability":"mutable","name":"s_requests","nameLocation":"1810:10:15","nodeType":"VariableDeclaration","scope":2897,"src":"1769:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$2621_storage_$","typeString":"mapping(uint256 => struct EnterTheChainlinkMultiverse.RequestStatus)"},"typeName":{"id":2665,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1769:33:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$2621_storage_$","typeString":"mapping(uint256 => struct EnterTheChainlinkMultiverse.RequestStatus)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"RequestStatus","nameLocations":["1788:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2621,"src":"1788:13:15"},"referencedDeclaration":2621,"src":"1788:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$2621_storage_ptr","typeString":"struct EnterTheChainlinkMultiverse.RequestStatus"}}},"visibility":"public"},{"constant":false,"functionSelector":"61728f39","id":2669,"mutability":"mutable","name":"keyHash","nameLocation":"1842:7:15","nodeType":"VariableDeclaration","scope":2897,"src":"1827:99:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1827:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837383764373463616561313062326233353737393064356235323437633266363364316439313537326139383436663738303630366534643935333637376165","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1860:66:15","typeDescriptions":{"typeIdentifier":"t_rational_54499203786224664545214975898555686073558526619289911036465919174612406925230_by_1","typeString":"int_const 5449...(69 digits omitted)...5230"},"value":"0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae"},"visibility":"public"},{"constant":false,"functionSelector":"b0fb162f","id":2672,"mutability":"mutable","name":"requestConfirmations","nameLocation":"1947:20:15","nodeType":"VariableDeclaration","scope":2897,"src":"1933:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2670,"name":"uint16","nodeType":"ElementaryTypeName","src":"1933:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"7ccfd7fc","id":2675,"mutability":"mutable","name":"numWords","nameLocation":"1992:8:15","nodeType":"VariableDeclaration","scope":2897,"src":"1978:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2673,"name":"uint32","nodeType":"ElementaryTypeName","src":"1978:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"8796ba8c","id":2678,"mutability":"mutable","name":"requestIds","nameLocation":"2028:10:15","nodeType":"VariableDeclaration","scope":2897,"src":"2011:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ArrayTypeName","src":"2011:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fc2a88c3","id":2680,"mutability":"mutable","name":"lastRequestId","nameLocation":"2060:13:15","nodeType":"VariableDeclaration","scope":2897,"src":"2045:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"24f74697","id":2683,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2094:16:15","nodeType":"VariableDeclaration","scope":2897,"src":"2080:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2681,"name":"uint32","nodeType":"ElementaryTypeName","src":"2080:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:6:15","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"public"},{"constant":false,"functionSelector":"a321ccaa","id":2686,"mutability":"mutable","name":"arbitrumSepoliaVRF","nameLocation":"2141:18:15","nodeType":"VariableDeclaration","scope":2897,"src":"2126:86:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307835306434376534313432353938453334313161413836346530386134343238346534373141433666","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2170:42:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x50d47e4142598E3411aA864e08a44284e471AC6f"},"visibility":"public"},{"anonymous":false,"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"2258:27:15","text":"CHAINLINK VRF EVENTS "},"eventSelector":"cc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee","id":2693,"name":"RequestSent","nameLocation":"2297:11:15","nodeType":"EventDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"2317:9:15","nodeType":"VariableDeclaration","scope":2693,"src":"2309:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2691,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"2335:8:15","nodeType":"VariableDeclaration","scope":2693,"src":"2328:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2690,"name":"uint32","nodeType":"ElementaryTypeName","src":"2328:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2308:36:15"},"src":"2291:54:15"},{"anonymous":false,"eventSelector":"fe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d","id":2700,"name":"RequestFulfilled","nameLocation":"2356:16:15","nodeType":"EventDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"2381:9:15","nodeType":"VariableDeclaration","scope":2700,"src":"2373:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2698,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"2402:11:15","nodeType":"VariableDeclaration","scope":2700,"src":"2392:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2392:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2697,"nodeType":"ArrayTypeName","src":"2392:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2372:42:15"},"src":"2350:65:15"},{"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"2421:13:15","text":"ERRORS "},"errorSelector":"d068bf5b","id":2705,"name":"UnexpectedRequestID","nameLocation":"2446:19:15","nodeType":"ErrorDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"requestId","nameLocation":"2474:9:15","nodeType":"VariableDeclaration","scope":2705,"src":"2466:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2466:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2465:19:15"},"src":"2440:45:15"},{"constant":false,"functionSelector":"020dbb9b","id":2708,"mutability":"mutable","name":"pokesource","nameLocation":"2505:10:15","nodeType":"VariableDeclaration","scope":2897,"src":"2491:764:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2706,"name":"string","nodeType":"ElementaryTypeName","src":"2491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"636f6e737420706f6b6955524c203d206068747470733a2f2f706f6b656170692e636f2f6170692f76322f706f6b656d6f6e603b636f6e737420687055524c203d206068747470733a2f2f77697a6172642d776f726c642d6170692e6865726f6b756170702e636f6d2f486f75736573603b636f6e737420706f6b656d6f6e436861726163746572203d20313b636f6e736f6c652e6c6f67286053656e64696e672048545450207265717565737420746f20247b706f6b6955524c7d2f247b706f6b656d6f6e4368617261637465727d2f60293b636f6e737420706f6b6952657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a2060247b706f6b6955524c7d2f247b706f6b656d6f6e4368617261637465727d602c6d6574686f643a2060474554602c7d293b636f6e737420687052657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a20687055524c2c6d6574686f643a2060474554602c7d293b636f6e737420706f6b69526573706f6e7365203d20617761697420706f6b69526571756573743b636f6e7374206870526573706f6e7365203d206177616974206870526571756573743b636f6e73742072657144617461203d20706f6b69526573706f6e73652e646174613b636f6e737420687044617461203d206870526573706f6e73652e646174613b636f6e7374206d7944617461203d207b706f6b656d6f6e547970653a20726571446174612e74797065735b305d2e747970652e6e616d652c706f6b656d6f6e4e616d653a20726571446174612e737065636965732e6e616d652c706f6b656d6f6e496d6167653a20726571446174612e737072697465732e6f746865722e686f6d652e66726f6e745f64656661756c742c7d3b72657475726e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e737472696e67696679286d794461746129293b","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2526:729:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85369bea02f2703c6796213d19193ff05e384f38b6d405e226b24b200c4477e1","typeString":"literal_string \"const pokiURL = `https://pokeapi.co/api/v2/pokemon`;const hpURL = `https://wizard-world-api.herokuapp.com/Houses`;const pokemonCharacter = 1;console.log(`Sending HTTP request to ${pokiURL}/${pokemonCharacter}/`);const pokiRequest = Functions.makeHttpRequest({url: `${pokiURL}/${pokemonCharacter}`,method: `GET`,});const hpRequest = Functions.makeHttpRequest({url: hpURL,method: `GET`,});const pokiResponse = await pokiRequest;const hpResponse = await hpRequest;const reqData = pokiResponse.data;const hpData = hpResponse.data;const myData = {pokemonType: reqData.types[0].type.name,pokemonName: reqData.species.name,pokemonImage: reqData.sprites.other.home.front_default,};return Functions.encodeString(JSON.stringify(myData));\""},"value":"const pokiURL = `https://pokeapi.co/api/v2/pokemon`;const hpURL = `https://wizard-world-api.herokuapp.com/Houses`;const pokemonCharacter = 1;console.log(`Sending HTTP request to ${pokiURL}/${pokemonCharacter}/`);const pokiRequest = Functions.makeHttpRequest({url: `${pokiURL}/${pokemonCharacter}`,method: `GET`,});const hpRequest = Functions.makeHttpRequest({url: hpURL,method: `GET`,});const pokiResponse = await pokiRequest;const hpResponse = await hpRequest;const reqData = pokiResponse.data;const hpData = hpResponse.data;const myData = {pokemonType: reqData.types[0].type.name,pokemonName: reqData.species.name,pokemonImage: reqData.sprites.other.home.front_default,};return Functions.encodeString(JSON.stringify(myData));"},"visibility":"public"},{"body":{"id":2717,"nodeType":"Block","src":"3362:2:15","statements":[]},"id":2718,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2711,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"3300:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2712,"kind":"baseConstructorSpecifier","modifierName":{"id":2710,"name":"FunctionsClient","nameLocations":["3284:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":117,"src":"3284:15:15"},"nodeType":"ModifierInvocation","src":"3284:23:15"},{"arguments":[{"id":2714,"name":"arbitrumSepoliaVRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"3338:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2715,"kind":"baseConstructorSpecifier","modifierName":{"id":2713,"name":"VRFConsumerBaseV2Plus","nameLocations":["3316:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"3316:21:15"},"nodeType":"ModifierInvocation","src":"3316:41:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[],"src":"3273:2:15"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[],"src":"3362:0:15"},"scope":2897,"src":"3262:102:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2729,"nodeType":"Block","src":"3430:31:15","statements":[{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"pokesource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3440:10:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2726,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3453:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3440:14:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2728,"nodeType":"ExpressionStatement","src":"3440:14:15"}]},"functionSelector":"77452a2c","id":2730,"implemented":true,"kind":"function","modifiers":[{"id":2723,"kind":"modifierInvocation","modifierName":{"id":2722,"name":"onlyOwner","nameLocations":["3420:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"3420:9:15"},"nodeType":"ModifierInvocation","src":"3420:9:15"}],"name":"updatePokeSource","nameLocation":"3379:16:15","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"s","nameLocation":"3410:1:15","nodeType":"VariableDeclaration","scope":2730,"src":"3396:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"3396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3395:17:15"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[],"src":"3430:0:15"},"scope":2897,"src":"3370:91:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2789,"nodeType":"Block","src":"3541:809:15","statements":[{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"3551:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2742,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"3674:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2743,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3706:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2744,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"3760:20:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2745,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3816:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2746,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3860:8:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[{"hexValue":"66616c7365","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3991:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2749,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"3947:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2593_$","typeString":"type(library VRFV2PlusClient)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3963:11:15","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2564,"src":"3947:27:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2564_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3976:13:15"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"3947:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2564_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2747,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"3897:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2593_$","typeString":"type(library VRFV2PlusClient)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3913:12:15","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"3897:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2564_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3897:119:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2740,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"3612:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2593_$","typeString":"type(library VRFV2PlusClient)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3628:18:15","memberName":"RandomWordsRequest","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"3612:34:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RandomWordsRequest_$2577_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3665:7:15","3699:5:15","3738:20:15","3798:16:15","3850:8:15","3886:9:15"],"names":["keyHash","subId","requestConfirmations","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"3612:419:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2577_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RandomWordsRequest_$2577_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}],"expression":{"id":2738,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"3563:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2448","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3580:18:15","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"3563:35:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$2577_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3563:478:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3551:490:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"3551:490:15"},{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2758,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4051:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$2621_storage_$","typeString":"mapping(uint256 => struct EnterTheChainlinkMultiverse.RequestStatus storage ref)"}},"id":2760,"indexExpression":{"id":2759,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4062:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4051:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$2621_storage","typeString":"struct EnterTheChainlinkMultiverse.RequestStatus storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4130:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4116:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"4120:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ArrayTypeName","src":"4120:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4116:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"74727565","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4183:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2761,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"4075:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RequestStatus_$2621_storage_ptr_$","typeString":"type(struct EnterTheChainlinkMultiverse.RequestStatus storage pointer)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4103:11:15","4146:6:15","4172:9:15"],"names":["randomWords","exists","fulfilled"],"nodeType":"FunctionCall","src":"4075:124:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$2621_memory_ptr","typeString":"struct EnterTheChainlinkMultiverse.RequestStatus memory"}},"src":"4051:148:15","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$2621_storage","typeString":"struct EnterTheChainlinkMultiverse.RequestStatus storage ref"}},"id":2771,"nodeType":"ExpressionStatement","src":"4051:148:15"},{"expression":{"arguments":[{"id":2775,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4225:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2772,"name":"requestIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4209:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:4:15","memberName":"push","nodeType":"MemberAccess","src":"4209:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"ExpressionStatement","src":"4209:26:15"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2778,"name":"lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"4245:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2779,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4261:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4245:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"4245:25:15"},{"eventCall":{"arguments":[{"id":2783,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4297:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2784,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4308:8:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2782,"name":"RequestSent","nodeType":"Identifier","overloadedDeclarations":[2693,21],"referencedDeclaration":2693,"src":"4285:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4285:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2786,"nodeType":"EmitStatement","src":"4280:37:15"},{"expression":{"id":2787,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4334:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2736,"id":2788,"nodeType":"Return","src":"4327:16:15"}]},"functionSelector":"1ab0f2b3","id":2790,"implemented":true,"kind":"function","modifiers":[{"id":2733,"kind":"modifierInvocation","modifierName":{"id":2732,"name":"onlyOwner","nameLocations":["3503:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"3503:9:15"},"nodeType":"ModifierInvocation","src":"3503:9:15"}],"name":"makeRandomRequest","nameLocation":"3476:17:15","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"3493:2:15"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"requestId","nameLocation":"3530:9:15","nodeType":"VariableDeclaration","scope":2790,"src":"3522:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3521:19:15"},"scope":2897,"src":"3467:883:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2833,"nodeType":"Block","src":"4458:444:15","statements":[{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"req","nameLocation":"4500:3:15","nodeType":"VariableDeclaration","scope":2833,"src":"4468:35:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"FunctionsRequest.Request","nameLocations":["4468:16:15","4485:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4468:24:15"},"referencedDeclaration":306,"src":"4468:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"id":2804,"nodeType":"VariableDeclarationStatement","src":"4468:35:15"},{"expression":{"arguments":[{"id":2808,"name":"pokesource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"4554:10:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2805,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4513:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":2807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4517:36:15","memberName":"initializeRequestForInlineJavaScript","nodeType":"MemberAccess","referencedDeclaration":585,"src":"4513:40:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$306_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory) pure"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2810,"nodeType":"ExpressionStatement","src":"4513:52:15"},{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2811,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4576:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2813,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4620:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":2814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4624:10:15","memberName":"encodeCBOR","nodeType":"MemberAccess","referencedDeclaration":521,"src":"4620:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_struct$_Request_$306_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory) pure returns (bytes memory)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4620:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2816,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4650:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2817,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4678:8:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2818,"name":"donId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"4700:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2812,"name":"_sendRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"4594:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint64_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint64,uint32,bytes32) returns (bytes32)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:121:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4576:139:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2821,"nodeType":"ExpressionStatement","src":"4576:139:15"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2822,"name":"requestIdPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"4725:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref)"}},"id":2824,"indexExpression":{"id":2823,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4742:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4725:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2826,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"4813:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4848:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2825,"name":"MultiverseFunctionRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"4761:25:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MultiverseFunctionRequest_$2626_storage_ptr_$","typeString":"type(struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage pointer)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4801:10:15","4837:9:15"],"names":["userWallet","isPending"],"nodeType":"FunctionCall","src":"4761:102:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_memory_ptr","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest memory"}},"src":"4725:138:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref"}},"id":2830,"nodeType":"ExpressionStatement","src":"4725:138:15"},{"expression":{"id":2831,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4880:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2798,"id":2832,"nodeType":"Return","src":"4873:22:15"}]},"functionSelector":"85e1b15b","id":2834,"implemented":true,"kind":"function","modifiers":[{"id":2795,"kind":"modifierInvocation","modifierName":{"id":2794,"name":"onlyOwner","nameLocations":["4420:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"4420:9:15"},"nodeType":"ModifierInvocation","src":"4420:9:15"}],"name":"sendRequest","nameLocation":"4365:11:15","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"userWallet","nameLocation":"4394:10:15","nodeType":"VariableDeclaration","scope":2834,"src":"4386:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"4386:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4376:34:15"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"requestId","nameLocation":"4447:9:15","nodeType":"VariableDeclaration","scope":2834,"src":"4439:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4439:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4438:19:15"},"scope":2897,"src":"4356:546:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[82],"body":{"id":2885,"nodeType":"Block","src":"5040:357:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2845,"name":"requestIdPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5071:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref)"}},"id":2847,"indexExpression":{"id":2846,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"5088:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5071:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5099:9:15","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":2625,"src":"5071:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5112:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5071:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657175657374206964","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5130:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f5343873485c5c5ba9c972f367671af3745dc5cce720ddb197036ef7342b2b0","typeString":"literal_string \"Invalid request id\""},"value":"Invalid request id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f5343873485c5c5ba9c972f367671af3745dc5cce720ddb197036ef7342b2b0","typeString":"literal_string \"Invalid request id\""}],"id":2844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5050:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5050:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"5050:110:15"},{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"s_lastError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"5170:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2855,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"5184:3:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5170:17:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2857,"nodeType":"ExpressionStatement","src":"5170:17:15"},{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2858,"name":"requestIdPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5197:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref)"}},"id":2860,"indexExpression":{"id":2859,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"5214:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5197:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref"}},"id":2861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5225:9:15","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":2625,"src":"5197:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5237:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5197:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"nodeType":"ExpressionStatement","src":"5197:45:15"},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"s_lastResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"5252:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2866,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"5269:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5252:25:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2868,"nodeType":"ExpressionStatement","src":"5252:25:15"},{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"5287:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2872,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"5303:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5296:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2870,"name":"string","nodeType":"ElementaryTypeName","src":"5296:6:15","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5287:25:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2875,"nodeType":"ExpressionStatement","src":"5287:25:15"},{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2876,"name":"userToRequestResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"5322:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":2881,"indexExpression":{"expression":{"baseExpression":{"id":2877,"name":"requestIdPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5342:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MultiverseFunctionRequest_$2626_storage_$","typeString":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref)"}},"id":2879,"indexExpression":{"id":2878,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"5359:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5342:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_MultiverseFunctionRequest_$2626_storage","typeString":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest storage ref"}},"id":2880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5370:10:15","memberName":"userWallet","nodeType":"MemberAccess","referencedDeclaration":2623,"src":"5342:38:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5322:59:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"5384:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5322:68:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2884,"nodeType":"ExpressionStatement","src":"5322:68:15"}]},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRequest","nameLocation":"4917:14:15","nodeType":"FunctionDefinition","overrides":{"id":2842,"nodeType":"OverrideSpecifier","overrides":[],"src":"5031:8:15"},"parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"requestId","nameLocation":"4949:9:15","nodeType":"VariableDeclaration","scope":2886,"src":"4941:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4941:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"response","nameLocation":"4981:8:15","nodeType":"VariableDeclaration","scope":2886,"src":"4968:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"4968:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"err","nameLocation":"5012:3:15","nodeType":"VariableDeclaration","scope":2886,"src":"4999:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2839,"name":"bytes","nodeType":"ElementaryTypeName","src":"4999:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4931:90:15"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[],"src":"5040:0:15"},"scope":2897,"src":"4908:489:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2336],"body":{"id":2895,"nodeType":"Block","src":"5522:2:15","statements":[]},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"5412:18:15","nodeType":"FunctionDefinition","overrides":{"id":2893,"nodeType":"OverrideSpecifier","overrides":[],"src":"5513:8:15"},"parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"requestId","nameLocation":"5448:9:15","nodeType":"VariableDeclaration","scope":2896,"src":"5440:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"randomWords","nameLocation":"5486:11:15","nodeType":"VariableDeclaration","scope":2896,"src":"5467:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"5467:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ArrayTypeName","src":"5467:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5430:73:15"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[],"src":"5522:0:15"},"scope":2897,"src":"5403:121:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2898,"src":"570:4956:15","usedErrors":[27,308,314,2286,2294,2296,2705],"usedEvents":[21,25,824,830,2455,2693,2700]}],"src":"32:5495:15"},"id":15}},"contracts":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"FunctionsClient":{"abi":[{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"handleOracleFulfillment(bytes32,bytes,bytes)":{"details":"Either response or error parameter will be set, but never both.","params":{"err":"Aggregated error either from the request's source code or from the execution pipeline.","requestId":"The requestId returned by FunctionsClient.sendRequest().","response":"Aggregated response from the request's source code."}}},"title":"The Chainlink Functions client contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"The Chainlink Functions client contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"notice\":\"Contract developers can inherit this contract in order to make Chainlink Functions requests\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":\"FunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {IFunctionsRouter} from \\\"./interfaces/IFunctionsRouter.sol\\\";\\nimport {IFunctionsClient} from \\\"./interfaces/IFunctionsClient.sol\\\";\\n\\nimport {FunctionsRequest} from \\\"./libraries/FunctionsRequest.sol\\\";\\n\\n/// @title The Chainlink Functions client contract\\n/// @notice Contract developers can inherit this contract in order to make Chainlink Functions requests\\nabstract contract FunctionsClient is IFunctionsClient {\\n  using FunctionsRequest for FunctionsRequest.Request;\\n\\n  IFunctionsRouter internal immutable i_router;\\n\\n  event RequestSent(bytes32 indexed id);\\n  event RequestFulfilled(bytes32 indexed id);\\n\\n  error OnlyRouterCanFulfill();\\n\\n  constructor(address router) {\\n    i_router = IFunctionsRouter(router);\\n  }\\n\\n  /// @notice Sends a Chainlink Functions request\\n  /// @param data The CBOR encoded bytes data for a Functions request\\n  /// @param subscriptionId The subscription ID that will be charged to service the request\\n  /// @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\\n  /// @return requestId The generated request ID for this request\\n  function _sendRequest(\\n    bytes memory data,\\n    uint64 subscriptionId,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) internal returns (bytes32) {\\n    bytes32 requestId = i_router.sendRequest(\\n      subscriptionId,\\n      data,\\n      FunctionsRequest.REQUEST_DATA_VERSION,\\n      callbackGasLimit,\\n      donId\\n    );\\n    emit RequestSent(requestId);\\n    return requestId;\\n  }\\n\\n  /// @notice User defined function to handle a response from the DON\\n  /// @param requestId The request ID, returned by sendRequest()\\n  /// @param response Aggregated response from the execution of the user's source code\\n  /// @param err Aggregated error from the execution of the user code or from the execution pipeline\\n  /// @dev Either response or error parameter will be set, but never both\\n  function fulfillRequest(bytes32 requestId, bytes memory response, bytes memory err) internal virtual;\\n\\n  /// @inheritdoc IFunctionsClient\\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external override {\\n    if (msg.sender != address(i_router)) {\\n      revert OnlyRouterCanFulfill();\\n    }\\n    fulfillRequest(requestId, response, err);\\n    emit RequestFulfilled(requestId);\\n  }\\n}\\n\",\"keccak256\":\"0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Chainlink Functions client interface.\\ninterface IFunctionsClient {\\n  /// @notice Chainlink Functions response handler called by the Functions Router\\n  /// during fullilment from the designated transmitter node in an OCR round.\\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\\n  /// @param response Aggregated response from the request's source code.\\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\\n  /// @dev Either response or error parameter will be set, but never both.\\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\\n}\\n\",\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {FunctionsResponse} from \\\"../libraries/FunctionsResponse.sol\\\";\\n\\n/// @title Chainlink Functions Router interface.\\ninterface IFunctionsRouter {\\n  /// @notice The identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  /// @return id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\\n  function getAllowListId() external view returns (bytes32);\\n\\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  function setAllowListId(bytes32 allowListId) external;\\n\\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\\n  /// @return adminFee\\n  function getAdminFee() external view returns (uint72 adminFee);\\n\\n  /// @notice Sends a request using the provided subscriptionId\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequest(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Sends a request to the proposed contracts\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequestToProposed(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Fulfill the request by:\\n  /// - calling back the data that the Oracle returned to the client contract\\n  /// - pay the DON for processing the request\\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\\n  /// @param response response data from DON consensus\\n  /// @param err error from DON consensus\\n  /// @param juelsPerGas - current rate of juels/gas\\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\\n  /// @param transmitter - The Node that transmitted the OCR report\\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\\n  /// @return fulfillResult -\\n  /// @return callbackGasCostJuels -\\n  function fulfill(\\n    bytes memory response,\\n    bytes memory err,\\n    uint96 juelsPerGas,\\n    uint96 costWithoutFulfillment,\\n    address transmitter,\\n    FunctionsResponse.Commitment memory commitment\\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\\n\\n  /// @notice Validate requested gas limit is below the subscription max.\\n  /// @param subscriptionId subscription ID\\n  /// @param callbackGasLimit desired callback gas limit\\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\\n\\n  /// @notice Get the current contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current contract address\\n  function getContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Get the proposed next contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current or proposed contract address\\n  function getProposedContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Return the latest proprosal set\\n  /// @return ids The identifiers of the contracts to update\\n  /// @return to The addresses of the contracts that will be updated to\\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\\n\\n  /// @notice Proposes one or more updates to the contract routes\\n  /// @dev Only callable by owner\\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\\n\\n  /// @notice Updates the current contract routes to the proposed contracts\\n  /// @dev Only callable by owner\\n  function updateContracts() external;\\n\\n  /// @dev Puts the system into an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function pause() external;\\n\\n  /// @dev Takes the system out of an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function unpause() external;\\n}\\n\",\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {CBOR} from \\\"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\\\";\\n\\n/// @title Library for encoding the input data of a Functions request into CBOR\\nlibrary FunctionsRequest {\\n  using CBOR for CBOR.CBORBuffer;\\n\\n  uint16 public constant REQUEST_DATA_VERSION = 1;\\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\\n\\n  enum Location {\\n    Inline, // Provided within the Request\\n    Remote, // Hosted through remote location that can be accessed through a provided URL\\n    DONHosted // Hosted on the DON's storage\\n  }\\n\\n  enum CodeLanguage {\\n    JavaScript\\n    // In future version we may add other languages\\n  }\\n\\n  struct Request {\\n    Location codeLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of the source code that will be executed on each node in the DON\\n    Location secretsLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of secrets that will be passed into the source code. *Only Remote secrets are supported\\n    CodeLanguage language; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The coding language that the source code is written in\\n    string source; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\\n    bytes encryptedSecretsReference; // \\u2550\\u2550\\u2578 Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\\n    string[] args; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 String arguments that will be passed into the source code\\n    bytes[] bytesArgs; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Bytes arguments that will be passed into the source code\\n  }\\n\\n  error EmptySource();\\n  error EmptySecrets();\\n  error EmptyArgs();\\n  error NoInlineSecrets();\\n\\n  /// @notice Encodes a Request to CBOR encoded bytes\\n  /// @param self The request to encode\\n  /// @return CBOR encoded bytes\\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"codeLocation\\\");\\n    buffer.writeUInt256(uint256(self.codeLocation));\\n\\n    buffer.writeString(\\\"language\\\");\\n    buffer.writeUInt256(uint256(self.language));\\n\\n    buffer.writeString(\\\"source\\\");\\n    buffer.writeString(self.source);\\n\\n    if (self.args.length > 0) {\\n      buffer.writeString(\\\"args\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.args.length; ++i) {\\n        buffer.writeString(self.args[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    if (self.encryptedSecretsReference.length > 0) {\\n      if (self.secretsLocation == Location.Inline) {\\n        revert NoInlineSecrets();\\n      }\\n      buffer.writeString(\\\"secretsLocation\\\");\\n      buffer.writeUInt256(uint256(self.secretsLocation));\\n      buffer.writeString(\\\"secrets\\\");\\n      buffer.writeBytes(self.encryptedSecretsReference);\\n    }\\n\\n    if (self.bytesArgs.length > 0) {\\n      buffer.writeString(\\\"bytesArgs\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\\n        buffer.writeBytes(self.bytesArgs[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    return buffer.buf.buf;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Sets the codeLocation and code on the request\\n  /// @param self The uninitialized request\\n  /// @param codeLocation The user provided source code location\\n  /// @param language The programming language of the user code\\n  /// @param source The user provided source code or a url\\n  function initializeRequest(\\n    Request memory self,\\n    Location codeLocation,\\n    CodeLanguage language,\\n    string memory source\\n  ) internal pure {\\n    if (bytes(source).length == 0) revert EmptySource();\\n\\n    self.codeLocation = codeLocation;\\n    self.language = language;\\n    self.source = source;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Simplified version of initializeRequest for PoC\\n  /// @param self The uninitialized request\\n  /// @param javaScriptSource The user provided JS code (must not be empty)\\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\\n  }\\n\\n  /// @notice Adds Remote user encrypted secrets to a Request\\n  /// @param self The initialized request\\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\\n\\n    self.secretsLocation = Location.Remote;\\n    self.encryptedSecretsReference = encryptedSecretsReference;\\n  }\\n\\n  /// @notice Adds DON-hosted secrets reference to a Request\\n  /// @param self The initialized request\\n  /// @param slotID Slot ID of the user's secrets hosted on DON\\n  /// @param version User data version (for the slotID)\\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"slotID\\\");\\n    buffer.writeUInt64(slotID);\\n    buffer.writeString(\\\"version\\\");\\n    buffer.writeUInt64(version);\\n\\n    self.secretsLocation = Location.DONHosted;\\n    self.encryptedSecretsReference = buffer.buf.buf;\\n  }\\n\\n  /// @notice Sets args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of string args (must not be empty)\\n  function setArgs(Request memory self, string[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.args = args;\\n  }\\n\\n  /// @notice Sets bytes args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of bytes args (must not be empty)\\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.bytesArgs = args;\\n  }\\n}\\n\",\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Library of types that are used for fulfillment of a Functions request\\nlibrary FunctionsResponse {\\n  // Used to send request information from the Router to the Coordinator\\n  struct RequestMeta {\\n    bytes data; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\\n    bytes32 flags; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Per-subscription flags\\n    address requestingContract; // \\u2550\\u2550\\u2557 The client contract that is sending the request\\n    uint96 availableBalance; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u255d Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint64 subscriptionId; //        \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint64 initiatedRequests; //     \\u2551 The number of requests that have been started\\n    uint32 callbackGasLimit; //      \\u2551 The amount of gas that the callback to the consuming contract will be given\\n    uint16 dataVersion; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The version of the structure of the CBOR encoded request data\\n    uint64 completedRequests; // \\u2550\\u2550\\u2550\\u2550\\u2557 The number of requests that have successfully completed or timed out\\n    address subscriptionOwner; // \\u2550\\u2550\\u2550\\u255d The owner of the billing subscription\\n  }\\n\\n  enum FulfillResult {\\n    FULFILLED, // 0\\n    USER_CALLBACK_ERROR, // 1\\n    INVALID_REQUEST_ID, // 2\\n    COST_EXCEEDS_COMMITMENT, // 3\\n    INSUFFICIENT_GAS_PROVIDED, // 4\\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\\n    INVALID_COMMITMENT // 6\\n  }\\n\\n  struct Commitment {\\n    bytes32 requestId; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 A unique identifier for a Chainlink Functions request\\n    address coordinator; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The Coordinator contract that manages the DON that is servicing a request\\n    uint96 estimatedTotalCostJuels; // \\u2550\\u2550\\u2550\\u2550\\u255d The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\\n    address client; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The client contract that sent the request\\n    uint64 subscriptionId; //              \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint32 callbackGasLimit; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The amount of gas that the callback to the consuming contract will be given\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint72 donFee; //                      \\u2551 Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\\n    uint40 gasOverheadBeforeCallback; //   \\u2551 Represents the average gas execution cost before the fulfillment callback.\\n    uint40 gasOverheadAfterCallback; //    \\u2551 Represents the average gas execution cost after the fulfillment callback.\\n    uint32 timeoutTimestamp; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The timestamp at which a request will be eligible to be timed out\\n  }\\n}\\n\",\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-2-Clause\\npragma solidity ^0.8.4;\\n\\n/**\\n* @dev A library for working with mutable byte buffers in Solidity.\\n*\\n* Byte buffers are mutable and expandable, and provide a variety of primitives\\n* for appending to them. At any time you can fetch a bytes object containing the\\n* current contents of the buffer. The bytes object should not be stored between\\n* operations, as it may change due to resizing of the buffer.\\n*/\\nlibrary Buffer {\\n    /**\\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n    *      a capacity. The capacity may be longer than the current value, in\\n    *      which case it can be extended without the need to allocate more memory.\\n    */\\n    struct buffer {\\n        bytes buf;\\n        uint capacity;\\n    }\\n\\n    /**\\n    * @dev Initializes a buffer with an initial capacity.\\n    * @param buf The buffer to initialize.\\n    * @param capacity The number of bytes of space to allocate the buffer.\\n    * @return The buffer, for chaining.\\n    */\\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\\n        if (capacity % 32 != 0) {\\n            capacity += 32 - (capacity % 32);\\n        }\\n        // Allocate space for the buffer data\\n        buf.capacity = capacity;\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(buf, ptr)\\n            mstore(ptr, 0)\\n            let fpm := add(32, add(ptr, capacity))\\n            if lt(fpm, ptr) {\\n                revert(0, 0)\\n            }\\n            mstore(0x40, fpm)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Initializes a new buffer from an existing bytes object.\\n    *      Changes to the buffer may mutate the original value.\\n    * @param b The bytes object to initialize the buffer with.\\n    * @return A new buffer.\\n    */\\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\\n        buffer memory buf;\\n        buf.buf = b;\\n        buf.capacity = b.length;\\n        return buf;\\n    }\\n\\n    function resize(buffer memory buf, uint capacity) private pure {\\n        bytes memory oldbuf = buf.buf;\\n        init(buf, capacity);\\n        append(buf, oldbuf);\\n    }\\n\\n    /**\\n    * @dev Sets buffer length to 0.\\n    * @param buf The buffer to truncate.\\n    * @return The original buffer, for chaining..\\n    */\\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n        assembly {\\n            let bufptr := mload(buf)\\n            mstore(bufptr, 0)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to copy.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\\n        require(len <= data.length);\\n\\n        uint off = buf.buf.length;\\n        uint newCapacity = off + len;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint dest;\\n        uint src;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Length of existing buffer data\\n            let buflen := mload(bufptr)\\n            // Start address = buffer address + offset + sizeof(buffer length)\\n            dest := add(add(bufptr, 32), off)\\n            // Update buffer length if we're extending it\\n            if gt(newCapacity, buflen) {\\n                mstore(bufptr, newCapacity)\\n            }\\n            src := add(data, 32)\\n        }\\n\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        unchecked {\\n            uint mask = (256 ** (32 - len)) - 1;\\n            assembly {\\n                let srcpart := and(mload(src), not(mask))\\n                let destpart := and(mload(dest), mask)\\n                mstore(dest, or(destpart, srcpart))\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n        return append(buf, data, data.length);\\n    }\\n\\n    /**\\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n    *      capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint offPlusOne = off + 1;\\n        if (off >= buf.capacity) {\\n            resize(buf, offPlusOne * 2);\\n        }\\n\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + off\\n            let dest := add(add(bufptr, off), 32)\\n            mstore8(dest, data)\\n            // Update buffer length if we extended it\\n            if gt(offPlusOne, mload(bufptr)) {\\n                mstore(bufptr, offPlusOne)\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\\n    *      exceed the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to write (left-aligned).\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        unchecked {\\n            uint mask = (256 ** len) - 1;\\n            // Right-align data\\n            data = data >> (8 * (32 - len));\\n            assembly {\\n                // Memory address of the buffer data\\n                let bufptr := mload(buf)\\n                // Address = buffer address + sizeof(buffer length) + newCapacity\\n                let dest := add(bufptr, newCapacity)\\n                mstore(dest, or(and(mload(dest), not(mask)), data))\\n                // Update buffer length if we extended it\\n                if gt(newCapacity, mload(bufptr)) {\\n                    mstore(bufptr, newCapacity)\\n                }\\n            }\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chhaining.\\n    */\\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n        return append(buf, bytes32(data), 20);\\n    }\\n\\n    /**\\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n        return append(buf, data, 32);\\n    }\\n\\n    /**\\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n     *      exceed the capacity of the buffer.\\n     * @param buf The buffer to append to.\\n     * @param data The data to append.\\n     * @param len The number of bytes to write (right-aligned).\\n     * @return The original buffer.\\n     */\\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint mask = (256 ** len) - 1;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + newCapacity\\n            let dest := add(bufptr, newCapacity)\\n            mstore(dest, or(and(mload(dest), not(mask)), data))\\n            // Update buffer length if we extended it\\n            if gt(newCapacity, mload(bufptr)) {\\n                mstore(bufptr, newCapacity)\\n            }\\n        }\\n        return buf;\\n    }\\n}\",\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\"},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../../@ensdomains/buffer/v0.1.0/Buffer.sol\\\";\\n\\n/**\\n* @dev A library for populating CBOR encoded payload in Solidity.\\n*\\n* https://datatracker.ietf.org/doc/html/rfc7049\\n*\\n* The library offers various write* and start* methods to encode values of different types.\\n* The resulted buffer can be obtained with data() method.\\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\\n* in an invalid CBOR if start/write/end flow is violated.\\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\\n* except for nested start/end pairs.\\n*/\\n\\nlibrary CBOR {\\n    using Buffer for Buffer.buffer;\\n\\n    struct CBORBuffer {\\n        Buffer.buffer buf;\\n        uint256 depth;\\n    }\\n\\n    uint8 private constant MAJOR_TYPE_INT = 0;\\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\\n    uint8 private constant MAJOR_TYPE_STRING = 3;\\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n    uint8 private constant MAJOR_TYPE_MAP = 5;\\n    uint8 private constant MAJOR_TYPE_TAG = 6;\\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n    uint8 private constant CBOR_FALSE = 20;\\n    uint8 private constant CBOR_TRUE = 21;\\n    uint8 private constant CBOR_NULL = 22;\\n    uint8 private constant CBOR_UNDEFINED = 23;\\n\\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\\n        Buffer.init(cbor.buf, capacity);\\n        cbor.depth = 0;\\n        return cbor;\\n    }\\n\\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\\n        require(buf.depth == 0, \\\"Invalid CBOR\\\");\\n        return buf.buf.buf;\\n    }\\n\\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n        writeBytes(buf, abi.encode(value));\\n    }\\n\\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\\n        if (value < 0) {\\n            buf.buf.appendUint8(\\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\\n            );\\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\\n        } else {\\n            writeUInt256(buf, uint256(value));\\n        }\\n    }\\n\\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\\n    }\\n\\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\\n        if(value >= 0) {\\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n        } else{\\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\\n        }\\n    }\\n\\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n        buf.buf.append(value);\\n    }\\n\\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n        buf.buf.append(bytes(value));\\n    }\\n\\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\\n    }\\n\\n    function writeNull(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_NULL);\\n    }\\n\\n    function writeUndefined(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_UNDEFINED);\\n    }\\n\\n    function startArray(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\\n    }\\n\\n    function startMap(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\\n    }\\n\\n    function endSequence(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n        buf.depth -= 1;\\n    }\\n\\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\\n        writeString(buf, key);\\n        writeString(buf, value);\\n    }\\n\\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\\n        writeString(buf, key);\\n        writeBytes(buf, value);\\n    }\\n\\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt256(buf, value);\\n    }\\n\\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\\n        writeString(buf, key);\\n        writeInt256(buf, value);\\n    }\\n\\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt64(buf, value);\\n    }\\n\\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\\n        writeString(buf, key);\\n        writeInt64(buf, value);\\n    }\\n\\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\\n        writeString(buf, key);\\n        writeBool(buf, value);\\n    }\\n\\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeNull(buf);\\n    }\\n\\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeUndefined(buf);\\n    }\\n\\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startMap(buf);\\n    }\\n\\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startArray(buf);\\n    }\\n\\n    function writeFixedNumeric(\\n        CBORBuffer memory buf,\\n        uint8 major,\\n        uint64 value\\n    ) private pure {\\n        if (value <= 23) {\\n            buf.buf.appendUint8(uint8((major << 5) | value));\\n        } else if (value <= 0xFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 24));\\n            buf.buf.appendInt(value, 1);\\n        } else if (value <= 0xFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 25));\\n            buf.buf.appendInt(value, 2);\\n        } else if (value <= 0xFFFFFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 26));\\n            buf.buf.appendInt(value, 4);\\n        } else {\\n            buf.buf.appendUint8(uint8((major << 5) | 27));\\n            buf.buf.appendInt(value, 8);\\n        }\\n    }\\n\\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\\n        private\\n        pure\\n    {\\n        buf.buf.appendUint8(uint8((major << 5) | 31));\\n    }\\n\\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\\n        private\\n        pure\\n    {\\n        writeFixedNumeric(buf, major, length);\\n    }\\n\\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\\n    }\\n}\",\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"handleOracleFulfillment(bytes32,bytes,bytes)":{"notice":"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round."}},"notice":"Contract developers can inherit this contract in order to make Chainlink Functions requests","version":1}}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"IFunctionsClient":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"handleOracleFulfillment(bytes32,bytes,bytes)":{"details":"Either response or error parameter will be set, but never both.","params":{"err":"Aggregated error either from the request's source code or from the execution pipeline.","requestId":"The requestId returned by FunctionsClient.sendRequest().","response":"Aggregated response from the request's source code."}}},"title":"Chainlink Functions client interface.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"Chainlink Functions client interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":\"IFunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Chainlink Functions client interface.\\ninterface IFunctionsClient {\\n  /// @notice Chainlink Functions response handler called by the Functions Router\\n  /// during fullilment from the designated transmitter node in an OCR round.\\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\\n  /// @param response Aggregated response from the request's source code.\\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\\n  /// @dev Either response or error parameter will be set, but never both.\\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\\n}\\n\",\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"handleOracleFulfillment(bytes32,bytes,bytes)":{"notice":"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round."}},"version":1}}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"IFunctionsRouter":{"abi":[{"inputs":[{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"},{"internalType":"uint96","name":"juelsPerGas","type":"uint96"},{"internalType":"uint96","name":"costWithoutFulfillment","type":"uint96"},{"internalType":"address","name":"transmitter","type":"address"},{"components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"address","name":"coordinator","type":"address"},{"internalType":"uint96","name":"estimatedTotalCostJuels","type":"uint96"},{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint72","name":"adminFee","type":"uint72"},{"internalType":"uint72","name":"donFee","type":"uint72"},{"internalType":"uint40","name":"gasOverheadBeforeCallback","type":"uint40"},{"internalType":"uint40","name":"gasOverheadAfterCallback","type":"uint40"},{"internalType":"uint32","name":"timeoutTimestamp","type":"uint32"}],"internalType":"struct FunctionsResponse.Commitment","name":"commitment","type":"tuple"}],"name":"fulfill","outputs":[{"internalType":"enum FunctionsResponse.FulfillResult","name":"","type":"uint8"},{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAdminFee","outputs":[{"internalType":"uint72","name":"adminFee","type":"uint72"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllowListId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getProposedContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProposedContractSet","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"name":"isValidCallbackGasLimit","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proposalSetIds","type":"bytes32[]"},{"internalType":"address[]","name":"proposalSetAddresses","type":"address[]"}],"name":"proposeContractsUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequestToProposed","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"allowListId","type":"bytes32"}],"name":"setAllowListId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateContracts","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":{"details":"Only callable by the Coordinator contract that is saved in the commitment","params":{"commitment":"- The parameters of the request that must be held consistent between request and response time","costWithoutFulfillment":"- The cost of processing the request (in Juels of LINK ), without fulfillment","err":"error from DON consensus","juelsPerGas":"- current rate of juels/gas","response":"response data from DON consensus","transmitter":"- The Node that transmitted the OCR report"},"returns":{"_0":"fulfillResult -","_1":"callbackGasCostJuels -"}},"getAdminFee()":{"returns":{"adminFee":"adminFee"}},"getAllowListId()":{"returns":{"_0":"id - bytes32 id that can be passed to the \"getContractById\" of the Router"}},"getContractById(bytes32)":{"params":{"id":"A bytes32 identifier for the route"},"returns":{"_0":"contract The current contract address"}},"getProposedContractById(bytes32)":{"params":{"id":"A bytes32 identifier for the route"},"returns":{"_0":"contract The current or proposed contract address"}},"getProposedContractSet()":{"returns":{"_0":"ids The identifiers of the contracts to update","_1":"to The addresses of the contracts that will be updated to"}},"isValidCallbackGasLimit(uint64,uint32)":{"params":{"callbackGasLimit":"desired callback gas limit","subscriptionId":"subscription ID"}},"pause()":{"details":"Puts the system into an emergency stopped state.Only callable by owner"},"proposeContractsUpdate(bytes32[],address[])":{"details":"Only callable by owner"},"sendRequest(uint64,bytes,uint16,uint32,bytes32)":{"params":{"callbackGasLimit":"- Gas limit for the fulfillment callback","data":"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request","dataVersion":"- Gas limit for the fulfillment callback","donId":"- An identifier used to determine which route to send the request along","subscriptionId":"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription"},"returns":{"_0":"requestId - A unique request identifier"}},"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":{"params":{"callbackGasLimit":"- Gas limit for the fulfillment callback","data":"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request","dataVersion":"- Gas limit for the fulfillment callback","donId":"- An identifier used to determine which route to send the request along","subscriptionId":"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription"},"returns":{"_0":"requestId - A unique request identifier"}},"unpause()":{"details":"Takes the system out of an emergency stopped state.Only callable by owner"},"updateContracts()":{"details":"Only callable by owner"}},"title":"Chainlink Functions Router interface.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":"33060529","getAdminFee()":"2a905ccc","getAllowListId()":"aab396bd","getContractById(bytes32)":"a9c9a918","getProposedContractById(bytes32)":"6a2215de","getProposedContractSet()":"badc3eb6","isValidCallbackGasLimit(uint64,uint32)":"10fc49c1","pause()":"8456cb59","proposeContractsUpdate(bytes32[],address[])":"3e871e4d","sendRequest(uint64,bytes,uint16,uint32,bytes32)":"461d2762","sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":"41db4ca3","setAllowListId(bytes32)":"ea320e0b","unpause()":"3f4ba83a","updateContracts()":"b734c0f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"juelsPerGas\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"costWithoutFulfillment\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"estimatedTotalCostJuels\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"donFee\",\"type\":\"uint72\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadBeforeCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadAfterCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"timeoutTimestamp\",\"type\":\"uint32\"}],\"internalType\":\"struct FunctionsResponse.Commitment\",\"name\":\"commitment\",\"type\":\"tuple\"}],\"name\":\"fulfill\",\"outputs\":[{\"internalType\":\"enum FunctionsResponse.FulfillResult\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminFee\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getProposedContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposedContractSet\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"isValidCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalSetIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"proposalSetAddresses\",\"type\":\"address[]\"}],\"name\":\"proposeContractsUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequestToProposed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowListId\",\"type\":\"bytes32\"}],\"name\":\"setAllowListId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"details\":\"Only callable by the Coordinator contract that is saved in the commitment\",\"params\":{\"commitment\":\"- The parameters of the request that must be held consistent between request and response time\",\"costWithoutFulfillment\":\"- The cost of processing the request (in Juels of LINK ), without fulfillment\",\"err\":\"error from DON consensus\",\"juelsPerGas\":\"- current rate of juels/gas\",\"response\":\"response data from DON consensus\",\"transmitter\":\"- The Node that transmitted the OCR report\"},\"returns\":{\"_0\":\"fulfillResult -\",\"_1\":\"callbackGasCostJuels -\"}},\"getAdminFee()\":{\"returns\":{\"adminFee\":\"adminFee\"}},\"getAllowListId()\":{\"returns\":{\"_0\":\"id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\"}},\"getContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current contract address\"}},\"getProposedContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current or proposed contract address\"}},\"getProposedContractSet()\":{\"returns\":{\"_0\":\"ids The identifiers of the contracts to update\",\"_1\":\"to The addresses of the contracts that will be updated to\"}},\"isValidCallbackGasLimit(uint64,uint32)\":{\"params\":{\"callbackGasLimit\":\"desired callback gas limit\",\"subscriptionId\":\"subscription ID\"}},\"pause()\":{\"details\":\"Puts the system into an emergency stopped state.Only callable by owner\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"details\":\"Only callable by owner\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"unpause()\":{\"details\":\"Takes the system out of an emergency stopped state.Only callable by owner\"},\"updateContracts()\":{\"details\":\"Only callable by owner\"}},\"title\":\"Chainlink Functions Router interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"notice\":\"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request\"},\"getAdminFee()\":{\"notice\":\"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\"},\"getAllowListId()\":{\"notice\":\"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"getContractById(bytes32)\":{\"notice\":\"Get the current contract given an ID\"},\"getProposedContractById(bytes32)\":{\"notice\":\"Get the proposed next contract given an ID\"},\"getProposedContractSet()\":{\"notice\":\"Return the latest proprosal set\"},\"isValidCallbackGasLimit(uint64,uint32)\":{\"notice\":\"Validate requested gas limit is below the subscription max.\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"notice\":\"Proposes one or more updates to the contract routes\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request using the provided subscriptionId\"},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request to the proposed contracts\"},\"setAllowListId(bytes32)\":{\"notice\":\"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"updateContracts()\":{\"notice\":\"Updates the current contract routes to the proposed contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":\"IFunctionsRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {FunctionsResponse} from \\\"../libraries/FunctionsResponse.sol\\\";\\n\\n/// @title Chainlink Functions Router interface.\\ninterface IFunctionsRouter {\\n  /// @notice The identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  /// @return id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\\n  function getAllowListId() external view returns (bytes32);\\n\\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  function setAllowListId(bytes32 allowListId) external;\\n\\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\\n  /// @return adminFee\\n  function getAdminFee() external view returns (uint72 adminFee);\\n\\n  /// @notice Sends a request using the provided subscriptionId\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequest(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Sends a request to the proposed contracts\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequestToProposed(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Fulfill the request by:\\n  /// - calling back the data that the Oracle returned to the client contract\\n  /// - pay the DON for processing the request\\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\\n  /// @param response response data from DON consensus\\n  /// @param err error from DON consensus\\n  /// @param juelsPerGas - current rate of juels/gas\\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\\n  /// @param transmitter - The Node that transmitted the OCR report\\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\\n  /// @return fulfillResult -\\n  /// @return callbackGasCostJuels -\\n  function fulfill(\\n    bytes memory response,\\n    bytes memory err,\\n    uint96 juelsPerGas,\\n    uint96 costWithoutFulfillment,\\n    address transmitter,\\n    FunctionsResponse.Commitment memory commitment\\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\\n\\n  /// @notice Validate requested gas limit is below the subscription max.\\n  /// @param subscriptionId subscription ID\\n  /// @param callbackGasLimit desired callback gas limit\\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\\n\\n  /// @notice Get the current contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current contract address\\n  function getContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Get the proposed next contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current or proposed contract address\\n  function getProposedContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Return the latest proprosal set\\n  /// @return ids The identifiers of the contracts to update\\n  /// @return to The addresses of the contracts that will be updated to\\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\\n\\n  /// @notice Proposes one or more updates to the contract routes\\n  /// @dev Only callable by owner\\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\\n\\n  /// @notice Updates the current contract routes to the proposed contracts\\n  /// @dev Only callable by owner\\n  function updateContracts() external;\\n\\n  /// @dev Puts the system into an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function pause() external;\\n\\n  /// @dev Takes the system out of an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function unpause() external;\\n}\\n\",\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Library of types that are used for fulfillment of a Functions request\\nlibrary FunctionsResponse {\\n  // Used to send request information from the Router to the Coordinator\\n  struct RequestMeta {\\n    bytes data; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\\n    bytes32 flags; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Per-subscription flags\\n    address requestingContract; // \\u2550\\u2550\\u2557 The client contract that is sending the request\\n    uint96 availableBalance; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u255d Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint64 subscriptionId; //        \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint64 initiatedRequests; //     \\u2551 The number of requests that have been started\\n    uint32 callbackGasLimit; //      \\u2551 The amount of gas that the callback to the consuming contract will be given\\n    uint16 dataVersion; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The version of the structure of the CBOR encoded request data\\n    uint64 completedRequests; // \\u2550\\u2550\\u2550\\u2550\\u2557 The number of requests that have successfully completed or timed out\\n    address subscriptionOwner; // \\u2550\\u2550\\u2550\\u255d The owner of the billing subscription\\n  }\\n\\n  enum FulfillResult {\\n    FULFILLED, // 0\\n    USER_CALLBACK_ERROR, // 1\\n    INVALID_REQUEST_ID, // 2\\n    COST_EXCEEDS_COMMITMENT, // 3\\n    INSUFFICIENT_GAS_PROVIDED, // 4\\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\\n    INVALID_COMMITMENT // 6\\n  }\\n\\n  struct Commitment {\\n    bytes32 requestId; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 A unique identifier for a Chainlink Functions request\\n    address coordinator; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The Coordinator contract that manages the DON that is servicing a request\\n    uint96 estimatedTotalCostJuels; // \\u2550\\u2550\\u2550\\u2550\\u255d The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\\n    address client; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The client contract that sent the request\\n    uint64 subscriptionId; //              \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint32 callbackGasLimit; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The amount of gas that the callback to the consuming contract will be given\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint72 donFee; //                      \\u2551 Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\\n    uint40 gasOverheadBeforeCallback; //   \\u2551 Represents the average gas execution cost before the fulfillment callback.\\n    uint40 gasOverheadAfterCallback; //    \\u2551 Represents the average gas execution cost after the fulfillment callback.\\n    uint32 timeoutTimestamp; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The timestamp at which a request will be eligible to be timed out\\n  }\\n}\\n\",\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":{"notice":"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request"},"getAdminFee()":{"notice":"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network"},"getAllowListId()":{"notice":"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions"},"getContractById(bytes32)":{"notice":"Get the current contract given an ID"},"getProposedContractById(bytes32)":{"notice":"Get the proposed next contract given an ID"},"getProposedContractSet()":{"notice":"Return the latest proprosal set"},"isValidCallbackGasLimit(uint64,uint32)":{"notice":"Validate requested gas limit is below the subscription max."},"proposeContractsUpdate(bytes32[],address[])":{"notice":"Proposes one or more updates to the contract routes"},"sendRequest(uint64,bytes,uint16,uint32,bytes32)":{"notice":"Sends a request using the provided subscriptionId"},"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":{"notice":"Sends a request to the proposed contracts"},"setAllowListId(bytes32)":{"notice":"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions"},"updateContracts()":{"notice":"Updates the current contract routes to the proposed contracts"}},"version":1}}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"FunctionsRequest":{"abi":[{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySecrets","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[],"name":"REQUEST_DATA_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"Library for encoding the input data of a Functions request into CBOR","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608c610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80635d641dfc146038575b600080fd5b603f600181565b60405161ffff909116815260200160405180910390f3fea264697066735822122000ca6cb2b1ca6b2f1777462c6e43bf527457f5638cf66b482170e84da8737e7164736f6c63430008140033","opcodes":"PUSH1 0x8C PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D641DFC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xCA PUSH13 0xB2B1CA6B2F1777462C6E43BF52 PUSH21 0x57F5638CF66B482170E84DA8737E7164736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"212:6086:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;212:6086:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@REQUEST_DATA_VERSION_277":{"entryPoint":null,"id":277,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:212:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"121:89:16","statements":[{"nodeType":"YulAssignment","src":"131:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"143:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"139:3:16"},"nodeType":"YulFunctionCall","src":"139:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"131:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"188:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"196:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"184:3:16"},"nodeType":"YulFunctionCall","src":"184:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:38:16"},"nodeType":"YulExpressionStatement","src":"166:38:16"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"90:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"101:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"112:4:16","type":""}],"src":"14:196:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80635d641dfc146038575b600080fd5b603f600181565b60405161ffff909116815260200160405180910390f3fea264697066735822122000ca6cb2b1ca6b2f1777462c6e43bf527457f5638cf66b482170e84da8737e7164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D641DFC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xCA PUSH13 0xB2B1CA6B2F1777462C6E43BF52 PUSH21 0x57F5638CF66B482170E84DA8737E7164736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"212:6086:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;276:47;;322:1;276:47;;;;;196:6:16;184:19;;;166:38;;154:2;139:18;276:47:3;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"28000","executionCost":"112","totalCost":"28112"},"external":{"REQUEST_DATA_VERSION()":"154"},"internal":{"addDONHostedSecrets(struct FunctionsRequest.Request memory,uint8,uint64)":"infinite","addSecretsReference(struct FunctionsRequest.Request memory,bytes memory)":"infinite","encodeCBOR(struct FunctionsRequest.Request memory)":"infinite","initializeRequest(struct FunctionsRequest.Request memory,enum FunctionsRequest.Location,enum FunctionsRequest.CodeLanguage,string memory)":"infinite","initializeRequestForInlineJavaScript(struct FunctionsRequest.Request memory,string memory)":"infinite","setArgs(struct FunctionsRequest.Request memory,string memory[] memory)":"infinite","setBytesArgs(struct FunctionsRequest.Request memory,bytes memory[] memory)":"infinite"}},"methodIdentifiers":{"REQUEST_DATA_VERSION()":"5d641dfc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REQUEST_DATA_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for encoding the input data of a Functions request into CBOR\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":\"FunctionsRequest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {CBOR} from \\\"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\\\";\\n\\n/// @title Library for encoding the input data of a Functions request into CBOR\\nlibrary FunctionsRequest {\\n  using CBOR for CBOR.CBORBuffer;\\n\\n  uint16 public constant REQUEST_DATA_VERSION = 1;\\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\\n\\n  enum Location {\\n    Inline, // Provided within the Request\\n    Remote, // Hosted through remote location that can be accessed through a provided URL\\n    DONHosted // Hosted on the DON's storage\\n  }\\n\\n  enum CodeLanguage {\\n    JavaScript\\n    // In future version we may add other languages\\n  }\\n\\n  struct Request {\\n    Location codeLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of the source code that will be executed on each node in the DON\\n    Location secretsLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of secrets that will be passed into the source code. *Only Remote secrets are supported\\n    CodeLanguage language; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The coding language that the source code is written in\\n    string source; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\\n    bytes encryptedSecretsReference; // \\u2550\\u2550\\u2578 Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\\n    string[] args; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 String arguments that will be passed into the source code\\n    bytes[] bytesArgs; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Bytes arguments that will be passed into the source code\\n  }\\n\\n  error EmptySource();\\n  error EmptySecrets();\\n  error EmptyArgs();\\n  error NoInlineSecrets();\\n\\n  /// @notice Encodes a Request to CBOR encoded bytes\\n  /// @param self The request to encode\\n  /// @return CBOR encoded bytes\\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"codeLocation\\\");\\n    buffer.writeUInt256(uint256(self.codeLocation));\\n\\n    buffer.writeString(\\\"language\\\");\\n    buffer.writeUInt256(uint256(self.language));\\n\\n    buffer.writeString(\\\"source\\\");\\n    buffer.writeString(self.source);\\n\\n    if (self.args.length > 0) {\\n      buffer.writeString(\\\"args\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.args.length; ++i) {\\n        buffer.writeString(self.args[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    if (self.encryptedSecretsReference.length > 0) {\\n      if (self.secretsLocation == Location.Inline) {\\n        revert NoInlineSecrets();\\n      }\\n      buffer.writeString(\\\"secretsLocation\\\");\\n      buffer.writeUInt256(uint256(self.secretsLocation));\\n      buffer.writeString(\\\"secrets\\\");\\n      buffer.writeBytes(self.encryptedSecretsReference);\\n    }\\n\\n    if (self.bytesArgs.length > 0) {\\n      buffer.writeString(\\\"bytesArgs\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\\n        buffer.writeBytes(self.bytesArgs[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    return buffer.buf.buf;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Sets the codeLocation and code on the request\\n  /// @param self The uninitialized request\\n  /// @param codeLocation The user provided source code location\\n  /// @param language The programming language of the user code\\n  /// @param source The user provided source code or a url\\n  function initializeRequest(\\n    Request memory self,\\n    Location codeLocation,\\n    CodeLanguage language,\\n    string memory source\\n  ) internal pure {\\n    if (bytes(source).length == 0) revert EmptySource();\\n\\n    self.codeLocation = codeLocation;\\n    self.language = language;\\n    self.source = source;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Simplified version of initializeRequest for PoC\\n  /// @param self The uninitialized request\\n  /// @param javaScriptSource The user provided JS code (must not be empty)\\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\\n  }\\n\\n  /// @notice Adds Remote user encrypted secrets to a Request\\n  /// @param self The initialized request\\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\\n\\n    self.secretsLocation = Location.Remote;\\n    self.encryptedSecretsReference = encryptedSecretsReference;\\n  }\\n\\n  /// @notice Adds DON-hosted secrets reference to a Request\\n  /// @param self The initialized request\\n  /// @param slotID Slot ID of the user's secrets hosted on DON\\n  /// @param version User data version (for the slotID)\\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"slotID\\\");\\n    buffer.writeUInt64(slotID);\\n    buffer.writeString(\\\"version\\\");\\n    buffer.writeUInt64(version);\\n\\n    self.secretsLocation = Location.DONHosted;\\n    self.encryptedSecretsReference = buffer.buf.buf;\\n  }\\n\\n  /// @notice Sets args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of string args (must not be empty)\\n  function setArgs(Request memory self, string[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.args = args;\\n  }\\n\\n  /// @notice Sets bytes args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of bytes args (must not be empty)\\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.bytesArgs = args;\\n  }\\n}\\n\",\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-2-Clause\\npragma solidity ^0.8.4;\\n\\n/**\\n* @dev A library for working with mutable byte buffers in Solidity.\\n*\\n* Byte buffers are mutable and expandable, and provide a variety of primitives\\n* for appending to them. At any time you can fetch a bytes object containing the\\n* current contents of the buffer. The bytes object should not be stored between\\n* operations, as it may change due to resizing of the buffer.\\n*/\\nlibrary Buffer {\\n    /**\\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n    *      a capacity. The capacity may be longer than the current value, in\\n    *      which case it can be extended without the need to allocate more memory.\\n    */\\n    struct buffer {\\n        bytes buf;\\n        uint capacity;\\n    }\\n\\n    /**\\n    * @dev Initializes a buffer with an initial capacity.\\n    * @param buf The buffer to initialize.\\n    * @param capacity The number of bytes of space to allocate the buffer.\\n    * @return The buffer, for chaining.\\n    */\\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\\n        if (capacity % 32 != 0) {\\n            capacity += 32 - (capacity % 32);\\n        }\\n        // Allocate space for the buffer data\\n        buf.capacity = capacity;\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(buf, ptr)\\n            mstore(ptr, 0)\\n            let fpm := add(32, add(ptr, capacity))\\n            if lt(fpm, ptr) {\\n                revert(0, 0)\\n            }\\n            mstore(0x40, fpm)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Initializes a new buffer from an existing bytes object.\\n    *      Changes to the buffer may mutate the original value.\\n    * @param b The bytes object to initialize the buffer with.\\n    * @return A new buffer.\\n    */\\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\\n        buffer memory buf;\\n        buf.buf = b;\\n        buf.capacity = b.length;\\n        return buf;\\n    }\\n\\n    function resize(buffer memory buf, uint capacity) private pure {\\n        bytes memory oldbuf = buf.buf;\\n        init(buf, capacity);\\n        append(buf, oldbuf);\\n    }\\n\\n    /**\\n    * @dev Sets buffer length to 0.\\n    * @param buf The buffer to truncate.\\n    * @return The original buffer, for chaining..\\n    */\\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n        assembly {\\n            let bufptr := mload(buf)\\n            mstore(bufptr, 0)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to copy.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\\n        require(len <= data.length);\\n\\n        uint off = buf.buf.length;\\n        uint newCapacity = off + len;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint dest;\\n        uint src;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Length of existing buffer data\\n            let buflen := mload(bufptr)\\n            // Start address = buffer address + offset + sizeof(buffer length)\\n            dest := add(add(bufptr, 32), off)\\n            // Update buffer length if we're extending it\\n            if gt(newCapacity, buflen) {\\n                mstore(bufptr, newCapacity)\\n            }\\n            src := add(data, 32)\\n        }\\n\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        unchecked {\\n            uint mask = (256 ** (32 - len)) - 1;\\n            assembly {\\n                let srcpart := and(mload(src), not(mask))\\n                let destpart := and(mload(dest), mask)\\n                mstore(dest, or(destpart, srcpart))\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n        return append(buf, data, data.length);\\n    }\\n\\n    /**\\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n    *      capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint offPlusOne = off + 1;\\n        if (off >= buf.capacity) {\\n            resize(buf, offPlusOne * 2);\\n        }\\n\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + off\\n            let dest := add(add(bufptr, off), 32)\\n            mstore8(dest, data)\\n            // Update buffer length if we extended it\\n            if gt(offPlusOne, mload(bufptr)) {\\n                mstore(bufptr, offPlusOne)\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\\n    *      exceed the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to write (left-aligned).\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        unchecked {\\n            uint mask = (256 ** len) - 1;\\n            // Right-align data\\n            data = data >> (8 * (32 - len));\\n            assembly {\\n                // Memory address of the buffer data\\n                let bufptr := mload(buf)\\n                // Address = buffer address + sizeof(buffer length) + newCapacity\\n                let dest := add(bufptr, newCapacity)\\n                mstore(dest, or(and(mload(dest), not(mask)), data))\\n                // Update buffer length if we extended it\\n                if gt(newCapacity, mload(bufptr)) {\\n                    mstore(bufptr, newCapacity)\\n                }\\n            }\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chhaining.\\n    */\\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n        return append(buf, bytes32(data), 20);\\n    }\\n\\n    /**\\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n        return append(buf, data, 32);\\n    }\\n\\n    /**\\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n     *      exceed the capacity of the buffer.\\n     * @param buf The buffer to append to.\\n     * @param data The data to append.\\n     * @param len The number of bytes to write (right-aligned).\\n     * @return The original buffer.\\n     */\\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint mask = (256 ** len) - 1;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + newCapacity\\n            let dest := add(bufptr, newCapacity)\\n            mstore(dest, or(and(mload(dest), not(mask)), data))\\n            // Update buffer length if we extended it\\n            if gt(newCapacity, mload(bufptr)) {\\n                mstore(bufptr, newCapacity)\\n            }\\n        }\\n        return buf;\\n    }\\n}\",\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\"},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../../@ensdomains/buffer/v0.1.0/Buffer.sol\\\";\\n\\n/**\\n* @dev A library for populating CBOR encoded payload in Solidity.\\n*\\n* https://datatracker.ietf.org/doc/html/rfc7049\\n*\\n* The library offers various write* and start* methods to encode values of different types.\\n* The resulted buffer can be obtained with data() method.\\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\\n* in an invalid CBOR if start/write/end flow is violated.\\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\\n* except for nested start/end pairs.\\n*/\\n\\nlibrary CBOR {\\n    using Buffer for Buffer.buffer;\\n\\n    struct CBORBuffer {\\n        Buffer.buffer buf;\\n        uint256 depth;\\n    }\\n\\n    uint8 private constant MAJOR_TYPE_INT = 0;\\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\\n    uint8 private constant MAJOR_TYPE_STRING = 3;\\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n    uint8 private constant MAJOR_TYPE_MAP = 5;\\n    uint8 private constant MAJOR_TYPE_TAG = 6;\\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n    uint8 private constant CBOR_FALSE = 20;\\n    uint8 private constant CBOR_TRUE = 21;\\n    uint8 private constant CBOR_NULL = 22;\\n    uint8 private constant CBOR_UNDEFINED = 23;\\n\\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\\n        Buffer.init(cbor.buf, capacity);\\n        cbor.depth = 0;\\n        return cbor;\\n    }\\n\\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\\n        require(buf.depth == 0, \\\"Invalid CBOR\\\");\\n        return buf.buf.buf;\\n    }\\n\\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n        writeBytes(buf, abi.encode(value));\\n    }\\n\\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\\n        if (value < 0) {\\n            buf.buf.appendUint8(\\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\\n            );\\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\\n        } else {\\n            writeUInt256(buf, uint256(value));\\n        }\\n    }\\n\\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\\n    }\\n\\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\\n        if(value >= 0) {\\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n        } else{\\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\\n        }\\n    }\\n\\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n        buf.buf.append(value);\\n    }\\n\\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n        buf.buf.append(bytes(value));\\n    }\\n\\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\\n    }\\n\\n    function writeNull(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_NULL);\\n    }\\n\\n    function writeUndefined(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_UNDEFINED);\\n    }\\n\\n    function startArray(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\\n    }\\n\\n    function startMap(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\\n    }\\n\\n    function endSequence(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n        buf.depth -= 1;\\n    }\\n\\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\\n        writeString(buf, key);\\n        writeString(buf, value);\\n    }\\n\\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\\n        writeString(buf, key);\\n        writeBytes(buf, value);\\n    }\\n\\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt256(buf, value);\\n    }\\n\\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\\n        writeString(buf, key);\\n        writeInt256(buf, value);\\n    }\\n\\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt64(buf, value);\\n    }\\n\\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\\n        writeString(buf, key);\\n        writeInt64(buf, value);\\n    }\\n\\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\\n        writeString(buf, key);\\n        writeBool(buf, value);\\n    }\\n\\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeNull(buf);\\n    }\\n\\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeUndefined(buf);\\n    }\\n\\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startMap(buf);\\n    }\\n\\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startArray(buf);\\n    }\\n\\n    function writeFixedNumeric(\\n        CBORBuffer memory buf,\\n        uint8 major,\\n        uint64 value\\n    ) private pure {\\n        if (value <= 23) {\\n            buf.buf.appendUint8(uint8((major << 5) | value));\\n        } else if (value <= 0xFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 24));\\n            buf.buf.appendInt(value, 1);\\n        } else if (value <= 0xFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 25));\\n            buf.buf.appendInt(value, 2);\\n        } else if (value <= 0xFFFFFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 26));\\n            buf.buf.appendInt(value, 4);\\n        } else {\\n            buf.buf.appendUint8(uint8((major << 5) | 27));\\n            buf.buf.appendInt(value, 8);\\n        }\\n    }\\n\\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\\n        private\\n        pure\\n    {\\n        buf.buf.appendUint8(uint8((major << 5) | 31));\\n    }\\n\\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\\n        private\\n        pure\\n    {\\n        writeFixedNumeric(buf, major, length);\\n    }\\n\\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\\n    }\\n}\",\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"FunctionsResponse":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Library of types that are used for fulfillment of a Functions request","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220babfaef50835c9ed17d4d6bc184cf0b27ad867542b5409603672b33544fac38b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xBF 0xAE CREATE2 ADDMOD CALLDATALOAD 0xC9 0xED OR 0xD4 0xD6 0xBC XOR 0x4C CREATE 0xB2 PUSH27 0xD867542B5409603672B33544FAC38B64736F6C6343000814003300 ","sourceMap":"139:3258:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;139:3258:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220babfaef50835c9ed17d4d6bc184cf0b27ad867542b5409603672b33544fac38b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xBF 0xAE CREATE2 ADDMOD CALLDATALOAD 0xC9 0xED OR 0xD4 0xD6 0xBC XOR 0x4C CREATE 0xB2 PUSH27 0xD867542B5409603672B33544FAC38B64736F6C6343000814003300 ","sourceMap":"139:3258:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library of types that are used for fulfillment of a Functions request\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":\"FunctionsResponse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Library of types that are used for fulfillment of a Functions request\\nlibrary FunctionsResponse {\\n  // Used to send request information from the Router to the Coordinator\\n  struct RequestMeta {\\n    bytes data; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\\n    bytes32 flags; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Per-subscription flags\\n    address requestingContract; // \\u2550\\u2550\\u2557 The client contract that is sending the request\\n    uint96 availableBalance; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u255d Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint64 subscriptionId; //        \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint64 initiatedRequests; //     \\u2551 The number of requests that have been started\\n    uint32 callbackGasLimit; //      \\u2551 The amount of gas that the callback to the consuming contract will be given\\n    uint16 dataVersion; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The version of the structure of the CBOR encoded request data\\n    uint64 completedRequests; // \\u2550\\u2550\\u2550\\u2550\\u2557 The number of requests that have successfully completed or timed out\\n    address subscriptionOwner; // \\u2550\\u2550\\u2550\\u255d The owner of the billing subscription\\n  }\\n\\n  enum FulfillResult {\\n    FULFILLED, // 0\\n    USER_CALLBACK_ERROR, // 1\\n    INVALID_REQUEST_ID, // 2\\n    COST_EXCEEDS_COMMITMENT, // 3\\n    INSUFFICIENT_GAS_PROVIDED, // 4\\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\\n    INVALID_COMMITMENT // 6\\n  }\\n\\n  struct Commitment {\\n    bytes32 requestId; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 A unique identifier for a Chainlink Functions request\\n    address coordinator; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The Coordinator contract that manages the DON that is servicing a request\\n    uint96 estimatedTotalCostJuels; // \\u2550\\u2550\\u2550\\u2550\\u255d The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\\n    address client; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The client contract that sent the request\\n    uint64 subscriptionId; //              \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint32 callbackGasLimit; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The amount of gas that the callback to the consuming contract will be given\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint72 donFee; //                      \\u2551 Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\\n    uint40 gasOverheadBeforeCallback; //   \\u2551 Represents the average gas execution cost before the fulfillment callback.\\n    uint40 gasOverheadAfterCallback; //    \\u2551 Represents the average gas execution cost after the fulfillment callback.\\n    uint32 timeoutTimestamp; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The timestamp at which a request will be eligible to be timed out\\n  }\\n}\\n\",\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_806":{"entryPoint":null,"id":806,"parameterSlots":1,"returnSlots":0},"@_864":{"entryPoint":null,"id":864,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_948":{"entryPoint":197,"id":948,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1011:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:16","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:16"},"nodeType":"YulFunctionCall","src":"143:12:16"},"nodeType":"YulExpressionStatement","src":"143:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:16"},"nodeType":"YulFunctionCall","src":"112:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:16"},"nodeType":"YulFunctionCall","src":"108:32:16"},"nodeType":"YulIf","src":"105:52:16"},{"nodeType":"YulVariableDeclaration","src":"166:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:16"},"nodeType":"YulFunctionCall","src":"179:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:16"},"nodeType":"YulFunctionCall","src":"260:12:16"},"nodeType":"YulExpressionStatement","src":"260:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:16"},"nodeType":"YulFunctionCall","src":"235:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:16"},"nodeType":"YulFunctionCall","src":"224:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:16"},"nodeType":"YulFunctionCall","src":"214:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:16"},"nodeType":"YulFunctionCall","src":"207:50:16"},"nodeType":"YulIf","src":"204:70:16"},{"nodeType":"YulAssignment","src":"283:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:16"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:16","type":""}],"src":"14:290:16"},{"body":{"nodeType":"YulBlock","src":"483:174:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:16"},"nodeType":"YulFunctionCall","src":"493:21:16"},"nodeType":"YulExpressionStatement","src":"493:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:16"},"nodeType":"YulFunctionCall","src":"530:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:16","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:16"},"nodeType":"YulFunctionCall","src":"523:30:16"},"nodeType":"YulExpressionStatement","src":"523:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:16"},"nodeType":"YulFunctionCall","src":"569:18:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"589:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:16"},"nodeType":"YulFunctionCall","src":"562:54:16"},"nodeType":"YulExpressionStatement","src":"562:54:16"},{"nodeType":"YulAssignment","src":"625:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"637:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"648:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"633:3:16"},"nodeType":"YulFunctionCall","src":"633:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"625:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:16","type":""}],"src":"309:348:16"},{"body":{"nodeType":"YulBlock","src":"836:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"864:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:16"},"nodeType":"YulFunctionCall","src":"846:21:16"},"nodeType":"YulExpressionStatement","src":"846:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:16"},"nodeType":"YulFunctionCall","src":"883:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"903:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:16"},"nodeType":"YulFunctionCall","src":"876:30:16"},"nodeType":"YulExpressionStatement","src":"876:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"926:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"937:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"922:3:16"},"nodeType":"YulFunctionCall","src":"922:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"942:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"915:6:16"},"nodeType":"YulFunctionCall","src":"915:53:16"},"nodeType":"YulExpressionStatement","src":"915:53:16"},{"nodeType":"YulAssignment","src":"977:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"989:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1000:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"985:3:16"},"nodeType":"YulFunctionCall","src":"985:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"977:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"813:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"827:4:16","type":""}],"src":"662:347:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161045638038061045683398101604081905261002f9161016e565b8060006001600160a01b03821661008d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100bd576100bd816100c5565b50505061019e565b336001600160a01b0382160361011d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610084565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561018057600080fd5b81516001600160a01b038116811461019757600080fd5b9392505050565b6102a9806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212209818f1afa995622e7a20726b30f1be968e5628ad2be85fdff264d245155b89c864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x456 CODESIZE SUB DUP1 PUSH2 0x456 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x16E JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBD JUMPI PUSH2 0xBD DUP2 PUSH2 0xC5 JUMP JUMPDEST POP POP POP PUSH2 0x19E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 XOR CALL 0xAF 0xA9 SWAP6 PUSH3 0x2E7A20 PUSH19 0x6B30F1BE968E5628AD2BE85FDFF264D245155B DUP10 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"240:141:5:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;-1:-1:-1;;;;;598:22:6;;590:59;;;;-1:-1:-1;;;590:59:6;;511:2:16;590:59:6;;;493:21:16;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;590:59:6;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:6;-1:-1:-1;;;;;656:18:6;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;298:81:5;240:141;;1536:239:6;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;864:2:16;1641:52:6;;;846:21:16;903:2;883:18;;;876:30;942:25;922:18;;;915:53;985:18;;1641:52:6;662:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;14:290:16:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;662:347::-;240:141:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_948":{"entryPoint":410,"id":948,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_961":{"entryPoint":325,"id":961,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_914":{"entryPoint":130,"id":914,"parameterSlots":0,"returnSlots":0},"@owner_924":{"entryPoint":null,"id":924,"parameterSlots":0,"returnSlots":1},"@transferOwnership_878":{"entryPoint":305,"id":878,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1564:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:16","statements":[{"nodeType":"YulAssignment","src":"125:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:16"},"nodeType":"YulFunctionCall","src":"133:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:16"},"nodeType":"YulFunctionCall","src":"194:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:16"},"nodeType":"YulFunctionCall","src":"190:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:16"},"nodeType":"YulFunctionCall","src":"178:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:16"},"nodeType":"YulFunctionCall","src":"160:51:16"},"nodeType":"YulExpressionStatement","src":"160:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:16","type":""}],"src":"14:203:16"},{"body":{"nodeType":"YulBlock","src":"292:216:16","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:16"},"nodeType":"YulFunctionCall","src":"340:12:16"},"nodeType":"YulExpressionStatement","src":"340:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:16"},"nodeType":"YulFunctionCall","src":"309:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:16"},"nodeType":"YulFunctionCall","src":"305:32:16"},"nodeType":"YulIf","src":"302:52:16"},{"nodeType":"YulVariableDeclaration","src":"363:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:16"},"nodeType":"YulFunctionCall","src":"376:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:16"},"nodeType":"YulFunctionCall","src":"464:12:16"},"nodeType":"YulExpressionStatement","src":"464:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:16"},"nodeType":"YulFunctionCall","src":"443:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:16"},"nodeType":"YulFunctionCall","src":"439:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:16"},"nodeType":"YulFunctionCall","src":"428:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:16"},"nodeType":"YulFunctionCall","src":"418:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:16"},"nodeType":"YulFunctionCall","src":"411:50:16"},"nodeType":"YulIf","src":"408:70:16"},{"nodeType":"YulAssignment","src":"487:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:16","type":""}],"src":"222:286:16"},{"body":{"nodeType":"YulBlock","src":"687:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:16"},"nodeType":"YulFunctionCall","src":"697:21:16"},"nodeType":"YulExpressionStatement","src":"697:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:16"},"nodeType":"YulFunctionCall","src":"734:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:16"},"nodeType":"YulFunctionCall","src":"727:30:16"},"nodeType":"YulExpressionStatement","src":"727:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:16"},"nodeType":"YulFunctionCall","src":"773:18:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:16"},"nodeType":"YulFunctionCall","src":"766:52:16"},"nodeType":"YulExpressionStatement","src":"766:52:16"},{"nodeType":"YulAssignment","src":"827:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"850:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:16"},"nodeType":"YulFunctionCall","src":"835:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"827:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:16","type":""}],"src":"513:346:16"},{"body":{"nodeType":"YulBlock","src":"1038:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1055:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1066:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1048:6:16"},"nodeType":"YulFunctionCall","src":"1048:21:16"},"nodeType":"YulExpressionStatement","src":"1048:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:16"},"nodeType":"YulFunctionCall","src":"1085:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1078:6:16"},"nodeType":"YulFunctionCall","src":"1078:30:16"},"nodeType":"YulExpressionStatement","src":"1078:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1128:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:16"},"nodeType":"YulFunctionCall","src":"1124:18:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1144:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1117:6:16"},"nodeType":"YulFunctionCall","src":"1117:52:16"},"nodeType":"YulExpressionStatement","src":"1117:52:16"},{"nodeType":"YulAssignment","src":"1178:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1201:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:16"},"nodeType":"YulFunctionCall","src":"1186:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1178:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1015:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1029:4:16","type":""}],"src":"864:346:16"},{"body":{"nodeType":"YulBlock","src":"1389:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1399:6:16"},"nodeType":"YulFunctionCall","src":"1399:21:16"},"nodeType":"YulExpressionStatement","src":"1399:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1436:3:16"},"nodeType":"YulFunctionCall","src":"1436:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1456:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1429:6:16"},"nodeType":"YulFunctionCall","src":"1429:30:16"},"nodeType":"YulExpressionStatement","src":"1429:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1475:3:16"},"nodeType":"YulFunctionCall","src":"1475:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1495:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1468:6:16"},"nodeType":"YulFunctionCall","src":"1468:53:16"},"nodeType":"YulExpressionStatement","src":"1468:53:16"},{"nodeType":"YulAssignment","src":"1530:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:16"},"nodeType":"YulFunctionCall","src":"1538:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:16","type":""}],"src":"1215:347:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212209818f1afa995622e7a20726b30f1be968e5628ad2be85fdff264d245155b89c864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 XOR CALL 0xAF 0xA9 SWAP6 PUSH3 0x2E7A20 PUSH19 0x6B30F1BE968E5628AD2BE85FDFF264D245155B DUP10 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"240:141:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316:6;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:6;;;160:51:16;;1382:81:6;;;;;148:2:16;1382:81:6;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:6;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:6;;715:2:16;1128:63:6;;;697:21:16;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:16;;;766:52;835:18;;1128:63:6;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:6;;;;;;;-1:-1:-1;1256:27:6;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:6;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:6;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:6;;1066:2:16;1910:56:6;;;1048:21:16;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:16;;;1117:52;1186:18;;1910:56:6;864:346:16;1910:56:6;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;1417:2:16;1641:52:6;;;1399:21:16;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:6;1215:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;222:286:16:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:16;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:16:o"},"gasEstimates":{"creation":{"codeDepositCost":"136200","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52277","owner()":"2292","transferOwnership(address)":"30423"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":816,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":818,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_864":{"entryPoint":null,"id":864,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_948":{"entryPoint":193,"id":948,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":362,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":390,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1196:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:16","statements":[{"nodeType":"YulAssignment","src":"84:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:16"},"nodeType":"YulFunctionCall","src":"93:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:16"}]},{"body":{"nodeType":"YulBlock","src":"169:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:16"},"nodeType":"YulFunctionCall","src":"171:12:16"},"nodeType":"YulExpressionStatement","src":"171:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:16"},"nodeType":"YulFunctionCall","src":"150:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:16"},"nodeType":"YulFunctionCall","src":"146:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:16"},"nodeType":"YulFunctionCall","src":"135:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:16"},"nodeType":"YulFunctionCall","src":"125:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:16"},"nodeType":"YulFunctionCall","src":"118:50:16"},"nodeType":"YulIf","src":"115:70:16"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:16","type":""}],"src":"14:177:16"},{"body":{"nodeType":"YulBlock","src":"294:195:16","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:16"},"nodeType":"YulFunctionCall","src":"342:12:16"},"nodeType":"YulExpressionStatement","src":"342:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:16"},"nodeType":"YulFunctionCall","src":"311:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:16"},"nodeType":"YulFunctionCall","src":"307:32:16"},"nodeType":"YulIf","src":"304:52:16"},{"nodeType":"YulAssignment","src":"365:50:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:16"},"nodeType":"YulFunctionCall","src":"375:40:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:16"}]},{"nodeType":"YulAssignment","src":"424:59:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:16"},"nodeType":"YulFunctionCall","src":"464:18:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:16"},"nodeType":"YulFunctionCall","src":"434:49:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:16","type":""}],"src":"196:293:16"},{"body":{"nodeType":"YulBlock","src":"668:174:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:16"},"nodeType":"YulFunctionCall","src":"678:21:16"},"nodeType":"YulExpressionStatement","src":"678:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:16"},"nodeType":"YulFunctionCall","src":"715:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:16","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:16"},"nodeType":"YulFunctionCall","src":"708:30:16"},"nodeType":"YulExpressionStatement","src":"708:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:16"},"nodeType":"YulFunctionCall","src":"754:18:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"774:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:16"},"nodeType":"YulFunctionCall","src":"747:54:16"},"nodeType":"YulExpressionStatement","src":"747:54:16"},{"nodeType":"YulAssignment","src":"810:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"822:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"833:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"818:3:16"},"nodeType":"YulFunctionCall","src":"818:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"810:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:16","type":""}],"src":"494:348:16"},{"body":{"nodeType":"YulBlock","src":"1021:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1031:6:16"},"nodeType":"YulFunctionCall","src":"1031:21:16"},"nodeType":"YulExpressionStatement","src":"1031:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1072:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1083:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1068:3:16"},"nodeType":"YulFunctionCall","src":"1068:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1088:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1061:6:16"},"nodeType":"YulFunctionCall","src":"1061:30:16"},"nodeType":"YulExpressionStatement","src":"1061:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1111:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1122:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:16"},"nodeType":"YulFunctionCall","src":"1107:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1127:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1100:6:16"},"nodeType":"YulFunctionCall","src":"1100:53:16"},"nodeType":"YulExpressionStatement","src":"1100:53:16"},{"nodeType":"YulAssignment","src":"1162:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:16"},"nodeType":"YulFunctionCall","src":"1170:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1162:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"998:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1012:4:16","type":""}],"src":"847:347:16"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161047138038061047183398101604081905261002f91610186565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100ba576100ba816100c1565b50506101b9565b336001600160a01b038216036101195760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610081565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461018157600080fd5b919050565b6000806040838503121561019957600080fd5b6101a28361016a565b91506101b06020840161016a565b90509250929050565b6102a9806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220c2e20ec2d53e60d400ede1e90876f35cdce4f62de8ff3b3e6df5f62f3d9e8b9964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x471 CODESIZE SUB DUP1 PUSH2 0x471 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBA JUMPI PUSH2 0xBA DUP2 PUSH2 0xC1 JUMP JUMPDEST POP POP PUSH2 0x1B9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2 DUP4 PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0 PUSH1 0x20 DUP5 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE2 0xE 0xC2 0xD5 RETURNDATACOPY PUSH1 0xD4 STOP 0xED 0xE1 0xE9 ADDMOD PUSH23 0xF35CDCE4F62DE8FF3B3E6DF5F62F3D9E8B9964736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"216:1893:6:-:0;;;481:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;598:22:6;;590:59;;;;-1:-1:-1;;;590:59:6;;696:2:16;590:59:6;;;678:21:16;735:2;715:18;;;708:30;774:26;754:18;;;747:54;818:18;;590:59:6;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:6;-1:-1:-1;;;;;656:18:6;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;216:1893;;1536:239;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;1049:2:16;1641:52:6;;;1031:21:16;1088:2;1068:18;;;1061:30;1127:25;1107:18;;;1100:53;1170:18;;1641:52:6;847:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;14:177:16:-;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;847:347::-;216:1893:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_948":{"entryPoint":410,"id":948,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_961":{"entryPoint":325,"id":961,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_914":{"entryPoint":130,"id":914,"parameterSlots":0,"returnSlots":0},"@owner_924":{"entryPoint":null,"id":924,"parameterSlots":0,"returnSlots":1},"@transferOwnership_878":{"entryPoint":305,"id":878,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1564:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:16","statements":[{"nodeType":"YulAssignment","src":"125:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:16"},"nodeType":"YulFunctionCall","src":"133:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:16"},"nodeType":"YulFunctionCall","src":"194:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:16"},"nodeType":"YulFunctionCall","src":"190:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:16"},"nodeType":"YulFunctionCall","src":"178:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:16"},"nodeType":"YulFunctionCall","src":"160:51:16"},"nodeType":"YulExpressionStatement","src":"160:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:16","type":""}],"src":"14:203:16"},{"body":{"nodeType":"YulBlock","src":"292:216:16","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:16"},"nodeType":"YulFunctionCall","src":"340:12:16"},"nodeType":"YulExpressionStatement","src":"340:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:16"},"nodeType":"YulFunctionCall","src":"309:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:16"},"nodeType":"YulFunctionCall","src":"305:32:16"},"nodeType":"YulIf","src":"302:52:16"},{"nodeType":"YulVariableDeclaration","src":"363:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:16"},"nodeType":"YulFunctionCall","src":"376:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:16"},"nodeType":"YulFunctionCall","src":"464:12:16"},"nodeType":"YulExpressionStatement","src":"464:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:16"},"nodeType":"YulFunctionCall","src":"443:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:16"},"nodeType":"YulFunctionCall","src":"439:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:16"},"nodeType":"YulFunctionCall","src":"428:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:16"},"nodeType":"YulFunctionCall","src":"418:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:16"},"nodeType":"YulFunctionCall","src":"411:50:16"},"nodeType":"YulIf","src":"408:70:16"},{"nodeType":"YulAssignment","src":"487:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:16","type":""}],"src":"222:286:16"},{"body":{"nodeType":"YulBlock","src":"687:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:16"},"nodeType":"YulFunctionCall","src":"697:21:16"},"nodeType":"YulExpressionStatement","src":"697:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:16"},"nodeType":"YulFunctionCall","src":"734:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:16"},"nodeType":"YulFunctionCall","src":"727:30:16"},"nodeType":"YulExpressionStatement","src":"727:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:16"},"nodeType":"YulFunctionCall","src":"773:18:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:16"},"nodeType":"YulFunctionCall","src":"766:52:16"},"nodeType":"YulExpressionStatement","src":"766:52:16"},{"nodeType":"YulAssignment","src":"827:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"850:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:16"},"nodeType":"YulFunctionCall","src":"835:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"827:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:16","type":""}],"src":"513:346:16"},{"body":{"nodeType":"YulBlock","src":"1038:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1055:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1066:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1048:6:16"},"nodeType":"YulFunctionCall","src":"1048:21:16"},"nodeType":"YulExpressionStatement","src":"1048:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:16"},"nodeType":"YulFunctionCall","src":"1085:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1078:6:16"},"nodeType":"YulFunctionCall","src":"1078:30:16"},"nodeType":"YulExpressionStatement","src":"1078:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1128:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:16"},"nodeType":"YulFunctionCall","src":"1124:18:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1144:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1117:6:16"},"nodeType":"YulFunctionCall","src":"1117:52:16"},"nodeType":"YulExpressionStatement","src":"1117:52:16"},{"nodeType":"YulAssignment","src":"1178:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1201:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:16"},"nodeType":"YulFunctionCall","src":"1186:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1178:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1015:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1029:4:16","type":""}],"src":"864:346:16"},{"body":{"nodeType":"YulBlock","src":"1389:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1399:6:16"},"nodeType":"YulFunctionCall","src":"1399:21:16"},"nodeType":"YulExpressionStatement","src":"1399:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1436:3:16"},"nodeType":"YulFunctionCall","src":"1436:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1456:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1429:6:16"},"nodeType":"YulFunctionCall","src":"1429:30:16"},"nodeType":"YulExpressionStatement","src":"1429:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1475:3:16"},"nodeType":"YulFunctionCall","src":"1475:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1495:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1468:6:16"},"nodeType":"YulFunctionCall","src":"1468:53:16"},"nodeType":"YulExpressionStatement","src":"1468:53:16"},{"nodeType":"YulAssignment","src":"1530:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:16"},"nodeType":"YulFunctionCall","src":"1538:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:16","type":""}],"src":"1215:347:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220c2e20ec2d53e60d400ede1e90876f35cdce4f62de8ff3b3e6df5f62f3d9e8b9964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE2 0xE 0xC2 0xD5 RETURNDATACOPY PUSH1 0xD4 STOP 0xED 0xE1 0xE9 ADDMOD PUSH23 0xF35CDCE4F62DE8FF3B3E6DF5F62F3D9E8B9964736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"216:1893:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:6;;;160:51:16;;1382:81:6;;;;;148:2:16;1382:81:6;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:6;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:6;;715:2:16;1128:63:6;;;697:21:16;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:16;;;766:52;835:18;;1128:63:6;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:6;;;;;;;-1:-1:-1;1256:27:6;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:6;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:6;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:6;;1066:2:16;1910:56:6;;;1048:21:16;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:16;;;1117:52;1186:18;;1910:56:6;864:346:16;1910:56:6;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;1417:2:16;1641:52:6;;;1399:21:16;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:6;1215:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;222:286:16:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:16;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:16:o"},"gasEstimates":{"creation":{"codeDepositCost":"136200","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52277","owner()":"2292","transferOwnership(address)":"30423"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":816,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":818,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"Buffer":{"abi":[],"devdoc":{"details":"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e814e3f8138f9ad613dc6191bc3199439424aa88a5a43f2ea59427cfbe2558b364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 EQ 0xE3 0xF8 SGT DUP16 SWAP11 0xD6 SGT 0xDC PUSH2 0x91BC BALANCE SWAP10 NUMBER SWAP5 0x24 0xAA DUP9 0xA5 LOG4 EXTCODEHASH 0x2E 0xA5 SWAP5 0x27 0xCF 0xBE 0x25 PC 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"445:8435:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;445:8435:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e814e3f8138f9ad613dc6191bc3199439424aa88a5a43f2ea59427cfbe2558b364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 EQ 0xE3 0xF8 SGT DUP16 SWAP11 0xD6 SGT 0xDC PUSH2 0x91BC BALANCE SWAP10 NUMBER SWAP5 0x24 0xAA DUP9 0xA5 LOG4 EXTCODEHASH 0x2E 0xA5 SWAP5 0x27 0xCF 0xBE 0x25 PC 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"445:8435:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"append(struct Buffer.buffer memory,bytes memory)":"infinite","append(struct Buffer.buffer memory,bytes memory,uint256)":"infinite","append(struct Buffer.buffer memory,bytes32,uint256)":"infinite","appendBytes20(struct Buffer.buffer memory,bytes20)":"infinite","appendBytes32(struct Buffer.buffer memory,bytes32)":"infinite","appendInt(struct Buffer.buffer memory,uint256,uint256)":"infinite","appendUint8(struct Buffer.buffer memory,uint8)":"infinite","fromBytes(bytes memory)":"infinite","init(struct Buffer.buffer memory,uint256)":"infinite","resize(struct Buffer.buffer memory,uint256)":"infinite","truncate(struct Buffer.buffer memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-2-Clause\\npragma solidity ^0.8.4;\\n\\n/**\\n* @dev A library for working with mutable byte buffers in Solidity.\\n*\\n* Byte buffers are mutable and expandable, and provide a variety of primitives\\n* for appending to them. At any time you can fetch a bytes object containing the\\n* current contents of the buffer. The bytes object should not be stored between\\n* operations, as it may change due to resizing of the buffer.\\n*/\\nlibrary Buffer {\\n    /**\\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n    *      a capacity. The capacity may be longer than the current value, in\\n    *      which case it can be extended without the need to allocate more memory.\\n    */\\n    struct buffer {\\n        bytes buf;\\n        uint capacity;\\n    }\\n\\n    /**\\n    * @dev Initializes a buffer with an initial capacity.\\n    * @param buf The buffer to initialize.\\n    * @param capacity The number of bytes of space to allocate the buffer.\\n    * @return The buffer, for chaining.\\n    */\\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\\n        if (capacity % 32 != 0) {\\n            capacity += 32 - (capacity % 32);\\n        }\\n        // Allocate space for the buffer data\\n        buf.capacity = capacity;\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(buf, ptr)\\n            mstore(ptr, 0)\\n            let fpm := add(32, add(ptr, capacity))\\n            if lt(fpm, ptr) {\\n                revert(0, 0)\\n            }\\n            mstore(0x40, fpm)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Initializes a new buffer from an existing bytes object.\\n    *      Changes to the buffer may mutate the original value.\\n    * @param b The bytes object to initialize the buffer with.\\n    * @return A new buffer.\\n    */\\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\\n        buffer memory buf;\\n        buf.buf = b;\\n        buf.capacity = b.length;\\n        return buf;\\n    }\\n\\n    function resize(buffer memory buf, uint capacity) private pure {\\n        bytes memory oldbuf = buf.buf;\\n        init(buf, capacity);\\n        append(buf, oldbuf);\\n    }\\n\\n    /**\\n    * @dev Sets buffer length to 0.\\n    * @param buf The buffer to truncate.\\n    * @return The original buffer, for chaining..\\n    */\\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n        assembly {\\n            let bufptr := mload(buf)\\n            mstore(bufptr, 0)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to copy.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\\n        require(len <= data.length);\\n\\n        uint off = buf.buf.length;\\n        uint newCapacity = off + len;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint dest;\\n        uint src;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Length of existing buffer data\\n            let buflen := mload(bufptr)\\n            // Start address = buffer address + offset + sizeof(buffer length)\\n            dest := add(add(bufptr, 32), off)\\n            // Update buffer length if we're extending it\\n            if gt(newCapacity, buflen) {\\n                mstore(bufptr, newCapacity)\\n            }\\n            src := add(data, 32)\\n        }\\n\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        unchecked {\\n            uint mask = (256 ** (32 - len)) - 1;\\n            assembly {\\n                let srcpart := and(mload(src), not(mask))\\n                let destpart := and(mload(dest), mask)\\n                mstore(dest, or(destpart, srcpart))\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n        return append(buf, data, data.length);\\n    }\\n\\n    /**\\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n    *      capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint offPlusOne = off + 1;\\n        if (off >= buf.capacity) {\\n            resize(buf, offPlusOne * 2);\\n        }\\n\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + off\\n            let dest := add(add(bufptr, off), 32)\\n            mstore8(dest, data)\\n            // Update buffer length if we extended it\\n            if gt(offPlusOne, mload(bufptr)) {\\n                mstore(bufptr, offPlusOne)\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\\n    *      exceed the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to write (left-aligned).\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        unchecked {\\n            uint mask = (256 ** len) - 1;\\n            // Right-align data\\n            data = data >> (8 * (32 - len));\\n            assembly {\\n                // Memory address of the buffer data\\n                let bufptr := mload(buf)\\n                // Address = buffer address + sizeof(buffer length) + newCapacity\\n                let dest := add(bufptr, newCapacity)\\n                mstore(dest, or(and(mload(dest), not(mask)), data))\\n                // Update buffer length if we extended it\\n                if gt(newCapacity, mload(bufptr)) {\\n                    mstore(bufptr, newCapacity)\\n                }\\n            }\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chhaining.\\n    */\\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n        return append(buf, bytes32(data), 20);\\n    }\\n\\n    /**\\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n        return append(buf, data, 32);\\n    }\\n\\n    /**\\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n     *      exceed the capacity of the buffer.\\n     * @param buf The buffer to append to.\\n     * @param data The data to append.\\n     * @param len The number of bytes to write (right-aligned).\\n     * @return The original buffer.\\n     */\\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint mask = (256 ** len) - 1;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + newCapacity\\n            let dest := add(bufptr, newCapacity)\\n            mstore(dest, or(and(mload(dest), not(mask)), data))\\n            // Update buffer length if we extended it\\n            if gt(newCapacity, mload(bufptr)) {\\n                mstore(bufptr, newCapacity)\\n            }\\n        }\\n        return buf;\\n    }\\n}\",\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"CBOR":{"abi":[],"devdoc":{"details":"A library for populating CBOR encoded payload in Solidity. https://datatracker.ietf.org/doc/html/rfc7049 The library offers various write* and start* methods to encode values of different types. The resulted buffer can be obtained with data() method. Encoding of primitive types is staightforward, whereas encoding of sequences can result in an invalid CBOR if start/write/end flow is violated. For the purpose of gas saving, the library does not verify start/write/end flow internally, except for nested start/end pairs.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc69d66b818722983c7ef12076c7278628f9279f51e3e18f78e20f451c8acae764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH10 0xD66B818722983C7EF120 PUSH23 0xC7278628F9279F51E3E18F78E20F451C8ACAE764736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"666:6764:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;666:6764:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc69d66b818722983c7ef12076c7278628f9279f51e3e18f78e20f451c8acae764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH10 0xD66B818722983C7EF120 PUSH23 0xC7278628F9279F51E3E18F78E20F451C8ACAE764736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"666:6764:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"create(uint256)":"infinite","data(struct CBOR.CBORBuffer memory)":"infinite","endSequence(struct CBOR.CBORBuffer memory)":"infinite","startArray(struct CBOR.CBORBuffer memory)":"infinite","startFixedArray(struct CBOR.CBORBuffer memory,uint64)":"infinite","startFixedMap(struct CBOR.CBORBuffer memory,uint64)":"infinite","startMap(struct CBOR.CBORBuffer memory)":"infinite","writeBool(struct CBOR.CBORBuffer memory,bool)":"infinite","writeBytes(struct CBOR.CBORBuffer memory,bytes memory)":"infinite","writeContentFree(struct CBOR.CBORBuffer memory,uint8)":"infinite","writeDefiniteLengthType(struct CBOR.CBORBuffer memory,uint8,uint64)":"infinite","writeFixedNumeric(struct CBOR.CBORBuffer memory,uint8,uint64)":"infinite","writeIndefiniteLengthType(struct CBOR.CBORBuffer memory,uint8)":"infinite","writeInt256(struct CBOR.CBORBuffer memory,int256)":"infinite","writeInt64(struct CBOR.CBORBuffer memory,int64)":"infinite","writeKVArray(struct CBOR.CBORBuffer memory,string memory)":"infinite","writeKVBool(struct CBOR.CBORBuffer memory,string memory,bool)":"infinite","writeKVBytes(struct CBOR.CBORBuffer memory,string memory,bytes memory)":"infinite","writeKVInt256(struct CBOR.CBORBuffer memory,string memory,int256)":"infinite","writeKVInt64(struct CBOR.CBORBuffer memory,string memory,int64)":"infinite","writeKVMap(struct CBOR.CBORBuffer memory,string memory)":"infinite","writeKVNull(struct CBOR.CBORBuffer memory,string memory)":"infinite","writeKVString(struct CBOR.CBORBuffer memory,string memory,string memory)":"infinite","writeKVUInt256(struct CBOR.CBORBuffer memory,string memory,uint256)":"infinite","writeKVUInt64(struct CBOR.CBORBuffer memory,string memory,uint64)":"infinite","writeKVUndefined(struct CBOR.CBORBuffer memory,string memory)":"infinite","writeNull(struct CBOR.CBORBuffer memory)":"infinite","writeString(struct CBOR.CBORBuffer memory,string memory)":"infinite","writeUInt256(struct CBOR.CBORBuffer memory,uint256)":"infinite","writeUInt64(struct CBOR.CBORBuffer memory,uint64)":"infinite","writeUndefined(struct CBOR.CBORBuffer memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for populating CBOR encoded payload in Solidity. https://datatracker.ietf.org/doc/html/rfc7049 The library offers various write* and start* methods to encode values of different types. The resulted buffer can be obtained with data() method. Encoding of primitive types is staightforward, whereas encoding of sequences can result in an invalid CBOR if start/write/end flow is violated. For the purpose of gas saving, the library does not verify start/write/end flow internally, except for nested start/end pairs.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":\"CBOR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-2-Clause\\npragma solidity ^0.8.4;\\n\\n/**\\n* @dev A library for working with mutable byte buffers in Solidity.\\n*\\n* Byte buffers are mutable and expandable, and provide a variety of primitives\\n* for appending to them. At any time you can fetch a bytes object containing the\\n* current contents of the buffer. The bytes object should not be stored between\\n* operations, as it may change due to resizing of the buffer.\\n*/\\nlibrary Buffer {\\n    /**\\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n    *      a capacity. The capacity may be longer than the current value, in\\n    *      which case it can be extended without the need to allocate more memory.\\n    */\\n    struct buffer {\\n        bytes buf;\\n        uint capacity;\\n    }\\n\\n    /**\\n    * @dev Initializes a buffer with an initial capacity.\\n    * @param buf The buffer to initialize.\\n    * @param capacity The number of bytes of space to allocate the buffer.\\n    * @return The buffer, for chaining.\\n    */\\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\\n        if (capacity % 32 != 0) {\\n            capacity += 32 - (capacity % 32);\\n        }\\n        // Allocate space for the buffer data\\n        buf.capacity = capacity;\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(buf, ptr)\\n            mstore(ptr, 0)\\n            let fpm := add(32, add(ptr, capacity))\\n            if lt(fpm, ptr) {\\n                revert(0, 0)\\n            }\\n            mstore(0x40, fpm)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Initializes a new buffer from an existing bytes object.\\n    *      Changes to the buffer may mutate the original value.\\n    * @param b The bytes object to initialize the buffer with.\\n    * @return A new buffer.\\n    */\\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\\n        buffer memory buf;\\n        buf.buf = b;\\n        buf.capacity = b.length;\\n        return buf;\\n    }\\n\\n    function resize(buffer memory buf, uint capacity) private pure {\\n        bytes memory oldbuf = buf.buf;\\n        init(buf, capacity);\\n        append(buf, oldbuf);\\n    }\\n\\n    /**\\n    * @dev Sets buffer length to 0.\\n    * @param buf The buffer to truncate.\\n    * @return The original buffer, for chaining..\\n    */\\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n        assembly {\\n            let bufptr := mload(buf)\\n            mstore(bufptr, 0)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to copy.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\\n        require(len <= data.length);\\n\\n        uint off = buf.buf.length;\\n        uint newCapacity = off + len;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint dest;\\n        uint src;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Length of existing buffer data\\n            let buflen := mload(bufptr)\\n            // Start address = buffer address + offset + sizeof(buffer length)\\n            dest := add(add(bufptr, 32), off)\\n            // Update buffer length if we're extending it\\n            if gt(newCapacity, buflen) {\\n                mstore(bufptr, newCapacity)\\n            }\\n            src := add(data, 32)\\n        }\\n\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        unchecked {\\n            uint mask = (256 ** (32 - len)) - 1;\\n            assembly {\\n                let srcpart := and(mload(src), not(mask))\\n                let destpart := and(mload(dest), mask)\\n                mstore(dest, or(destpart, srcpart))\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n        return append(buf, data, data.length);\\n    }\\n\\n    /**\\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n    *      capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint offPlusOne = off + 1;\\n        if (off >= buf.capacity) {\\n            resize(buf, offPlusOne * 2);\\n        }\\n\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + off\\n            let dest := add(add(bufptr, off), 32)\\n            mstore8(dest, data)\\n            // Update buffer length if we extended it\\n            if gt(offPlusOne, mload(bufptr)) {\\n                mstore(bufptr, offPlusOne)\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\\n    *      exceed the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to write (left-aligned).\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        unchecked {\\n            uint mask = (256 ** len) - 1;\\n            // Right-align data\\n            data = data >> (8 * (32 - len));\\n            assembly {\\n                // Memory address of the buffer data\\n                let bufptr := mload(buf)\\n                // Address = buffer address + sizeof(buffer length) + newCapacity\\n                let dest := add(bufptr, newCapacity)\\n                mstore(dest, or(and(mload(dest), not(mask)), data))\\n                // Update buffer length if we extended it\\n                if gt(newCapacity, mload(bufptr)) {\\n                    mstore(bufptr, newCapacity)\\n                }\\n            }\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chhaining.\\n    */\\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n        return append(buf, bytes32(data), 20);\\n    }\\n\\n    /**\\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n        return append(buf, data, 32);\\n    }\\n\\n    /**\\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n     *      exceed the capacity of the buffer.\\n     * @param buf The buffer to append to.\\n     * @param data The data to append.\\n     * @param len The number of bytes to write (right-aligned).\\n     * @return The original buffer.\\n     */\\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint mask = (256 ** len) - 1;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + newCapacity\\n            let dest := add(bufptr, newCapacity)\\n            mstore(dest, or(and(mload(dest), not(mask)), data))\\n            // Update buffer length if we extended it\\n            if gt(newCapacity, mload(bufptr)) {\\n                mstore(bufptr, newCapacity)\\n            }\\n        }\\n        return buf;\\n    }\\n}\",\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\"},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../../@ensdomains/buffer/v0.1.0/Buffer.sol\\\";\\n\\n/**\\n* @dev A library for populating CBOR encoded payload in Solidity.\\n*\\n* https://datatracker.ietf.org/doc/html/rfc7049\\n*\\n* The library offers various write* and start* methods to encode values of different types.\\n* The resulted buffer can be obtained with data() method.\\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\\n* in an invalid CBOR if start/write/end flow is violated.\\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\\n* except for nested start/end pairs.\\n*/\\n\\nlibrary CBOR {\\n    using Buffer for Buffer.buffer;\\n\\n    struct CBORBuffer {\\n        Buffer.buffer buf;\\n        uint256 depth;\\n    }\\n\\n    uint8 private constant MAJOR_TYPE_INT = 0;\\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\\n    uint8 private constant MAJOR_TYPE_STRING = 3;\\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n    uint8 private constant MAJOR_TYPE_MAP = 5;\\n    uint8 private constant MAJOR_TYPE_TAG = 6;\\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n    uint8 private constant CBOR_FALSE = 20;\\n    uint8 private constant CBOR_TRUE = 21;\\n    uint8 private constant CBOR_NULL = 22;\\n    uint8 private constant CBOR_UNDEFINED = 23;\\n\\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\\n        Buffer.init(cbor.buf, capacity);\\n        cbor.depth = 0;\\n        return cbor;\\n    }\\n\\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\\n        require(buf.depth == 0, \\\"Invalid CBOR\\\");\\n        return buf.buf.buf;\\n    }\\n\\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n        writeBytes(buf, abi.encode(value));\\n    }\\n\\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\\n        if (value < 0) {\\n            buf.buf.appendUint8(\\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\\n            );\\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\\n        } else {\\n            writeUInt256(buf, uint256(value));\\n        }\\n    }\\n\\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\\n    }\\n\\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\\n        if(value >= 0) {\\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n        } else{\\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\\n        }\\n    }\\n\\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n        buf.buf.append(value);\\n    }\\n\\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n        buf.buf.append(bytes(value));\\n    }\\n\\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\\n    }\\n\\n    function writeNull(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_NULL);\\n    }\\n\\n    function writeUndefined(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_UNDEFINED);\\n    }\\n\\n    function startArray(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\\n    }\\n\\n    function startMap(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\\n    }\\n\\n    function endSequence(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n        buf.depth -= 1;\\n    }\\n\\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\\n        writeString(buf, key);\\n        writeString(buf, value);\\n    }\\n\\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\\n        writeString(buf, key);\\n        writeBytes(buf, value);\\n    }\\n\\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt256(buf, value);\\n    }\\n\\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\\n        writeString(buf, key);\\n        writeInt256(buf, value);\\n    }\\n\\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt64(buf, value);\\n    }\\n\\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\\n        writeString(buf, key);\\n        writeInt64(buf, value);\\n    }\\n\\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\\n        writeString(buf, key);\\n        writeBool(buf, value);\\n    }\\n\\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeNull(buf);\\n    }\\n\\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeUndefined(buf);\\n    }\\n\\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startMap(buf);\\n    }\\n\\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startArray(buf);\\n    }\\n\\n    function writeFixedNumeric(\\n        CBORBuffer memory buf,\\n        uint8 major,\\n        uint64 value\\n    ) private pure {\\n        if (value <= 23) {\\n            buf.buf.appendUint8(uint8((major << 5) | value));\\n        } else if (value <= 0xFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 24));\\n            buf.buf.appendInt(value, 1);\\n        } else if (value <= 0xFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 25));\\n            buf.buf.appendInt(value, 2);\\n        } else if (value <= 0xFFFFFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 26));\\n            buf.buf.appendInt(value, 4);\\n        } else {\\n            buf.buf.appendUint8(uint8((major << 5) | 27));\\n            buf.buf.appendInt(value, 8);\\n        }\\n    }\\n\\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\\n        private\\n        pure\\n    {\\n        buf.buf.appendUint8(uint8((major << 5) | 31));\\n    }\\n\\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\\n        private\\n        pure\\n    {\\n        writeFixedNumeric(buf, major, length);\\n    }\\n\\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\\n    }\\n}\",\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"VRFConsumerBaseV2Plus":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":816,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":818,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2299,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2448"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IVRFCoordinatorV2Plus)2448":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"IVRFCoordinatorV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"params":{"req":"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"IVRFMigratableConsumerV2Plus":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This interface is designed to be used in VRFConsumerBaseV2Plus.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"setCoordinator(address)":"8ea98117"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"}},"notice":"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"IVRFSubscriptionV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"notice":"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"VRFV2PlusClient":{"abi":[{"inputs":[],"name":"EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60b1610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea2646970667358221220ef3fc9f3a57593332d8eb53211d3e99907c6340f107a61caecf6d5e42dc07df864736f6c63430008140033","opcodes":"PUSH1 0xB1 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF EXTCODEHASH 0xC9 RETURN 0xA5 PUSH22 0x93332D8EB53211D3E99907C6340F107A61CAECF6D5E4 0x2D 0xC0 PUSH30 0xF864736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"82:558:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;82:558:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EXTRA_ARGS_V1_TAG_2561":{"entryPoint":null,"id":2561,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:226:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"121:103:16","statements":[{"nodeType":"YulAssignment","src":"131:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"143:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"139:3:16"},"nodeType":"YulFunctionCall","src":"139:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"131:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"188:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"200:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"205:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"196:3:16"},"nodeType":"YulFunctionCall","src":"196:20:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"184:3:16"},"nodeType":"YulFunctionCall","src":"184:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:52:16"},"nodeType":"YulExpressionStatement","src":"166:52:16"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"90:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"101:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"112:4:16","type":""}],"src":"14:210:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea2646970667358221220ef3fc9f3a57593332d8eb53211d3e99907c6340f107a61caecf6d5e42dc07df864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF EXTCODEHASH 0xC9 RETURN 0xA5 PUSH22 0x93332D8EB53211D3E99907C6340F107A61CAECF6D5E4 0x2D 0xC0 PUSH30 0xF864736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"82:558:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;161:79;;211:28;161:79;;;;;-1:-1:-1;;;;;;184:33:16;;;166:52;;154:2;139:18;161:79:14;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"35400","executionCost":"118","totalCost":"35518"},"external":{"EXTRA_ARGS_V1_TAG()":"169"},"internal":{"_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)":"infinite"}},"methodIdentifiers":{"EXTRA_ARGS_V1_TAG()":"f7514ab4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ChainlinkMultiverse.sol":{"EnterTheChainlinkMultiverse":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"name":"UnexpectedRequestID","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"RequestSent","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"arbitrumSepoliaVRF","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"callbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"keyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"makeRandomRequest","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"multiverseApiSources","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pokesource","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestIdPending","outputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"bool","name":"isPending","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"result","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_lastError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_lastRequestId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_lastResponse","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requests","outputs":[{"internalType":"bool","name":"fulfilled","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"}],"name":"sendRequest","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"subscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"s","type":"string"}],"name":"updatePokeSource","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userToRequestResult","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"handleOracleFulfillment(bytes32,bytes,bytes)":{"details":"Either response or error parameter will be set, but never both.","params":{"err":"Aggregated error either from the request's source code or from the execution pipeline.","requestId":"The requestId returned by FunctionsClient.sendRequest().","response":"Aggregated response from the request's source code."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2327":{"entryPoint":null,"id":2327,"parameterSlots":1,"returnSlots":0},"@_2718":{"entryPoint":null,"id":2718,"parameterSlots":0,"returnSlots":0},"@_39":{"entryPoint":null,"id":39,"parameterSlots":1,"returnSlots":0},"@_806":{"entryPoint":null,"id":806,"parameterSlots":1,"returnSlots":0},"@_864":{"entryPoint":null,"id":864,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_948":{"entryPoint":519,"id":948,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":772,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":855,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":712,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":690,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3437:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"201:325:16","statements":[{"nodeType":"YulAssignment","src":"211:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:16"},"nodeType":"YulFunctionCall","src":"221:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:16"},"nodeType":"YulFunctionCall","src":"268:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:16","statements":[{"nodeType":"YulAssignment","src":"321:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:16"},"nodeType":"YulFunctionCall","src":"331:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:16"},"nodeType":"YulFunctionCall","src":"292:26:16"},"nodeType":"YulIf","src":"289:61:16"},{"body":{"nodeType":"YulBlock","src":"409:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:16"},"nodeType":"YulFunctionCall","src":"433:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:16"},"nodeType":"YulFunctionCall","src":"423:31:16"},"nodeType":"YulExpressionStatement","src":"423:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:16"},"nodeType":"YulFunctionCall","src":"467:15:16"},"nodeType":"YulExpressionStatement","src":"467:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:16"},"nodeType":"YulFunctionCall","src":"495:15:16"},"nodeType":"YulExpressionStatement","src":"495:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:16"},"nodeType":"YulFunctionCall","src":"385:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:16"},"nodeType":"YulFunctionCall","src":"362:38:16"},"nodeType":"YulIf","src":"359:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:16","type":""}],"src":"146:380:16"},{"body":{"nodeType":"YulBlock","src":"587:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:16"},"nodeType":"YulFunctionCall","src":"597:14:16"},"nodeType":"YulExpressionStatement","src":"597:14:16"},{"nodeType":"YulAssignment","src":"620:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:16"},"nodeType":"YulFunctionCall","src":"628:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:16","type":""}],"src":"531:121:16"},{"body":{"nodeType":"YulBlock","src":"738:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:16"},"nodeType":"YulFunctionCall","src":"809:17:16"},"nodeType":"YulExpressionStatement","src":"809:17:16"},{"nodeType":"YulVariableDeclaration","src":"839:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:16"},"nodeType":"YulFunctionCall","src":"851:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:16"},"nodeType":"YulFunctionCall","src":"919:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:16"},"nodeType":"YulFunctionCall","src":"912:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:16"},"nodeType":"YulFunctionCall","src":"902:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:16","statements":[{"nodeType":"YulAssignment","src":"979:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:16"},"nodeType":"YulFunctionCall","src":"956:20:16"},"nodeType":"YulIf","src":"953:47:16"},{"nodeType":"YulVariableDeclaration","src":"1013:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:16"},"nodeType":"YulFunctionCall","src":"1040:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:16"},"nodeType":"YulFunctionCall","src":"1033:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:16"},"nodeType":"YulFunctionCall","src":"1023:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:16"},"nodeType":"YulFunctionCall","src":"1167:17:16"},"nodeType":"YulExpressionStatement","src":"1167:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:16"},"nodeType":"YulFunctionCall","src":"1112:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:16","statements":[{"nodeType":"YulAssignment","src":"1128:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:16"},"nodeType":"YulFunctionCall","src":"1137:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:16","statements":[]},"src":"1104:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:16"},"nodeType":"YulFunctionCall","src":"751:11:16"},"nodeType":"YulIf","src":"748:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:16","type":""}],"src":"657:545:16"},{"body":{"nodeType":"YulBlock","src":"1292:81:16","statements":[{"nodeType":"YulAssignment","src":"1302:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:16"},"nodeType":"YulFunctionCall","src":"1331:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:16"},"nodeType":"YulFunctionCall","src":"1344:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:16"},"nodeType":"YulFunctionCall","src":"1327:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:16"},"nodeType":"YulFunctionCall","src":"1323:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:16"},"nodeType":"YulFunctionCall","src":"1313:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:16"},"nodeType":"YulFunctionCall","src":"1355:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:16"},"nodeType":"YulFunctionCall","src":"1310:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:16","type":""}],"src":"1207:166:16"},{"body":{"nodeType":"YulBlock","src":"1474:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:16"},"nodeType":"YulFunctionCall","src":"1498:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:16"},"nodeType":"YulFunctionCall","src":"1553:18:16"},"nodeType":"YulExpressionStatement","src":"1553:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:16"},"nodeType":"YulFunctionCall","src":"1535:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:16"},"nodeType":"YulFunctionCall","src":"1531:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:16"},"nodeType":"YulFunctionCall","src":"1520:30:16"},"nodeType":"YulIf","src":"1517:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:16"},"nodeType":"YulFunctionCall","src":"1658:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:16"},"nodeType":"YulFunctionCall","src":"1632:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:16"},"nodeType":"YulFunctionCall","src":"1582:97:16"},"nodeType":"YulExpressionStatement","src":"1582:97:16"},{"nodeType":"YulVariableDeclaration","src":"1688:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:16","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:16"},"nodeType":"YulFunctionCall","src":"1858:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:16"},"nodeType":"YulFunctionCall","src":"1846:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:16"},"nodeType":"YulFunctionCall","src":"1893:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:16"},"nodeType":"YulFunctionCall","src":"2067:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:16"},"nodeType":"YulFunctionCall","src":"2061:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:16"},"nodeType":"YulFunctionCall","src":"2046:42:16"},"nodeType":"YulExpressionStatement","src":"2046:42:16"},{"nodeType":"YulAssignment","src":"2105:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:16"},"nodeType":"YulFunctionCall","src":"2115:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:16"}]},{"nodeType":"YulAssignment","src":"2146:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:16"},"nodeType":"YulFunctionCall","src":"2159:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:16"},"nodeType":"YulFunctionCall","src":"1972:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:16","statements":[{"nodeType":"YulAssignment","src":"1989:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:16"},"nodeType":"YulFunctionCall","src":"1994:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:16","statements":[]},"src":"1964:236:16"},{"body":{"nodeType":"YulBlock","src":"2248:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:16"},"nodeType":"YulFunctionCall","src":"2289:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:16"},"nodeType":"YulFunctionCall","src":"2283:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:16"},"nodeType":"YulFunctionCall","src":"2368:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:16"},"nodeType":"YulFunctionCall","src":"2364:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:16"},"nodeType":"YulFunctionCall","src":"2390:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:16"},"nodeType":"YulFunctionCall","src":"2360:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:16"},"nodeType":"YulFunctionCall","src":"2356:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:16"},"nodeType":"YulFunctionCall","src":"2341:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:16"},"nodeType":"YulFunctionCall","src":"2326:74:16"},"nodeType":"YulExpressionStatement","src":"2326:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:16"},"nodeType":"YulFunctionCall","src":"2216:19:16"},"nodeType":"YulIf","src":"2213:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:16"},"nodeType":"YulFunctionCall","src":"2440:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:16"},"nodeType":"YulFunctionCall","src":"2427:36:16"},"nodeType":"YulExpressionStatement","src":"2427:36:16"}]},"nodeType":"YulCase","src":"1810:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:16","statements":[{"nodeType":"YulAssignment","src":"2571:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:16"},"nodeType":"YulFunctionCall","src":"2586:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:16"},"nodeType":"YulFunctionCall","src":"2580:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:16"},"nodeType":"YulIf","src":"2531:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:16"},"nodeType":"YulFunctionCall","src":"2646:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:81:16"},"nodeType":"YulExpressionStatement","src":"2633:81:16"}]},"nodeType":"YulCase","src":"2482:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:16"},"nodeType":"YulFunctionCall","src":"1787:14:16"},"nodeType":"YulSwitch","src":"1780:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:16","type":""}],"src":"1378:1352:16"},{"body":{"nodeType":"YulBlock","src":"2909:174:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2926:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:16"},"nodeType":"YulFunctionCall","src":"2919:21:16"},"nodeType":"YulExpressionStatement","src":"2919:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2960:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2971:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2956:3:16"},"nodeType":"YulFunctionCall","src":"2956:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:16","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2949:6:16"},"nodeType":"YulFunctionCall","src":"2949:30:16"},"nodeType":"YulExpressionStatement","src":"2949:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2995:3:16"},"nodeType":"YulFunctionCall","src":"2995:18:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"3015:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2988:6:16"},"nodeType":"YulFunctionCall","src":"2988:54:16"},"nodeType":"YulExpressionStatement","src":"2988:54:16"},{"nodeType":"YulAssignment","src":"3051:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3063:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3074:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:16"},"nodeType":"YulFunctionCall","src":"3059:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3051:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2900:4:16","type":""}],"src":"2735:348:16"},{"body":{"nodeType":"YulBlock","src":"3262:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3279:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3290:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:16"},"nodeType":"YulFunctionCall","src":"3272:21:16"},"nodeType":"YulExpressionStatement","src":"3272:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3313:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3309:3:16"},"nodeType":"YulFunctionCall","src":"3309:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:16"},"nodeType":"YulFunctionCall","src":"3302:30:16"},"nodeType":"YulExpressionStatement","src":"3302:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3352:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3363:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3348:3:16"},"nodeType":"YulFunctionCall","src":"3348:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3368:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3341:6:16"},"nodeType":"YulFunctionCall","src":"3341:53:16"},"nodeType":"YulExpressionStatement","src":"3341:53:16"},{"nodeType":"YulAssignment","src":"3403:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3415:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3426:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3411:3:16"},"nodeType":"YulFunctionCall","src":"3411:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3403:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3239:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3253:4:16","type":""}],"src":"3088:347:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60028054600160a01b600160e01b031916604360a01b1790556006805473234a5fb5bd614a7aa2ffab244d603abfa0ac5c5c6001600160a01b03199091161790557f66756e2d617262697472756d2d7365706f6c69612d310000000000000000000060075560088054620493e063ffffffff199091161790557f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae600e55600f805465ffffffffffff191662010001179055601280546001600160c01b0319167750d47e4142598e3411aa864e08a44284e471ac6f000186a01790556103a06040526102d760a0818152906200229c60c039601390620000ff908262000357565b503480156200010d57600080fd5b506012546006546001600160a01b03908116608052640100000000909104163380600081620001835760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620001b657620001b68162000207565b5050506001600160a01b038116620001e15760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b039290921691909117905562000423565b336001600160a01b03821603620002615760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200017a565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002dd57607f821691505b602082108103620002fe57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035257600081815260208120601f850160051c810160208610156200032d5750805b601f850160051c820191505b818110156200034e5782815560010162000339565b5050505b505050565b81516001600160401b03811115620003735762000373620002b2565b6200038b81620003848454620002c8565b8462000304565b602080601f831160018114620003c35760008415620003aa5750858301515b600019600386901b1c1916600185901b1785556200034e565b600085815260208120601f198616915b82811015620003f457888601518255948401946001909101908401620003d3565b5085821015620004135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611e56620004466000396000818161052401526110230152611e566000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806385e1b15b11610104578063a321ccaa116100a2578063f2fde38b11610071578063f2fde38b1461044c578063f68016b71461045f578063f887ea401461046f578063fc2a88c31461048257600080fd5b8063a321ccaa146103f4578063b0fb162f1461040f578063b1e2174914610430578063cfd30a6e1461043957600080fd5b80638e84737f116100de5780638e84737f146103375780638ea981171461038b5780639eccacf61461039e578063a168fa89146103b157600080fd5b806385e1b15b146102ec5780638796ba8c146102ff5780638da5cb5b1461031257600080fd5b80633944ea3a11610171578063653721471161014b57806365372147146102b357806377452a2c146102bb57806379ba5097146102ce5780637ccfd7fc146102d657600080fd5b80633944ea3a1461029a5780634b0795a8146102a257806361728f39146102aa57600080fd5b80631ab0f2b3116101ad5780631ab0f2b3146102395780631fe543e31461024f57806324f74697146102625780632e0a58901461028757600080fd5b8063020dbb9b146101d457806309c1ba2e146101f25780630ca7617514610224575b600080fd5b6101dc61048b565b6040516101e9919061175c565b60405180910390f35b60025461020c90600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101e9565b61023761023236600461181a565b610519565b005b61024161059d565b6040519081526020016101e9565b61023761025d366004611886565b610785565b6012546102729063ffffffff1681565b60405163ffffffff90911681526020016101e9565b6101dc610295366004611904565b6107cf565b6101dc6107e8565b6101dc6107f5565b610241600e5481565b6101dc610802565b6102376102c936600461192d565b61080f565b610237610827565b600f546102729062010000900463ffffffff1681565b6102416102fa366004611904565b6108d1565b61024161030d36600461197d565b610a4d565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b61036c61034536600461197d565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016101e9565b610237610399366004611904565b610a6e565b60025461031f906001600160a01b031681565b6103dd6103bf36600461197d565b600d6020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016101e9565b60125461031f9064010000000090046001600160a01b031681565b600f5461041d9061ffff1681565b60405161ffff90911681526020016101e9565b61024160095481565b6101dc61044736600461197d565b610b60565b61023761045a366004611904565b610b8b565b6008546102729063ffffffff1681565b60065461031f906001600160a01b031681565b61024160115481565b6013805461049890611996565b80601f01602080910402602001604051908101604052809291908181526020018280546104c490611996565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105625760405163c6829f8360e01b815260040160405180910390fd5b61056d838383610b9f565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b60006105a7610c73565b6002546040805160c081018252600e5481526001600160401b03600160a01b840416602080830191909152600f5461ffff81168385015260125463ffffffff9081166060850152620100009091041660808301528251908101909252600082526001600160a01b0390921691639b1c385e9160a082019061062790610cc8565b8152506040518263ffffffff1660e01b815260040161064691906119d0565b6020604051808303816000875af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190611a2d565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600d83529590932084518154945161ffff1990951690151561ff001916176101009415159490940293909317835593518051959650929491936106fe9391850192910190611681565b5050601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201829055506011819055600f54604080518381526201000090920463ffffffff1660208301527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b6002546001600160a01b031633146107ca5760025460405163073e64fd60e21b81523360048201526001600160a01b0390911660248201526044015b60405180910390fd5b505050565b6005602052600090815260409020805461049890611996565b600a805461049890611996565b600b805461049890611996565b600c805461049890611996565b610817610c73565b60136108238282611a94565b5050565b6001546001600160a01b0316331461087a5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016107c1565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60006108db610c73565b61091c6040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6109b96013805461092c90611996565b80601f016020809104026020016040519081016040528092919081815260200182805461095890611996565b80156109a55780601f1061097a576101008083540402835291602001916109a5565b820191906000526020600020905b81548152906001019060200180831161098857829003601f168201915b505050505082610d3990919063ffffffff16565b6109ee6109c582610d46565b600254600854600754600160a01b9092046001600160401b03169163ffffffff9091169061101e565b60098181556040805180820182526001600160a01b03808816825260016020808401918252600096875260049052929094209051815492511515600160a01b026001600160a81b03199093169416939093171790915554915050919050565b60108181548110610a5d57600080fd5b600091825260209091200154905081565b6000546001600160a01b03163314801590610a9457506002546001600160a01b03163314155b15610ae55733610aac6000546001600160a01b031690565b60025460405163061db9c160e01b81526001600160a01b03938416600482015291831660248301529190911660448201526064016107c1565b6001600160a01b038116610b0c5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be69060200160405180910390a150565b60038181548110610b7057600080fd5b90600052602060002001600091509050805461049890611996565b610b93610c73565b610b9c816110f0565b50565b600083815260046020526040902054600160a01b900460ff161515600114610bfe5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064016107c1565b600b610c0a8282611a94565b506000838152600460205260409020805460ff60a01b19169055600a610c308382611a94565b50600c610c3d8382611a94565b506000838152600460209081526040808320546001600160a01b0316835260059091529020610c6d600c82611b53565b50505050565b6000546001600160a01b03163314610cc65760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016107c1565b565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401610d0191511515815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915292915050565b6108238260008084611199565b60606000610d55610100611217565b9050610d8e6040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b8152508261123890919063ffffffff16565b8251610dac906002811115610da557610da5611c2d565b8290611251565b6040805180820190915260088152676c616e677561676560c01b6020820152610dd6908290611238565b6040830151610ded908015610da557610da5611c2d565b604080518082019091526006815265736f7572636560d01b6020820152610e15908290611238565b6060830151610e25908290611238565b60a08301515115610eb9576040805180820190915260048152636172677360e01b6020820152610e56908290611238565b610e5f8161128a565b60005b8360a0015151811015610eaf57610e9f8460a001518281518110610e8857610e88611c43565b60200260200101518361123890919063ffffffff16565b610ea881611c6f565b9050610e62565b50610eb9816112ae565b60808301515115610f7d57600083602001516002811115610edc57610edc611c2d565b03610efa5760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152610f2b908290611238565b610f4483602001516002811115610da557610da5611c2d565b6040805180820190915260078152667365637265747360c81b6020820152610f6d908290611238565b6080830151610f7d9082906112cc565b60c083015151156110165760408051808201909152600981526862797465734172677360b81b6020820152610fb3908290611238565b610fbc8161128a565b60005b8360c001515181101561100c57610ffc8460c001518281518110610fe557610fe5611c43565b6020026020010151836112cc90919063ffffffff16565b61100581611c6f565b9050610fbf565b50611016816112ae565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b8152600401611076959493929190611c88565b6020604051808303816000875af1158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611a2d565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b336001600160a01b038216036111485760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016107c1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516000036111bb576040516322ce3edd60e01b815260040160405180910390fd5b838360028111156111ce576111ce611c2d565b908160028111156111e1576111e1611c2d565b905250604084018280156111f7576111f7611c2d565b9081801561120757611207611c2d565b9052506060909301929092525050565b61121f6116cc565b805161122b90836112d9565b5060006020820152919050565b6112458260038351611353565b81516107ca908261146c565b815161125e9060c2611494565b50610823828260405160200161127691815260200190565b6040516020818303038152906040526112cc565b6112958160046114fd565b6001816020018181516112a89190611cd1565b90525050565b6112b98160076114fd565b6001816020018181516112a89190611ce4565b6112458260028351611353565b6040805180820190915260608152600060208201526112f9602083611cf7565b1561132157611309602083611cf7565b611314906020611ce4565b61131e9083611cd1565b91505b60208084018390526040518085526000815290818401018181101561134557600080fd5b604052508290505b92915050565b6017816001600160401b031611611379578251610c6d9060e0600585901b168317611494565b60ff816001600160401b0316116113b95782516113a1906018611fe0600586901b1617611494565b508251610c6d906001600160401b0383166001611514565b61ffff816001600160401b0316116113fa5782516113e2906019611fe0600586901b1617611494565b508251610c6d906001600160401b0383166002611514565b63ffffffff816001600160401b03161161143d57825161142590601a611fe0600586901b1617611494565b508251610c6d906001600160401b0383166004611514565b825161145490601b611fe0600586901b1617611494565b508251610c6d906001600160401b0383166008611514565b60408051808201909152606081526000602082015261148d83838451611599565b9392505050565b60408051808201909152606081526000602082015282515160006114b9826001611cd1565b9050846020015182106114da576114da856114d5836002611d19565b61166a565b84516020838201018581535080518211156114f3578181525b5093949350505050565b81516107ca90601f611fe0600585901b1617611494565b60408051808201909152606081526000602082015283515160006115388285611cd1565b9050856020015181111561155557611555866114d5836002611d19565b6000600161156586610100611e14565b61156f9190611ce4565b9050865182810187831982511617815250805183111561158d578281525b50959695505050505050565b60408051808201909152606081526000602082015282518211156115bc57600080fd5b83515160006115cb8483611cd1565b905085602001518111156115e8576115e8866114d5836002611d19565b855180518382016020019160009180851115611602578482525b505050602086015b602086106116425780518252611621602083611cd1565b915061162e602082611cd1565b905061163b602087611ce4565b955061160a565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b815161167683836112d9565b50610c6d838261146c565b8280548282559060005260206000209081019282156116bc579160200282015b828111156116bc5782518255916020019190600101906116a1565b506116c8929150611701565b5090565b60405180604001604052806116f4604051806040016040528060608152602001600081525090565b8152602001600081525090565b5b808211156116c85760008155600101611702565b6000815180845260005b8181101561173c57602081850181015186830182015201611720565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061148d6020830184611716565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561179f5761179f61176f565b604051601f8501601f19908116603f011681019082821181831017156117c7576117c761176f565b816040528093508581528686860111156117e057600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261180b57600080fd5b61148d83833560208501611785565b60008060006060848603121561182f57600080fd5b8335925060208401356001600160401b038082111561184d57600080fd5b611859878388016117fa565b9350604086013591508082111561186f57600080fd5b5061187c868287016117fa565b9150509250925092565b60008060006040848603121561189b57600080fd5b8335925060208401356001600160401b03808211156118b957600080fd5b818601915086601f8301126118cd57600080fd5b8135818111156118dc57600080fd5b8760208260051b85010111156118f157600080fd5b6020830194508093505050509250925092565b60006020828403121561191657600080fd5b81356001600160a01b038116811461148d57600080fd5b60006020828403121561193f57600080fd5b81356001600160401b0381111561195557600080fd5b8201601f8101841361196657600080fd5b61197584823560208401611785565b949350505050565b60006020828403121561198f57600080fd5b5035919050565b600181811c908216806119aa57607f821691505b6020821081036119ca57634e487b7160e01b600052602260045260246000fd5b50919050565b60208152815160208201526020820151604082015261ffff60408301511660608201526000606083015163ffffffff80821660808501528060808601511660a0850152505060a083015160c08084015261197560e0840182611716565b600060208284031215611a3f57600080fd5b5051919050565b601f8211156107ca57600081815260208120601f850160051c81016020861015611a6d5750805b601f850160051c820191505b81811015611a8c57828155600101611a79565b505050505050565b81516001600160401b03811115611aad57611aad61176f565b611ac181611abb8454611996565b84611a46565b602080601f831160018114611af65760008415611ade5750858301515b600019600386901b1c1916600185901b178555611a8c565b600085815260208120601f198616915b82811015611b2557888601518255948401946001909101908401611b06565b5085821015611b435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103611b5e575050565b611b688254611996565b6001600160401b03811115611b7f57611b7f61176f565b611b8d81611abb8454611996565b6000601f821160018114611bc15760008315611ba95750848201545b600019600385901b1c1916600184901b178455611c26565b600085815260209020601f19841690600086815260209020845b83811015611bfb5782860154825560019586019590910190602001611bdb565b5085831015611c195781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c8157611c81611c59565b5060010190565b6001600160401b038616815260a060208201526000611caa60a0830187611716565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b8082018082111561134d5761134d611c59565b8181038181111561134d5761134d611c59565b600082611d1457634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761134d5761134d611c59565b600181815b80851115611d6b578160001904821115611d5157611d51611c59565b80851615611d5e57918102915b93841c9390800290611d35565b509250929050565b600082611d825750600161134d565b81611d8f5750600061134d565b8160018114611da55760028114611daf57611dcb565b600191505061134d565b60ff841115611dc057611dc0611c59565b50506001821b61134d565b5060208310610133831016604e8410600b8410161715611dee575081810a61134d565b611df88383611d30565b8060001904821115611e0c57611e0c611c59565b029392505050565b600061148d8383611d7356fea2646970667358221220702b8ac0223405455c0e737665d3801969ce04a0aad32afac97648c8d82098b364736f6c63430008140033636f6e737420706f6b6955524c203d206068747470733a2f2f706f6b656170692e636f2f6170692f76322f706f6b656d6f6e603b636f6e737420687055524c203d206068747470733a2f2f77697a6172642d776f726c642d6170692e6865726f6b756170702e636f6d2f486f75736573603b636f6e737420706f6b656d6f6e436861726163746572203d20313b636f6e736f6c652e6c6f67286053656e64696e672048545450207265717565737420746f20247b706f6b6955524c7d2f247b706f6b656d6f6e4368617261637465727d2f60293b636f6e737420706f6b6952657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a2060247b706f6b6955524c7d2f247b706f6b656d6f6e4368617261637465727d602c6d6574686f643a2060474554602c7d293b636f6e737420687052657175657374203d2046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a20687055524c2c6d6574686f643a2060474554602c7d293b636f6e737420706f6b69526573706f6e7365203d20617761697420706f6b69526571756573743b636f6e7374206870526573706f6e7365203d206177616974206870526571756573743b636f6e73742072657144617461203d20706f6b69526573706f6e73652e646174613b636f6e737420687044617461203d206870526573706f6e73652e646174613b636f6e7374206d7944617461203d207b706f6b656d6f6e547970653a20726571446174612e74797065735b305d2e747970652e6e616d652c706f6b656d6f6e4e616d653a20726571446174612e737065636965732e6e616d652c706f6b656d6f6e496d6167653a20726571446174612e737072697465732e6f746865722e686f6d652e66726f6e745f64656661756c742c7d3b72657475726e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e737472696e67696679286d794461746129293b","opcodes":"PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x43 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH20 0x234A5FB5BD614A7AA2FFAB244D603ABFA0AC5C5C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x66756E2D617262697472756D2D7365706F6C69612D3100000000000000000000 PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH3 0x493E0 PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x787D74CAEA10B2B357790D5B5247C2F63D1D91572A9846F780606E4D953677AE PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH6 0xFFFFFFFFFFFF NOT AND PUSH3 0x10001 OR SWAP1 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH24 0x50D47E4142598E3411AA864E08A44284E471AC6F000186A0 OR SWAP1 SSTORE PUSH2 0x3A0 PUSH1 0x40 MSTORE PUSH2 0x2D7 PUSH1 0xA0 DUP2 DUP2 MSTORE SWAP1 PUSH3 0x229C PUSH1 0xC0 CODECOPY PUSH1 0x13 SWAP1 PUSH3 0xFF SWAP1 DUP3 PUSH3 0x357 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE PUSH5 0x100000000 SWAP1 SWAP2 DIV AND CALLER DUP1 PUSH1 0x0 DUP2 PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH3 0x1B6 JUMPI PUSH3 0x1B6 DUP2 PUSH3 0x207 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x423 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x17A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x352 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x32D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x34E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x339 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x373 JUMPI PUSH3 0x373 PUSH3 0x2B2 JUMP JUMPDEST PUSH3 0x38B DUP2 PUSH3 0x384 DUP5 SLOAD PUSH3 0x2C8 JUMP JUMPDEST DUP5 PUSH3 0x304 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3C3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3AA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x34E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3F4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3D3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x413 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1E56 PUSH3 0x446 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x524 ADD MSTORE PUSH2 0x1023 ADD MSTORE PUSH2 0x1E56 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E1B15B GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA321CCAA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xFC2A88C3 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA321CCAA EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB1E21749 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCFD30A6E EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E84737F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8E84737F EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xA168FA89 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85E1B15B EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3944EA3A GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x65372147 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x65372147 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x77452A2C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3944EA3A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x4B0795A8 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AB0F2B3 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1AB0F2B3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x2E0A5890 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20DBB9B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xCA76175 EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x20C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x272 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x241 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x802 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST PUSH2 0x237 PUSH2 0x827 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x272 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x31F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x31F SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x41D SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x272 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x31F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x511 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56D DUP4 DUP4 DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0xE SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xF SLOAD PUSH2 0xFFFF DUP2 AND DUP4 DUP6 ADD MSTORE PUSH1 0x12 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9B1C385E SWAP2 PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x627 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP5 DUP2 MSTORE DUP1 DUP4 ADD DUP8 MSTORE DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP6 MSTORE PUSH1 0xD DUP4 MSTORE SWAP6 SWAP1 SWAP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP6 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH2 0x6FE SWAP4 SWAP2 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD DUP3 SWAP1 SSTORE POP PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x817 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x823 DUP3 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DB PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x91C PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x13 DUP1 SLOAD PUSH2 0x92C SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x958 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x97A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x988 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 PUSH2 0xD39 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x9C5 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP3 SWAP1 SWAP5 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SWAP2 SSTORE SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA94 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xAE5 JUMPI CALLER PUSH2 0xAAC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0x10F0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0xB PUSH2 0xC0A DUP3 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0xA PUSH2 0xC30 DUP4 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0xC PUSH2 0xC3D DUP4 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xC6D PUSH1 0xC DUP3 PUSH2 0x1B53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD01 SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP3 PUSH1 0x0 DUP1 DUP5 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD55 PUSH2 0x100 PUSH2 0x1217 JUMP JUMPDEST SWAP1 POP PUSH2 0xD8E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP3 PUSH2 0x1238 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDD6 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xDED SWAP1 DUP1 ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE15 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE25 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE56 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xE9F DUP5 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1238 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xE62 JUMP JUMPDEST POP PUSH2 0xEB9 DUP2 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEDC PUSH2 0x1C2D JUMP JUMPDEST SUB PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF2B SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xF44 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF6D SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF7D SWAP1 DUP3 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0x1016 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFB3 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xFBC DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0xC0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH2 0xFFC DUP5 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFE5 JUMPI PUSH2 0xFE5 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xFBF JUMP JUMPDEST POP PUSH2 0x1016 DUP2 PUSH2 0x12AE JUMP JUMPDEST MLOAD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x461D2762 DUP7 DUP9 PUSH1 0x1 DUP9 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1076 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CE PUSH2 0x1C2D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP5 ADD DUP3 DUP1 ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F7 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 DUP2 DUP1 ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1207 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x121F PUSH2 0x16CC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x122B SWAP1 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1245 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1353 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x7CA SWAP1 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP2 MLOAD PUSH2 0x125E SWAP1 PUSH1 0xC2 PUSH2 0x1494 JUMP JUMPDEST POP PUSH2 0x823 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1276 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x1295 DUP2 PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12B9 DUP2 PUSH1 0x7 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0x1245 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12F9 PUSH1 0x20 DUP4 PUSH2 0x1CF7 JUMP JUMPDEST ISZERO PUSH2 0x1321 JUMPI PUSH2 0x1309 PUSH1 0x20 DUP4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x1314 SWAP1 PUSH1 0x20 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0x131E SWAP1 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 DUP5 ADD ADD DUP2 DUP2 LT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1379 JUMPI DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x1494 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x13B9 JUMPI DUP3 MLOAD PUSH2 0x13A1 SWAP1 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x13FA JUMPI DUP3 MLOAD PUSH2 0x13E2 SWAP1 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x2 PUSH2 0x1514 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x143D JUMPI DUP3 MLOAD PUSH2 0x1425 SWAP1 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x4 PUSH2 0x1514 JUMP JUMPDEST DUP3 MLOAD PUSH2 0x1454 SWAP1 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x8 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x148D DUP4 DUP4 DUP5 MLOAD PUSH2 0x1599 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD MLOAD PUSH1 0x0 PUSH2 0x14B9 DUP3 PUSH1 0x1 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x20 ADD MLOAD DUP3 LT PUSH2 0x14DA JUMPI PUSH2 0x14DA DUP6 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP4 DUP3 ADD ADD DUP6 DUP2 MSTORE8 POP DUP1 MLOAD DUP3 GT ISZERO PUSH2 0x14F3 JUMPI DUP2 DUP2 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x7CA SWAP1 PUSH1 0x1F PUSH2 0x1FE0 PUSH1 0x5 DUP6 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x1538 DUP3 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1555 DUP7 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1565 DUP7 PUSH2 0x100 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x156F SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP DUP7 MLOAD DUP3 DUP2 ADD DUP8 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP4 GT ISZERO PUSH2 0x158D JUMPI DUP3 DUP2 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x15BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x15CB DUP5 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x15E8 JUMPI PUSH2 0x15E8 DUP7 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP4 DUP3 ADD PUSH1 0x20 ADD SWAP2 PUSH1 0x0 SWAP2 DUP1 DUP6 GT ISZERO PUSH2 0x1602 JUMPI DUP5 DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP7 ADD JUMPDEST PUSH1 0x20 DUP7 LT PUSH2 0x1642 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1621 PUSH1 0x20 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E PUSH1 0x20 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x163B PUSH1 0x20 DUP8 PUSH2 0x1CE4 JUMP JUMPDEST SWAP6 POP PUSH2 0x160A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP9 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP5 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1676 DUP4 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xC6D DUP4 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x16BC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16A1 JUMP JUMPDEST POP PUSH2 0x16C8 SWAP3 SWAP2 POP PUSH2 0x1701 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x16F4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1720 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x148D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1716 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH2 0x179F JUMPI PUSH2 0x179F PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C7 PUSH2 0x176F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x17E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x180B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1859 DUP8 DUP4 DUP9 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187C DUP7 DUP3 DUP8 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1975 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1785 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x19AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH2 0x1975 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A6D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A8C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAD PUSH2 0x176F JUMP JUMPDEST PUSH2 0x1AC1 DUP2 PUSH2 0x1ABB DUP5 SLOAD PUSH2 0x1996 JUMP JUMPDEST DUP5 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1AF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1ADE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1B5E JUMPI POP POP JUMP JUMPDEST PUSH2 0x1B68 DUP3 SLOAD PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7F PUSH2 0x176F JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1ABB DUP5 SLOAD PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BA9 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFB JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x1BDB JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x1C19 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C81 JUMPI PUSH2 0x1C81 PUSH2 0x1C59 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CAA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D14 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1D6B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D51 JUMPI PUSH2 0x1D51 PUSH2 0x1C59 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1D5E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1D35 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D82 JUMPI POP PUSH1 0x1 PUSH2 0x134D JUMP JUMPDEST DUP2 PUSH2 0x1D8F JUMPI POP PUSH1 0x0 PUSH2 0x134D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1DA5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1DAF JUMPI PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x134D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DC0 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x134D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1DEE JUMPI POP DUP2 DUP2 EXP PUSH2 0x134D JUMP JUMPDEST PUSH2 0x1DF8 DUP4 DUP4 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C59 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP4 DUP4 PUSH2 0x1D73 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x2B8AC0223405455C0E737665D3801969CE DIV LOG0 0xAA 0xD3 0x2A STATICCALL 0xC9 PUSH23 0x48C8D82098B364736F6C63430008140033636F6E737420 PUSH17 0x6F6B6955524C203D206068747470733A2F 0x2F PUSH17 0x6F6B656170692E636F2F6170692F76322F PUSH17 0x6F6B656D6F6E603B636F6E737420687055 MSTORE 0x4C KECCAK256 RETURNDATASIZE KECCAK256 PUSH1 0x68 PUSH21 0x7470733A2F2F77697A6172642D776F726C642D6170 PUSH10 0x2E6865726F6B75617070 0x2E PUSH4 0x6F6D2F48 PUSH16 0x75736573603B636F6E737420706F6B65 PUSH14 0x6F6E436861726163746572203D20 BALANCE EXTCODESIZE PUSH4 0x6F6E736F PUSH13 0x652E6C6F67286053656E64696E PUSH8 0x2048545450207265 PUSH18 0x7565737420746F20247B706F6B6955524C7D 0x2F 0x24 PUSH28 0x706F6B656D6F6E4368617261637465727D2F60293B636F6E73742070 PUSH16 0x6B6952657175657374203D2046756E63 PUSH21 0x696F6E732E6D616B65487474705265717565737428 PUSH28 0x75726C3A2060247B706F6B6955524C7D2F247B706F6B656D6F6E4368 PUSH2 0x7261 PUSH4 0x7465727D PUSH1 0x2C PUSH14 0x6574686F643A2060474554602C7D 0x29 EXTCODESIZE PUSH4 0x6F6E7374 KECCAK256 PUSH9 0x705265717565737420 RETURNDATASIZE KECCAK256 CHAINID PUSH22 0x6E6374696F6E732E6D616B6548747470526571756573 PUSH21 0x287B75726C3A20687055524C2C6D6574686F643A20 PUSH1 0x47 GASLIMIT SLOAD PUSH1 0x2C PUSH30 0x293B636F6E737420706F6B69526573706F6E7365203D2061776169742070 PUSH16 0x6B69526571756573743B636F6E737420 PUSH9 0x70526573706F6E7365 KECCAK256 RETURNDATASIZE KECCAK256 PUSH2 0x7761 PUSH10 0x74206870526571756573 PUSH21 0x3B636F6E73742072657144617461203D20706F6B69 MSTORE PUSH6 0x73706F6E7365 0x2E PUSH5 0x6174613B63 PUSH16 0x6E737420687044617461203D20687052 PUSH6 0x73706F6E7365 0x2E PUSH5 0x6174613B63 PUSH16 0x6E7374206D7944617461203D207B706F PUSH12 0x656D6F6E547970653A207265 PUSH18 0x446174612E74797065735B305D2E74797065 0x2E PUSH15 0x616D652C706F6B656D6F6E4E616D65 GASPRICE KECCAK256 PUSH19 0x6571446174612E737065636965732E6E616D65 0x2C PUSH17 0x6F6B656D6F6E496D6167653A2072657144 PUSH2 0x7461 0x2E PUSH20 0x7072697465732E6F746865722E686F6D652E6672 PUSH16 0x6E745F64656661756C742C7D3B726574 PUSH22 0x726E2046756E6374696F6E732E656E636F6465537472 PUSH10 0x6E67284A534F4E2E7374 PUSH19 0x696E67696679286D794461746129293B000000 ","sourceMap":"960:33:15:-:0;;;-1:-1:-1;;;;;;;;960:33:15;-1:-1:-1;;;960:33:15;;;1296:66;;;1320:42;-1:-1:-1;;;;;;1296:66:15;;;;;;1493;1469:90;;1566:31;;;1591:6;-1:-1:-1;;1566:31:15;;;;;;1860:66;1827:99;;1933:38;;;-1:-1:-1;;1978:26:15;;;;;2080:39;;;-1:-1:-1;;;;;;2126:86:15;;;;;2491:764;570:4956;2491:764;;570:4956;2491:764;;;570:4956;2491:764;;;;;;;;;:::i;:::-;;3262:102;;;;;;;;;-1:-1:-1;3338:18:15;;3300:6;;-1:-1:-1;;;;;3300:6:15;;;736:35:0;;3338:18:15;;;;;6254:10:10;;373:1:5;6254:10:10;590:59:6;;;;-1:-1:-1;;;590:59:6;;2937:2:16;590:59:6;;;2919:21:16;2976:2;2956:18;;;2949:30;3015:26;2995:18;;;2988:54;3059:18;;590:59:6;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:6;-1:-1:-1;;;;;656:18:6;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;-1:-1:-1;;;;;;;;6276:29:10;::::1;6272:70;;6322:13;;-1:-1:-1::0;;;6322:13:10::1;;;;;;;;;;;6272:70;6347:16;:57:::0;;-1:-1:-1;;;;;;6347:57:10::1;-1:-1:-1::0;;;;;6347:57:10;;;::::1;::::0;;;::::1;::::0;;570:4956:15;;1536:239:6;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;3290:2:16;1641:52:6;;;3272:21:16;3329:2;3309:18;;;3302:30;3368:25;3348:18;;;3341:53;3411:18;;1641:52:6;3088:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:16;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:16;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:16;;;2580:26;2531:89;-1:-1:-1;;1335:1:16;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:16;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:16;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:16;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:16:o;3088:347::-;570:4956:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_argsToBytes_2592":{"entryPoint":3272,"id":2592,"parameterSlots":1,"returnSlots":1},"@_sendRequest_72":{"entryPoint":4126,"id":72,"parameterSlots":4,"returnSlots":1},"@_transferOwnership_948":{"entryPoint":4336,"id":948,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_961":{"entryPoint":3187,"id":961,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_914":{"entryPoint":2087,"id":914,"parameterSlots":0,"returnSlots":0},"@appendInt_1407":{"entryPoint":5396,"id":1407,"parameterSlots":3,"returnSlots":1},"@appendUint8_1249":{"entryPoint":5268,"id":1249,"parameterSlots":2,"returnSlots":1},"@append_1188":{"entryPoint":5529,"id":1188,"parameterSlots":3,"returnSlots":1},"@append_1208":{"entryPoint":5228,"id":1208,"parameterSlots":2,"returnSlots":1},"@arbitrumSepoliaVRF_2686":{"entryPoint":null,"id":2686,"parameterSlots":0,"returnSlots":0},"@callbackGasLimit_2683":{"entryPoint":null,"id":2683,"parameterSlots":0,"returnSlots":0},"@create_1489":{"entryPoint":4631,"id":1489,"parameterSlots":1,"returnSlots":1},"@encodeCBOR_521":{"entryPoint":3398,"id":521,"parameterSlots":1,"returnSlots":1},"@endSequence_1832":{"entryPoint":4782,"id":1832,"parameterSlots":1,"returnSlots":0},"@fulfillRandomWords_2896":{"entryPoint":null,"id":2896,"parameterSlots":3,"returnSlots":0},"@fulfillRequest_2886":{"entryPoint":2975,"id":2886,"parameterSlots":3,"returnSlots":0},"@gasLimit_2652":{"entryPoint":null,"id":2652,"parameterSlots":0,"returnSlots":0},"@handleOracleFulfillment_116":{"entryPoint":1305,"id":116,"parameterSlots":3,"returnSlots":0},"@init_1033":{"entryPoint":4825,"id":1033,"parameterSlots":2,"returnSlots":1},"@initializeRequestForInlineJavaScript_585":{"entryPoint":3385,"id":585,"parameterSlots":2,"returnSlots":0},"@initializeRequest_566":{"entryPoint":4505,"id":566,"parameterSlots":4,"returnSlots":0},"@keyHash_2669":{"entryPoint":null,"id":2669,"parameterSlots":0,"returnSlots":0},"@lastRequestId_2680":{"entryPoint":null,"id":2680,"parameterSlots":0,"returnSlots":0},"@makeRandomRequest_2790":{"entryPoint":1437,"id":2790,"parameterSlots":0,"returnSlots":1},"@multiverseApiSources_2634":{"entryPoint":2912,"id":2634,"parameterSlots":0,"returnSlots":0},"@numWords_2675":{"entryPoint":null,"id":2675,"parameterSlots":0,"returnSlots":0},"@owner_924":{"entryPoint":null,"id":924,"parameterSlots":0,"returnSlots":1},"@pokesource_2708":{"entryPoint":1163,"id":2708,"parameterSlots":0,"returnSlots":0},"@rawFulfillRandomWords_2368":{"entryPoint":1925,"id":2368,"parameterSlots":3,"returnSlots":0},"@requestConfirmations_2672":{"entryPoint":null,"id":2672,"parameterSlots":0,"returnSlots":0},"@requestIdPending_2639":{"entryPoint":null,"id":2639,"parameterSlots":0,"returnSlots":0},"@requestIds_2678":{"entryPoint":2637,"id":2678,"parameterSlots":0,"returnSlots":0},"@resize_1086":{"entryPoint":5738,"id":1086,"parameterSlots":2,"returnSlots":0},"@result_2660":{"entryPoint":2050,"id":2660,"parameterSlots":0,"returnSlots":0},"@router_2646":{"entryPoint":null,"id":2646,"parameterSlots":0,"returnSlots":0},"@s_lastError_2658":{"entryPoint":2037,"id":2658,"parameterSlots":0,"returnSlots":0},"@s_lastRequestId_2654":{"entryPoint":null,"id":2654,"parameterSlots":0,"returnSlots":0},"@s_lastResponse_2656":{"entryPoint":2024,"id":2656,"parameterSlots":0,"returnSlots":0},"@s_requests_2666":{"entryPoint":null,"id":2666,"parameterSlots":0,"returnSlots":0},"@s_vrfCoordinator_2299":{"entryPoint":null,"id":2299,"parameterSlots":0,"returnSlots":0},"@sendRequest_2834":{"entryPoint":2257,"id":2834,"parameterSlots":1,"returnSlots":1},"@setCoordinator_2399":{"entryPoint":2670,"id":2399,"parameterSlots":1,"returnSlots":0},"@startArray_1766":{"entryPoint":4746,"id":1766,"parameterSlots":1,"returnSlots":0},"@subscriptionId_2630":{"entryPoint":null,"id":2630,"parameterSlots":0,"returnSlots":0},"@transferOwnership_878":{"entryPoint":2955,"id":878,"parameterSlots":1,"returnSlots":0},"@updatePokeSource_2730":{"entryPoint":2063,"id":2730,"parameterSlots":1,"returnSlots":0},"@userToRequestResult_2643":{"entryPoint":1999,"id":2643,"parameterSlots":0,"returnSlots":0},"@writeBytes_1674":{"entryPoint":4812,"id":1674,"parameterSlots":2,"returnSlots":0},"@writeFixedNumeric_2199":{"entryPoint":4947,"id":2199,"parameterSlots":3,"returnSlots":0},"@writeIndefiniteLengthType_2224":{"entryPoint":5373,"id":2224,"parameterSlots":2,"returnSlots":0},"@writeString_1707":{"entryPoint":4664,"id":1707,"parameterSlots":2,"returnSlots":0},"@writeUInt256_1543":{"entryPoint":4689,"id":1543,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_bytes":{"entryPoint":6021,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":6170,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":6278,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_string":{"entryPoint":5910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2448__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f5343873485c5c5ba9c972f367671af3745dc5cce720ddb197036ef7342b2b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2564_memory_ptr__to_t_struct$_ExtraArgsV1_$2564_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_RandomWordsRequest_$2577_memory_ptr__to_t_struct$_RandomWordsRequest_$2577_memory_ptr__fromStack_reversed":{"entryPoint":6608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__to_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":7304,"id":null,"parameterSlots":6,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7377,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7472,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":7700,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":7539,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7396,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6726,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6804,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage":{"entryPoint":6995,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6550,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7279,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7415,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7257,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7213,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7235,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5999,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18547:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:373:16","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:16"},"nodeType":"YulFunctionCall","src":"88:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:16"},"nodeType":"YulFunctionCall","src":"109:19:16"},"nodeType":"YulExpressionStatement","src":"109:19:16"},{"nodeType":"YulVariableDeclaration","src":"137:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:16","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:16"},"nodeType":"YulFunctionCall","src":"260:11:16"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:16"},"nodeType":"YulFunctionCall","src":"256:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:16"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:16"},"nodeType":"YulFunctionCall","src":"288:13:16"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:16"},"nodeType":"YulFunctionCall","src":"284:22:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:16"},"nodeType":"YulFunctionCall","src":"278:29:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:16"},"nodeType":"YulFunctionCall","src":"249:59:16"},"nodeType":"YulExpressionStatement","src":"249:59:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:16"},"nodeType":"YulFunctionCall","src":"164:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:16","statements":[{"nodeType":"YulAssignment","src":"180:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:16"},"nodeType":"YulFunctionCall","src":"185:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:16","statements":[]},"src":"156:162:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:16"},"nodeType":"YulFunctionCall","src":"338:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:16"},"nodeType":"YulFunctionCall","src":"334:27:16"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:16"},"nodeType":"YulFunctionCall","src":"327:38:16"},"nodeType":"YulExpressionStatement","src":"327:38:16"},{"nodeType":"YulAssignment","src":"374:57:16","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:16"},"nodeType":"YulFunctionCall","src":"398:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"415:3:16"},"nodeType":"YulFunctionCall","src":"415:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:16"},"nodeType":"YulFunctionCall","src":"394:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:16"},"nodeType":"YulFunctionCall","src":"385:39:16"},{"kind":"number","nodeType":"YulLiteral","src":"426:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:16"},"nodeType":"YulFunctionCall","src":"381:50:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:16"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:16","type":""}],"src":"14:423:16"},{"body":{"nodeType":"YulBlock","src":"563:99:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"573:6:16"},"nodeType":"YulFunctionCall","src":"573:21:16"},"nodeType":"YulExpressionStatement","src":"573:21:16"},{"nodeType":"YulAssignment","src":"603:53:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"629:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:16"},"nodeType":"YulFunctionCall","src":"637:18:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"611:17:16"},"nodeType":"YulFunctionCall","src":"611:45:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"603:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:16","type":""}],"src":"442:220:16"},{"body":{"nodeType":"YulBlock","src":"766:101:16","statements":[{"nodeType":"YulAssignment","src":"776:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"788:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"799:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"784:3:16"},"nodeType":"YulFunctionCall","src":"784:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"776:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"818:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"833:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"841:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"829:3:16"},"nodeType":"YulFunctionCall","src":"829:31:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"811:6:16"},"nodeType":"YulFunctionCall","src":"811:50:16"},"nodeType":"YulExpressionStatement","src":"811:50:16"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"735:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"746:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"757:4:16","type":""}],"src":"667:200:16"},{"body":{"nodeType":"YulBlock","src":"904:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"921:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"928:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"933:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"924:3:16"},"nodeType":"YulFunctionCall","src":"924:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"914:6:16"},"nodeType":"YulFunctionCall","src":"914:31:16"},"nodeType":"YulExpressionStatement","src":"914:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"961:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"964:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"954:6:16"},"nodeType":"YulFunctionCall","src":"954:15:16"},"nodeType":"YulExpressionStatement","src":"954:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"985:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"988:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"978:6:16"},"nodeType":"YulFunctionCall","src":"978:15:16"},"nodeType":"YulExpressionStatement","src":"978:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"872:127:16"},{"body":{"nodeType":"YulBlock","src":"1078:557:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1088:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1098:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1092:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1143:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1145:16:16"},"nodeType":"YulFunctionCall","src":"1145:18:16"},"nodeType":"YulExpressionStatement","src":"1145:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1131:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1139:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1128:2:16"},"nodeType":"YulFunctionCall","src":"1128:14:16"},"nodeType":"YulIf","src":"1125:40:16"},{"nodeType":"YulVariableDeclaration","src":"1174:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1188:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1184:3:16"},"nodeType":"YulFunctionCall","src":"1184:7:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1178:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1200:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1220:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1214:5:16"},"nodeType":"YulFunctionCall","src":"1214:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1204:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1232:73:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1254:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1278:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1286:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:16"},"nodeType":"YulFunctionCall","src":"1274:15:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1291:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1270:3:16"},"nodeType":"YulFunctionCall","src":"1270:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"1296:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1266:3:16"},"nodeType":"YulFunctionCall","src":"1266:33:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1301:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1262:3:16"},"nodeType":"YulFunctionCall","src":"1262:42:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1250:3:16"},"nodeType":"YulFunctionCall","src":"1250:55:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1236:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1364:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1366:16:16"},"nodeType":"YulFunctionCall","src":"1366:18:16"},"nodeType":"YulExpressionStatement","src":"1366:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1323:10:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1335:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1320:2:16"},"nodeType":"YulFunctionCall","src":"1320:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1343:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1355:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1340:2:16"},"nodeType":"YulFunctionCall","src":"1340:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1317:2:16"},"nodeType":"YulFunctionCall","src":"1317:46:16"},"nodeType":"YulIf","src":"1314:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1402:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1406:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1395:6:16"},"nodeType":"YulFunctionCall","src":"1395:22:16"},"nodeType":"YulExpressionStatement","src":"1395:22:16"},{"nodeType":"YulAssignment","src":"1426:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1435:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1426:5:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1457:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"1465:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1450:6:16"},"nodeType":"YulFunctionCall","src":"1450:22:16"},"nodeType":"YulExpressionStatement","src":"1450:22:16"},{"body":{"nodeType":"YulBlock","src":"1510:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1519:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1522:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1512:6:16"},"nodeType":"YulFunctionCall","src":"1512:12:16"},"nodeType":"YulExpressionStatement","src":"1512:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1491:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"1505:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1484:2:16"},"nodeType":"YulFunctionCall","src":"1484:25:16"},"nodeType":"YulIf","src":"1481:45:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1552:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1560:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1548:3:16"},"nodeType":"YulFunctionCall","src":"1548:17:16"},{"name":"src","nodeType":"YulIdentifier","src":"1567:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1572:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1535:12:16"},"nodeType":"YulFunctionCall","src":"1535:44:16"},"nodeType":"YulExpressionStatement","src":"1535:44:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1603:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"1611:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:16"},"nodeType":"YulFunctionCall","src":"1599:19:16"},{"kind":"number","nodeType":"YulLiteral","src":"1620:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:30:16"},{"kind":"number","nodeType":"YulLiteral","src":"1627:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1588:6:16"},"nodeType":"YulFunctionCall","src":"1588:41:16"},"nodeType":"YulExpressionStatement","src":"1588:41:16"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1047:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1052:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1060:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1068:5:16","type":""}],"src":"1004:631:16"},{"body":{"nodeType":"YulBlock","src":"1692:168:16","statements":[{"body":{"nodeType":"YulBlock","src":"1741:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1750:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1753:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1743:6:16"},"nodeType":"YulFunctionCall","src":"1743:12:16"},"nodeType":"YulExpressionStatement","src":"1743:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1720:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1728:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:16"},"nodeType":"YulFunctionCall","src":"1716:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"1735:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1712:3:16"},"nodeType":"YulFunctionCall","src":"1712:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1705:6:16"},"nodeType":"YulFunctionCall","src":"1705:35:16"},"nodeType":"YulIf","src":"1702:55:16"},{"nodeType":"YulAssignment","src":"1766:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1821:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:16"},"nodeType":"YulFunctionCall","src":"1809:17:16"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1841:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1828:12:16"},"nodeType":"YulFunctionCall","src":"1828:20:16"},{"name":"end","nodeType":"YulIdentifier","src":"1850:3:16"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"1775:33:16"},"nodeType":"YulFunctionCall","src":"1775:79:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1766:5:16"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1666:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1674:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1682:5:16","type":""}],"src":"1640:220:16"},{"body":{"nodeType":"YulBlock","src":"1987:485:16","statements":[{"body":{"nodeType":"YulBlock","src":"2033:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2042:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2045:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2035:6:16"},"nodeType":"YulFunctionCall","src":"2035:12:16"},"nodeType":"YulExpressionStatement","src":"2035:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2008:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2004:3:16"},"nodeType":"YulFunctionCall","src":"2004:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2029:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2000:3:16"},"nodeType":"YulFunctionCall","src":"2000:32:16"},"nodeType":"YulIf","src":"1997:52:16"},{"nodeType":"YulAssignment","src":"2058:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2081:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2068:12:16"},"nodeType":"YulFunctionCall","src":"2068:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2058:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2100:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2131:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2142:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2127:3:16"},"nodeType":"YulFunctionCall","src":"2127:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2114:12:16"},"nodeType":"YulFunctionCall","src":"2114:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2104:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2155:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2165:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2159:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2210:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2219:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2222:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2212:6:16"},"nodeType":"YulFunctionCall","src":"2212:12:16"},"nodeType":"YulExpressionStatement","src":"2212:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2198:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2206:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2195:2:16"},"nodeType":"YulFunctionCall","src":"2195:14:16"},"nodeType":"YulIf","src":"2192:34:16"},{"nodeType":"YulAssignment","src":"2235:59:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2266:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2277:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2262:3:16"},"nodeType":"YulFunctionCall","src":"2262:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2286:7:16"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"2245:16:16"},"nodeType":"YulFunctionCall","src":"2245:49:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2235:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2303:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2336:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2332:3:16"},"nodeType":"YulFunctionCall","src":"2332:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2319:12:16"},"nodeType":"YulFunctionCall","src":"2319:32:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2307:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2380:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2389:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2392:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2382:6:16"},"nodeType":"YulFunctionCall","src":"2382:12:16"},"nodeType":"YulExpressionStatement","src":"2382:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2366:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2376:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2363:2:16"},"nodeType":"YulFunctionCall","src":"2363:16:16"},"nodeType":"YulIf","src":"2360:36:16"},{"nodeType":"YulAssignment","src":"2405:61:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2447:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:16"},"nodeType":"YulFunctionCall","src":"2432:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2458:7:16"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"2415:16:16"},"nodeType":"YulFunctionCall","src":"2415:51:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2405:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1937:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1948:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1960:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1968:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1976:6:16","type":""}],"src":"1865:607:16"},{"body":{"nodeType":"YulBlock","src":"2578:76:16","statements":[{"nodeType":"YulAssignment","src":"2588:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2600:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2611:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2596:3:16"},"nodeType":"YulFunctionCall","src":"2596:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2588:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2630:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2641:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:16"},"nodeType":"YulFunctionCall","src":"2623:25:16"},"nodeType":"YulExpressionStatement","src":"2623:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2547:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2558:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2569:4:16","type":""}],"src":"2477:177:16"},{"body":{"nodeType":"YulBlock","src":"2781:561:16","statements":[{"body":{"nodeType":"YulBlock","src":"2827:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2836:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2839:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2829:6:16"},"nodeType":"YulFunctionCall","src":"2829:12:16"},"nodeType":"YulExpressionStatement","src":"2829:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2802:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2811:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2798:3:16"},"nodeType":"YulFunctionCall","src":"2798:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2823:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2794:3:16"},"nodeType":"YulFunctionCall","src":"2794:32:16"},"nodeType":"YulIf","src":"2791:52:16"},{"nodeType":"YulAssignment","src":"2852:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2875:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2862:12:16"},"nodeType":"YulFunctionCall","src":"2862:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2852:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2894:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2925:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2936:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2921:3:16"},"nodeType":"YulFunctionCall","src":"2921:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2908:12:16"},"nodeType":"YulFunctionCall","src":"2908:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2898:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2949:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2953:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3004:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3013:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3016:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3006:6:16"},"nodeType":"YulFunctionCall","src":"3006:12:16"},"nodeType":"YulExpressionStatement","src":"3006:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2992:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3000:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2989:2:16"},"nodeType":"YulFunctionCall","src":"2989:14:16"},"nodeType":"YulIf","src":"2986:34:16"},{"nodeType":"YulVariableDeclaration","src":"3029:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3043:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3054:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3039:3:16"},"nodeType":"YulFunctionCall","src":"3039:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3033:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3109:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3118:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3121:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3111:6:16"},"nodeType":"YulFunctionCall","src":"3111:12:16"},"nodeType":"YulExpressionStatement","src":"3111:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3088:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"3092:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3084:3:16"},"nodeType":"YulFunctionCall","src":"3084:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3099:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3080:3:16"},"nodeType":"YulFunctionCall","src":"3080:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3073:6:16"},"nodeType":"YulFunctionCall","src":"3073:35:16"},"nodeType":"YulIf","src":"3070:55:16"},{"nodeType":"YulVariableDeclaration","src":"3134:30:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3161:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3148:12:16"},"nodeType":"YulFunctionCall","src":"3148:16:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3138:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3191:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3200:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3203:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3193:6:16"},"nodeType":"YulFunctionCall","src":"3193:12:16"},"nodeType":"YulExpressionStatement","src":"3193:12:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3179:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3187:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3176:2:16"},"nodeType":"YulFunctionCall","src":"3176:14:16"},"nodeType":"YulIf","src":"3173:34:16"},{"body":{"nodeType":"YulBlock","src":"3265:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3277:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3267:6:16"},"nodeType":"YulFunctionCall","src":"3267:12:16"},"nodeType":"YulExpressionStatement","src":"3267:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3230:2:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3238:1:16","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3241:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3234:3:16"},"nodeType":"YulFunctionCall","src":"3234:14:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:16"},"nodeType":"YulFunctionCall","src":"3226:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3251:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3222:3:16"},"nodeType":"YulFunctionCall","src":"3222:32:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3256:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3219:2:16"},"nodeType":"YulFunctionCall","src":"3219:45:16"},"nodeType":"YulIf","src":"3216:65:16"},{"nodeType":"YulAssignment","src":"3290:21:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3304:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"3308:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3300:3:16"},"nodeType":"YulFunctionCall","src":"3300:11:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3290:6:16"}]},{"nodeType":"YulAssignment","src":"3320:16:16","value":{"name":"length","nodeType":"YulIdentifier","src":"3330:6:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3320:6:16"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2731:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2742:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2754:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2762:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2770:6:16","type":""}],"src":"2659:683:16"},{"body":{"nodeType":"YulBlock","src":"3446:93:16","statements":[{"nodeType":"YulAssignment","src":"3456:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3468:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3479:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3464:3:16"},"nodeType":"YulFunctionCall","src":"3464:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3456:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3498:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3521:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3509:3:16"},"nodeType":"YulFunctionCall","src":"3509:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3491:6:16"},"nodeType":"YulFunctionCall","src":"3491:42:16"},"nodeType":"YulExpressionStatement","src":"3491:42:16"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3415:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3426:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3437:4:16","type":""}],"src":"3347:192:16"},{"body":{"nodeType":"YulBlock","src":"3614:216:16","statements":[{"body":{"nodeType":"YulBlock","src":"3660:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3669:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3672:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3662:6:16"},"nodeType":"YulFunctionCall","src":"3662:12:16"},"nodeType":"YulExpressionStatement","src":"3662:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3635:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3644:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3631:3:16"},"nodeType":"YulFunctionCall","src":"3631:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3656:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3627:3:16"},"nodeType":"YulFunctionCall","src":"3627:32:16"},"nodeType":"YulIf","src":"3624:52:16"},{"nodeType":"YulVariableDeclaration","src":"3685:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3711:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3698:12:16"},"nodeType":"YulFunctionCall","src":"3698:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3689:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3784:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3793:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3796:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3786:6:16"},"nodeType":"YulFunctionCall","src":"3786:12:16"},"nodeType":"YulExpressionStatement","src":"3786:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3743:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3769:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3774:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3765:3:16"},"nodeType":"YulFunctionCall","src":"3765:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3778:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3761:3:16"},"nodeType":"YulFunctionCall","src":"3761:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3750:3:16"},"nodeType":"YulFunctionCall","src":"3750:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3740:2:16"},"nodeType":"YulFunctionCall","src":"3740:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3733:6:16"},"nodeType":"YulFunctionCall","src":"3733:50:16"},"nodeType":"YulIf","src":"3730:70:16"},{"nodeType":"YulAssignment","src":"3809:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"3819:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3809:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3580:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3591:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3603:6:16","type":""}],"src":"3544:286:16"},{"body":{"nodeType":"YulBlock","src":"3954:99:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3964:6:16"},"nodeType":"YulFunctionCall","src":"3964:21:16"},"nodeType":"YulExpressionStatement","src":"3964:21:16"},{"nodeType":"YulAssignment","src":"3994:53:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4020:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4032:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4043:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4028:3:16"},"nodeType":"YulFunctionCall","src":"4028:18:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4002:17:16"},"nodeType":"YulFunctionCall","src":"4002:45:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3994:4:16"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3923:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3934:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3945:4:16","type":""}],"src":"3835:218:16"},{"body":{"nodeType":"YulBlock","src":"4159:76:16","statements":[{"nodeType":"YulAssignment","src":"4169:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4181:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4192:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4177:3:16"},"nodeType":"YulFunctionCall","src":"4177:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4169:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4211:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"4222:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4204:6:16"},"nodeType":"YulFunctionCall","src":"4204:25:16"},"nodeType":"YulExpressionStatement","src":"4204:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4128:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4139:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4150:4:16","type":""}],"src":"4058:177:16"},{"body":{"nodeType":"YulBlock","src":"4320:370:16","statements":[{"body":{"nodeType":"YulBlock","src":"4366:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4375:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4378:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4368:6:16"},"nodeType":"YulFunctionCall","src":"4368:12:16"},"nodeType":"YulExpressionStatement","src":"4368:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4341:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4350:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4337:3:16"},"nodeType":"YulFunctionCall","src":"4337:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4362:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4333:3:16"},"nodeType":"YulFunctionCall","src":"4333:32:16"},"nodeType":"YulIf","src":"4330:52:16"},{"nodeType":"YulVariableDeclaration","src":"4391:37:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4418:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4405:12:16"},"nodeType":"YulFunctionCall","src":"4405:23:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4471:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4480:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4483:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4473:6:16"},"nodeType":"YulFunctionCall","src":"4473:12:16"},"nodeType":"YulExpressionStatement","src":"4473:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4443:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4451:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4440:2:16"},"nodeType":"YulFunctionCall","src":"4440:30:16"},"nodeType":"YulIf","src":"4437:50:16"},{"nodeType":"YulVariableDeclaration","src":"4496:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4510:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4521:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4506:3:16"},"nodeType":"YulFunctionCall","src":"4506:22:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4500:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4576:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4585:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4588:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4578:6:16"},"nodeType":"YulFunctionCall","src":"4578:12:16"},"nodeType":"YulExpressionStatement","src":"4578:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4555:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"4559:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4551:3:16"},"nodeType":"YulFunctionCall","src":"4551:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4566:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4547:3:16"},"nodeType":"YulFunctionCall","src":"4547:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4540:6:16"},"nodeType":"YulFunctionCall","src":"4540:35:16"},"nodeType":"YulIf","src":"4537:55:16"},{"nodeType":"YulAssignment","src":"4601:83:16","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4649:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"4653:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4645:3:16"},"nodeType":"YulFunctionCall","src":"4645:11:16"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4671:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4658:12:16"},"nodeType":"YulFunctionCall","src":"4658:16:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:16"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"4611:33:16"},"nodeType":"YulFunctionCall","src":"4611:73:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4601:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4286:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4297:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4309:6:16","type":""}],"src":"4240:450:16"},{"body":{"nodeType":"YulBlock","src":"4765:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"4811:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4823:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4813:6:16"},"nodeType":"YulFunctionCall","src":"4813:12:16"},"nodeType":"YulExpressionStatement","src":"4813:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4786:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4795:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4782:3:16"},"nodeType":"YulFunctionCall","src":"4782:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4807:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4778:3:16"},"nodeType":"YulFunctionCall","src":"4778:32:16"},"nodeType":"YulIf","src":"4775:52:16"},{"nodeType":"YulAssignment","src":"4836:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4859:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4846:12:16"},"nodeType":"YulFunctionCall","src":"4846:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4836:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4731:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4742:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4754:6:16","type":""}],"src":"4695:180:16"},{"body":{"nodeType":"YulBlock","src":"4981:102:16","statements":[{"nodeType":"YulAssignment","src":"4991:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5003:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5014:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4999:3:16"},"nodeType":"YulFunctionCall","src":"4999:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4991:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5033:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5048:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5064:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5069:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5060:3:16"},"nodeType":"YulFunctionCall","src":"5060:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5073:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5056:3:16"},"nodeType":"YulFunctionCall","src":"5056:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5044:3:16"},"nodeType":"YulFunctionCall","src":"5044:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5026:6:16"},"nodeType":"YulFunctionCall","src":"5026:51:16"},"nodeType":"YulExpressionStatement","src":"5026:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4950:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4961:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4972:4:16","type":""}],"src":"4880:203:16"},{"body":{"nodeType":"YulBlock","src":"5158:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"5204:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5213:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5216:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5206:6:16"},"nodeType":"YulFunctionCall","src":"5206:12:16"},"nodeType":"YulExpressionStatement","src":"5206:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5179:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5188:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5175:3:16"},"nodeType":"YulFunctionCall","src":"5175:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5171:3:16"},"nodeType":"YulFunctionCall","src":"5171:32:16"},"nodeType":"YulIf","src":"5168:52:16"},{"nodeType":"YulAssignment","src":"5229:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5252:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5239:12:16"},"nodeType":"YulFunctionCall","src":"5239:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5229:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5124:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5135:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5147:6:16","type":""}],"src":"5088:180:16"},{"body":{"nodeType":"YulBlock","src":"5396:161:16","statements":[{"nodeType":"YulAssignment","src":"5406:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5418:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5429:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5414:3:16"},"nodeType":"YulFunctionCall","src":"5414:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5406:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5448:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5463:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5484:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5475:3:16"},"nodeType":"YulFunctionCall","src":"5475:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5488:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5471:3:16"},"nodeType":"YulFunctionCall","src":"5471:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5459:3:16"},"nodeType":"YulFunctionCall","src":"5459:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5441:6:16"},"nodeType":"YulFunctionCall","src":"5441:51:16"},"nodeType":"YulExpressionStatement","src":"5441:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5523:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:16"},"nodeType":"YulFunctionCall","src":"5508:18:16"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5542:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5535:6:16"},"nodeType":"YulFunctionCall","src":"5535:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5528:6:16"},"nodeType":"YulFunctionCall","src":"5528:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:16"},"nodeType":"YulFunctionCall","src":"5501:50:16"},"nodeType":"YulExpressionStatement","src":"5501:50:16"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5357:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5368:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5376:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5387:4:16","type":""}],"src":"5273:284:16"},{"body":{"nodeType":"YulBlock","src":"5693:102:16","statements":[{"nodeType":"YulAssignment","src":"5703:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5715:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5726:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5711:3:16"},"nodeType":"YulFunctionCall","src":"5711:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5703:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5745:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5760:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5776:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5781:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5772:3:16"},"nodeType":"YulFunctionCall","src":"5772:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5785:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5768:3:16"},"nodeType":"YulFunctionCall","src":"5768:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5756:3:16"},"nodeType":"YulFunctionCall","src":"5756:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5738:6:16"},"nodeType":"YulFunctionCall","src":"5738:51:16"},"nodeType":"YulExpressionStatement","src":"5738:51:16"}]},"name":"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2448__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5673:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5684:4:16","type":""}],"src":"5562:233:16"},{"body":{"nodeType":"YulBlock","src":"5917:151:16","statements":[{"nodeType":"YulAssignment","src":"5927:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5950:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:16"},"nodeType":"YulFunctionCall","src":"5935:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5927:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5994:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5987:6:16"},"nodeType":"YulFunctionCall","src":"5987:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5980:6:16"},"nodeType":"YulFunctionCall","src":"5980:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5962:6:16"},"nodeType":"YulFunctionCall","src":"5962:41:16"},"nodeType":"YulExpressionStatement","src":"5962:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6023:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6019:3:16"},"nodeType":"YulFunctionCall","src":"6019:18:16"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6053:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6046:6:16"},"nodeType":"YulFunctionCall","src":"6046:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6039:6:16"},"nodeType":"YulFunctionCall","src":"6039:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6012:6:16"},"nodeType":"YulFunctionCall","src":"6012:50:16"},"nodeType":"YulExpressionStatement","src":"6012:50:16"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5878:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5889:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5897:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5908:4:16","type":""}],"src":"5800:268:16"},{"body":{"nodeType":"YulBlock","src":"6172:89:16","statements":[{"nodeType":"YulAssignment","src":"6182:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6194:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6205:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6190:3:16"},"nodeType":"YulFunctionCall","src":"6190:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6182:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6224:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6239:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6247:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6235:3:16"},"nodeType":"YulFunctionCall","src":"6235:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6217:6:16"},"nodeType":"YulFunctionCall","src":"6217:38:16"},"nodeType":"YulExpressionStatement","src":"6217:38:16"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6141:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6152:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6163:4:16","type":""}],"src":"6073:188:16"},{"body":{"nodeType":"YulBlock","src":"6321:325:16","statements":[{"nodeType":"YulAssignment","src":"6331:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6345:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6348:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6341:3:16"},"nodeType":"YulFunctionCall","src":"6341:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6331:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"6362:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6392:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6398:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6388:3:16"},"nodeType":"YulFunctionCall","src":"6388:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6366:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6439:31:16","statements":[{"nodeType":"YulAssignment","src":"6441:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6455:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6463:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6451:3:16"},"nodeType":"YulFunctionCall","src":"6451:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6441:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6419:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6412:6:16"},"nodeType":"YulFunctionCall","src":"6412:26:16"},"nodeType":"YulIf","src":"6409:61:16"},{"body":{"nodeType":"YulBlock","src":"6529:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6550:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6557:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6562:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6553:3:16"},"nodeType":"YulFunctionCall","src":"6553:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:16"},"nodeType":"YulFunctionCall","src":"6543:31:16"},"nodeType":"YulExpressionStatement","src":"6543:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6594:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6597:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:16"},"nodeType":"YulFunctionCall","src":"6587:15:16"},"nodeType":"YulExpressionStatement","src":"6587:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6622:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6625:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6615:6:16"},"nodeType":"YulFunctionCall","src":"6615:15:16"},"nodeType":"YulExpressionStatement","src":"6615:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6485:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6508:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6516:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6505:2:16"},"nodeType":"YulFunctionCall","src":"6505:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6482:2:16"},"nodeType":"YulFunctionCall","src":"6482:38:16"},"nodeType":"YulIf","src":"6479:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6301:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6310:6:16","type":""}],"src":"6266:380:16"},{"body":{"nodeType":"YulBlock","src":"6824:595:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6841:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6852:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6834:6:16"},"nodeType":"YulFunctionCall","src":"6834:21:16"},"nodeType":"YulExpressionStatement","src":"6834:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6875:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6886:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:16"},"nodeType":"YulFunctionCall","src":"6871:18:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6891:5:16"},"nodeType":"YulFunctionCall","src":"6891:13:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6864:6:16"},"nodeType":"YulFunctionCall","src":"6864:41:16"},"nodeType":"YulExpressionStatement","src":"6864:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6925:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6936:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6921:3:16"},"nodeType":"YulFunctionCall","src":"6921:18:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6951:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6959:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6947:3:16"},"nodeType":"YulFunctionCall","src":"6947:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6941:5:16"},"nodeType":"YulFunctionCall","src":"6941:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6914:6:16"},"nodeType":"YulFunctionCall","src":"6914:50:16"},"nodeType":"YulExpressionStatement","src":"6914:50:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6984:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6995:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6980:3:16"},"nodeType":"YulFunctionCall","src":"6980:18:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7014:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7010:3:16"},"nodeType":"YulFunctionCall","src":"7010:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7004:5:16"},"nodeType":"YulFunctionCall","src":"7004:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"7028:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7000:3:16"},"nodeType":"YulFunctionCall","src":"7000:35:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6973:6:16"},"nodeType":"YulFunctionCall","src":"6973:63:16"},"nodeType":"YulExpressionStatement","src":"6973:63:16"},{"nodeType":"YulVariableDeclaration","src":"7045:42:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7075:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7083:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7071:3:16"},"nodeType":"YulFunctionCall","src":"7071:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7065:5:16"},"nodeType":"YulFunctionCall","src":"7065:22:16"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7049:12:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7096:20:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7106:10:16","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7100:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7136:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7147:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7132:3:16"},"nodeType":"YulFunctionCall","src":"7132:19:16"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7157:12:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7171:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7153:3:16"},"nodeType":"YulFunctionCall","src":"7153:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7125:6:16"},"nodeType":"YulFunctionCall","src":"7125:50:16"},"nodeType":"YulExpressionStatement","src":"7125:50:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7195:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7206:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7191:3:16"},"nodeType":"YulFunctionCall","src":"7191:19:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7226:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7234:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:16"},"nodeType":"YulFunctionCall","src":"7222:16:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7216:5:16"},"nodeType":"YulFunctionCall","src":"7216:23:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7241:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7212:3:16"},"nodeType":"YulFunctionCall","src":"7212:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7184:6:16"},"nodeType":"YulFunctionCall","src":"7184:61:16"},"nodeType":"YulExpressionStatement","src":"7184:61:16"},{"nodeType":"YulVariableDeclaration","src":"7254:45:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7286:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7294:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7282:3:16"},"nodeType":"YulFunctionCall","src":"7282:16:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7276:5:16"},"nodeType":"YulFunctionCall","src":"7276:23:16"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"7258:14:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7330:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7315:3:16"},"nodeType":"YulFunctionCall","src":"7315:20:16"},{"kind":"number","nodeType":"YulLiteral","src":"7337:4:16","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7308:6:16"},"nodeType":"YulFunctionCall","src":"7308:34:16"},"nodeType":"YulExpressionStatement","src":"7308:34:16"},{"nodeType":"YulAssignment","src":"7351:62:16","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7377:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7397:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7408:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7393:3:16"},"nodeType":"YulFunctionCall","src":"7393:19:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7359:17:16"},"nodeType":"YulFunctionCall","src":"7359:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7351:4:16"}]}]},"name":"abi_encode_tuple_t_struct$_RandomWordsRequest_$2577_memory_ptr__to_t_struct$_RandomWordsRequest_$2577_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6793:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6804:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6815:4:16","type":""}],"src":"6651:768:16"},{"body":{"nodeType":"YulBlock","src":"7505:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"7551:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7560:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7563:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7553:6:16"},"nodeType":"YulFunctionCall","src":"7553:12:16"},"nodeType":"YulExpressionStatement","src":"7553:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7526:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7535:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7522:3:16"},"nodeType":"YulFunctionCall","src":"7522:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7547:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7518:3:16"},"nodeType":"YulFunctionCall","src":"7518:32:16"},"nodeType":"YulIf","src":"7515:52:16"},{"nodeType":"YulAssignment","src":"7576:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7592:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7586:5:16"},"nodeType":"YulFunctionCall","src":"7586:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7576:6:16"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7471:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7482:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7494:6:16","type":""}],"src":"7424:184:16"},{"body":{"nodeType":"YulBlock","src":"7740:136:16","statements":[{"nodeType":"YulAssignment","src":"7750:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7762:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7773:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7758:3:16"},"nodeType":"YulFunctionCall","src":"7758:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7750:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7792:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7785:6:16"},"nodeType":"YulFunctionCall","src":"7785:25:16"},"nodeType":"YulExpressionStatement","src":"7785:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:16"},"nodeType":"YulFunctionCall","src":"7826:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7850:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7858:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7846:3:16"},"nodeType":"YulFunctionCall","src":"7846:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7819:6:16"},"nodeType":"YulFunctionCall","src":"7819:51:16"},"nodeType":"YulExpressionStatement","src":"7819:51:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7701:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7712:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7720:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7731:4:16","type":""}],"src":"7613:263:16"},{"body":{"nodeType":"YulBlock","src":"8010:175:16","statements":[{"nodeType":"YulAssignment","src":"8020:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8032:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8043:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8028:3:16"},"nodeType":"YulFunctionCall","src":"8028:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8020:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"8055:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8073:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8078:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8069:3:16"},"nodeType":"YulFunctionCall","src":"8069:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"8082:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8065:3:16"},"nodeType":"YulFunctionCall","src":"8065:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8059:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8100:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8115:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8123:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8111:3:16"},"nodeType":"YulFunctionCall","src":"8111:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8093:6:16"},"nodeType":"YulFunctionCall","src":"8093:34:16"},"nodeType":"YulExpressionStatement","src":"8093:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8147:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8158:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8143:3:16"},"nodeType":"YulFunctionCall","src":"8143:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8167:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8175:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8163:3:16"},"nodeType":"YulFunctionCall","src":"8163:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8136:6:16"},"nodeType":"YulFunctionCall","src":"8136:43:16"},"nodeType":"YulExpressionStatement","src":"8136:43:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7971:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7982:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7990:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8001:4:16","type":""}],"src":"7881:304:16"},{"body":{"nodeType":"YulBlock","src":"8246:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8263:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8266:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8256:6:16"},"nodeType":"YulFunctionCall","src":"8256:14:16"},"nodeType":"YulExpressionStatement","src":"8256:14:16"},{"nodeType":"YulAssignment","src":"8279:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8297:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8300:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8287:9:16"},"nodeType":"YulFunctionCall","src":"8287:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8279:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8229:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8237:4:16","type":""}],"src":"8190:121:16"},{"body":{"nodeType":"YulBlock","src":"8397:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"8430:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8444:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8454:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8448:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8475:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"8479:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8468:6:16"},"nodeType":"YulFunctionCall","src":"8468:17:16"},"nodeType":"YulExpressionStatement","src":"8468:17:16"},{"nodeType":"YulVariableDeclaration","src":"8498:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8520:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"8524:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8510:9:16"},"nodeType":"YulFunctionCall","src":"8510:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8502:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8542:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8565:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8575:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8582:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"8594:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8578:3:16"},"nodeType":"YulFunctionCall","src":"8578:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8571:3:16"},"nodeType":"YulFunctionCall","src":"8571:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8561:3:16"},"nodeType":"YulFunctionCall","src":"8561:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8546:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8636:23:16","statements":[{"nodeType":"YulAssignment","src":"8638:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"8653:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8638:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8618:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"8630:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8615:2:16"},"nodeType":"YulFunctionCall","src":"8615:20:16"},"nodeType":"YulIf","src":"8612:47:16"},{"nodeType":"YulVariableDeclaration","src":"8672:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8686:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8696:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8703:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8708:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8699:3:16"},"nodeType":"YulFunctionCall","src":"8699:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8692:3:16"},"nodeType":"YulFunctionCall","src":"8692:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8682:3:16"},"nodeType":"YulFunctionCall","src":"8682:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8676:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8726:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8739:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8730:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8824:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8833:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8840:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8826:6:16"},"nodeType":"YulFunctionCall","src":"8826:17:16"},"nodeType":"YulExpressionStatement","src":"8826:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8774:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"8781:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8771:2:16"},"nodeType":"YulFunctionCall","src":"8771:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8785:26:16","statements":[{"nodeType":"YulAssignment","src":"8787:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8800:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8807:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8796:3:16"},"nodeType":"YulFunctionCall","src":"8796:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8787:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"8767:3:16","statements":[]},"src":"8763:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8413:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8418:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8410:2:16"},"nodeType":"YulFunctionCall","src":"8410:11:16"},"nodeType":"YulIf","src":"8407:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8369:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"8376:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8381:10:16","type":""}],"src":"8316:545:16"},{"body":{"nodeType":"YulBlock","src":"8951:81:16","statements":[{"nodeType":"YulAssignment","src":"8961:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8976:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8994:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"8997:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8990:3:16"},"nodeType":"YulFunctionCall","src":"8990:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9007:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9003:3:16"},"nodeType":"YulFunctionCall","src":"9003:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8986:3:16"},"nodeType":"YulFunctionCall","src":"8986:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8982:3:16"},"nodeType":"YulFunctionCall","src":"8982:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8972:3:16"},"nodeType":"YulFunctionCall","src":"8972:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9018:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9021:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9014:3:16"},"nodeType":"YulFunctionCall","src":"9014:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8969:2:16"},"nodeType":"YulFunctionCall","src":"8969:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8961:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8928:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"8934:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8942:4:16","type":""}],"src":"8866:166:16"},{"body":{"nodeType":"YulBlock","src":"9133:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9143:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9163:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9157:5:16"},"nodeType":"YulFunctionCall","src":"9157:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9147:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9210:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9212:16:16"},"nodeType":"YulFunctionCall","src":"9212:18:16"},"nodeType":"YulExpressionStatement","src":"9212:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9182:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9190:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9179:2:16"},"nodeType":"YulFunctionCall","src":"9179:30:16"},"nodeType":"YulIf","src":"9176:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9285:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9323:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9317:5:16"},"nodeType":"YulFunctionCall","src":"9317:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9291:25:16"},"nodeType":"YulFunctionCall","src":"9291:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"9331:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9241:43:16"},"nodeType":"YulFunctionCall","src":"9241:97:16"},"nodeType":"YulExpressionStatement","src":"9241:97:16"},{"nodeType":"YulVariableDeclaration","src":"9347:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9364:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9351:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9374:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9393:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9378:11:16","type":""}]},{"nodeType":"YulAssignment","src":"9406:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9419:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9406:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9476:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9490:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9509:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9521:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9517:3:16"},"nodeType":"YulFunctionCall","src":"9517:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9505:3:16"},"nodeType":"YulFunctionCall","src":"9505:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9494:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9538:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9582:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9552:29:16"},"nodeType":"YulFunctionCall","src":"9552:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9542:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9600:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9609:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9604:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9687:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9712:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9730:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9735:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9726:3:16"},"nodeType":"YulFunctionCall","src":"9726:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9720:5:16"},"nodeType":"YulFunctionCall","src":"9720:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9705:6:16"},"nodeType":"YulFunctionCall","src":"9705:42:16"},"nodeType":"YulExpressionStatement","src":"9705:42:16"},{"nodeType":"YulAssignment","src":"9764:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9778:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9786:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:16"},"nodeType":"YulFunctionCall","src":"9774:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9764:6:16"}]},{"nodeType":"YulAssignment","src":"9805:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9822:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9833:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9818:3:16"},"nodeType":"YulFunctionCall","src":"9818:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9805:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9634:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9637:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9631:2:16"},"nodeType":"YulFunctionCall","src":"9631:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9646:28:16","statements":[{"nodeType":"YulAssignment","src":"9648:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9657:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9660:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9653:3:16"},"nodeType":"YulFunctionCall","src":"9653:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9648:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"9627:3:16","statements":[]},"src":"9623:236:16"},{"body":{"nodeType":"YulBlock","src":"9907:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9925:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9952:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9957:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:16"},"nodeType":"YulFunctionCall","src":"9948:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9942:5:16"},"nodeType":"YulFunctionCall","src":"9942:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9929:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9992:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10004:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10031:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10034:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10027:3:16"},"nodeType":"YulFunctionCall","src":"10027:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"10043:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10023:3:16"},"nodeType":"YulFunctionCall","src":"10023:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10053:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10049:3:16"},"nodeType":"YulFunctionCall","src":"10049:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10019:3:16"},"nodeType":"YulFunctionCall","src":"10019:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10015:3:16"},"nodeType":"YulFunctionCall","src":"10015:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10000:3:16"},"nodeType":"YulFunctionCall","src":"10000:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9985:6:16"},"nodeType":"YulFunctionCall","src":"9985:74:16"},"nodeType":"YulExpressionStatement","src":"9985:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9878:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"9887:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9875:2:16"},"nodeType":"YulFunctionCall","src":"9875:19:16"},"nodeType":"YulIf","src":"9872:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10093:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10107:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10110:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10103:3:16"},"nodeType":"YulFunctionCall","src":"10103:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"10119:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10099:3:16"},"nodeType":"YulFunctionCall","src":"10099:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10086:6:16"},"nodeType":"YulFunctionCall","src":"10086:36:16"},"nodeType":"YulExpressionStatement","src":"10086:36:16"}]},"nodeType":"YulCase","src":"9469:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9474:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10149:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10163:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10176:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10167:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10212:67:16","statements":[{"nodeType":"YulAssignment","src":"10230:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10249:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10254:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:16"},"nodeType":"YulFunctionCall","src":"10245:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10239:5:16"},"nodeType":"YulFunctionCall","src":"10239:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10230:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10193:6:16"},"nodeType":"YulIf","src":"10190:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10299:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10358:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"10365:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10305:52:16"},"nodeType":"YulFunctionCall","src":"10305:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10292:6:16"},"nodeType":"YulFunctionCall","src":"10292:81:16"},"nodeType":"YulExpressionStatement","src":"10292:81:16"}]},"nodeType":"YulCase","src":"10141:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9449:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9457:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9446:2:16"},"nodeType":"YulFunctionCall","src":"9446:14:16"},"nodeType":"YulSwitch","src":"9439:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9118:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"9124:3:16","type":""}],"src":"9037:1352:16"},{"body":{"nodeType":"YulBlock","src":"10568:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10585:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10596:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10578:6:16"},"nodeType":"YulFunctionCall","src":"10578:21:16"},"nodeType":"YulExpressionStatement","src":"10578:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10619:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10630:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10615:3:16"},"nodeType":"YulFunctionCall","src":"10615:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10635:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10608:6:16"},"nodeType":"YulFunctionCall","src":"10608:30:16"},"nodeType":"YulExpressionStatement","src":"10608:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10658:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10669:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10654:3:16"},"nodeType":"YulFunctionCall","src":"10654:18:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10674:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10647:6:16"},"nodeType":"YulFunctionCall","src":"10647:52:16"},"nodeType":"YulExpressionStatement","src":"10647:52:16"},{"nodeType":"YulAssignment","src":"10708:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10720:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10731:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:16"},"nodeType":"YulFunctionCall","src":"10716:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10708:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10545:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10559:4:16","type":""}],"src":"10394:346:16"},{"body":{"nodeType":"YulBlock","src":"10902:227:16","statements":[{"nodeType":"YulAssignment","src":"10912:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10924:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10935:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10920:3:16"},"nodeType":"YulFunctionCall","src":"10920:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10912:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"10947:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10965:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10970:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10961:3:16"},"nodeType":"YulFunctionCall","src":"10961:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"10974:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10957:3:16"},"nodeType":"YulFunctionCall","src":"10957:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10951:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10992:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11007:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"11015:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11003:3:16"},"nodeType":"YulFunctionCall","src":"11003:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10985:6:16"},"nodeType":"YulFunctionCall","src":"10985:34:16"},"nodeType":"YulExpressionStatement","src":"10985:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11039:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11050:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:16"},"nodeType":"YulFunctionCall","src":"11035:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11059:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"11067:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11055:3:16"},"nodeType":"YulFunctionCall","src":"11055:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11028:6:16"},"nodeType":"YulFunctionCall","src":"11028:43:16"},"nodeType":"YulExpressionStatement","src":"11028:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11091:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11102:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:16"},"nodeType":"YulFunctionCall","src":"11087:18:16"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11111:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"11119:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11107:3:16"},"nodeType":"YulFunctionCall","src":"11107:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11080:6:16"},"nodeType":"YulFunctionCall","src":"11080:43:16"},"nodeType":"YulExpressionStatement","src":"11080:43:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10855:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10866:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10874:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10882:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10893:4:16","type":""}],"src":"10745:384:16"},{"body":{"nodeType":"YulBlock","src":"11308:168:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11325:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11336:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11318:6:16"},"nodeType":"YulFunctionCall","src":"11318:21:16"},"nodeType":"YulExpressionStatement","src":"11318:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11359:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11370:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11355:3:16"},"nodeType":"YulFunctionCall","src":"11355:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11375:2:16","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11348:6:16"},"nodeType":"YulFunctionCall","src":"11348:30:16"},"nodeType":"YulExpressionStatement","src":"11348:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11398:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11409:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11394:3:16"},"nodeType":"YulFunctionCall","src":"11394:18:16"},{"hexValue":"496e76616c69642072657175657374206964","kind":"string","nodeType":"YulLiteral","src":"11414:20:16","type":"","value":"Invalid request id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11387:6:16"},"nodeType":"YulFunctionCall","src":"11387:48:16"},"nodeType":"YulExpressionStatement","src":"11387:48:16"},{"nodeType":"YulAssignment","src":"11444:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11467:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11452:3:16"},"nodeType":"YulFunctionCall","src":"11452:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11444:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f5343873485c5c5ba9c972f367671af3745dc5cce720ddb197036ef7342b2b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11285:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11299:4:16","type":""}],"src":"11134:342:16"},{"body":{"nodeType":"YulBlock","src":"11575:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11585:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11605:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11599:5:16"},"nodeType":"YulFunctionCall","src":"11599:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11589:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11652:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11654:16:16"},"nodeType":"YulFunctionCall","src":"11654:18:16"},"nodeType":"YulExpressionStatement","src":"11654:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11624:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11632:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11621:2:16"},"nodeType":"YulFunctionCall","src":"11621:30:16"},"nodeType":"YulIf","src":"11618:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11727:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11765:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11759:5:16"},"nodeType":"YulFunctionCall","src":"11759:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11733:25:16"},"nodeType":"YulFunctionCall","src":"11733:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"11773:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"11683:43:16"},"nodeType":"YulFunctionCall","src":"11683:97:16"},"nodeType":"YulExpressionStatement","src":"11683:97:16"},{"nodeType":"YulVariableDeclaration","src":"11789:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11806:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11793:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11816:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11835:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"11820:11:16","type":""}]},{"nodeType":"YulAssignment","src":"11848:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"11861:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11848:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11918:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11932:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11951:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11963:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11959:3:16"},"nodeType":"YulFunctionCall","src":"11959:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11947:3:16"},"nodeType":"YulFunctionCall","src":"11947:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11936:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11980:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12024:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"11994:29:16"},"nodeType":"YulFunctionCall","src":"11994:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11984:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12042:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12051:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12046:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12129:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12154:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12172:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12177:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12168:3:16"},"nodeType":"YulFunctionCall","src":"12168:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12162:5:16"},"nodeType":"YulFunctionCall","src":"12162:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12147:6:16"},"nodeType":"YulFunctionCall","src":"12147:42:16"},"nodeType":"YulExpressionStatement","src":"12147:42:16"},{"nodeType":"YulAssignment","src":"12206:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12220:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12228:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:16"},"nodeType":"YulFunctionCall","src":"12216:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12206:6:16"}]},{"nodeType":"YulAssignment","src":"12247:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12264:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12275:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12260:3:16"},"nodeType":"YulFunctionCall","src":"12260:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12247:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12076:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12079:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12073:2:16"},"nodeType":"YulFunctionCall","src":"12073:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12088:28:16","statements":[{"nodeType":"YulAssignment","src":"12090:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12099:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12102:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:16"},"nodeType":"YulFunctionCall","src":"12095:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12090:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"12069:3:16","statements":[]},"src":"12065:236:16"},{"body":{"nodeType":"YulBlock","src":"12349:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12367:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12394:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12399:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12390:3:16"},"nodeType":"YulFunctionCall","src":"12390:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12384:5:16"},"nodeType":"YulFunctionCall","src":"12384:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12371:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12434:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12446:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12473:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12476:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12469:3:16"},"nodeType":"YulFunctionCall","src":"12469:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"12485:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12465:3:16"},"nodeType":"YulFunctionCall","src":"12465:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12495:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12491:3:16"},"nodeType":"YulFunctionCall","src":"12491:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12461:3:16"},"nodeType":"YulFunctionCall","src":"12461:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12457:3:16"},"nodeType":"YulFunctionCall","src":"12457:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12442:3:16"},"nodeType":"YulFunctionCall","src":"12442:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12427:6:16"},"nodeType":"YulFunctionCall","src":"12427:74:16"},"nodeType":"YulExpressionStatement","src":"12427:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12320:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12329:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12317:2:16"},"nodeType":"YulFunctionCall","src":"12317:19:16"},"nodeType":"YulIf","src":"12314:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12535:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12549:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12552:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12545:3:16"},"nodeType":"YulFunctionCall","src":"12545:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"12561:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12541:3:16"},"nodeType":"YulFunctionCall","src":"12541:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12528:6:16"},"nodeType":"YulFunctionCall","src":"12528:36:16"},"nodeType":"YulExpressionStatement","src":"12528:36:16"}]},"nodeType":"YulCase","src":"11911:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11916:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12591:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12605:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12618:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12609:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12654:67:16","statements":[{"nodeType":"YulAssignment","src":"12672:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12691:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12696:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12687:3:16"},"nodeType":"YulFunctionCall","src":"12687:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12681:5:16"},"nodeType":"YulFunctionCall","src":"12681:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12672:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12635:6:16"},"nodeType":"YulIf","src":"12632:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12741:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12800:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12807:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12747:52:16"},"nodeType":"YulFunctionCall","src":"12747:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12734:6:16"},"nodeType":"YulFunctionCall","src":"12734:81:16"},"nodeType":"YulExpressionStatement","src":"12734:81:16"}]},"nodeType":"YulCase","src":"12583:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11891:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11899:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11888:2:16"},"nodeType":"YulFunctionCall","src":"11888:14:16"},"nodeType":"YulSwitch","src":"11881:944:16"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11560:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"11566:3:16","type":""}],"src":"11481:1350:16"},{"body":{"nodeType":"YulBlock","src":"12933:1338:16","statements":[{"body":{"nodeType":"YulBlock","src":"12960:9:16","statements":[{"nodeType":"YulLeave","src":"12962:5:16"}]},"condition":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12949:4:16"},{"name":"src","nodeType":"YulIdentifier","src":"12955:3:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12946:2:16"},"nodeType":"YulFunctionCall","src":"12946:13:16"},"nodeType":"YulIf","src":"12943:26:16"},{"nodeType":"YulVariableDeclaration","src":"12978:51:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13024:3:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13018:5:16"},"nodeType":"YulFunctionCall","src":"13018:10:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12992:25:16"},"nodeType":"YulFunctionCall","src":"12992:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"12982:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13072:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13074:16:16"},"nodeType":"YulFunctionCall","src":"13074:18:16"},"nodeType":"YulExpressionStatement","src":"13074:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13044:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13052:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13041:2:16"},"nodeType":"YulFunctionCall","src":"13041:30:16"},"nodeType":"YulIf","src":"13038:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13147:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13185:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13179:5:16"},"nodeType":"YulFunctionCall","src":"13179:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13153:25:16"},"nodeType":"YulFunctionCall","src":"13153:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"13193:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13103:43:16"},"nodeType":"YulFunctionCall","src":"13103:97:16"},"nodeType":"YulExpressionStatement","src":"13103:97:16"},{"nodeType":"YulVariableDeclaration","src":"13209:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13226:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13213:9:16","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13273:741:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13287:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13306:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13318:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13314:3:16"},"nodeType":"YulFunctionCall","src":"13314:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13302:3:16"},"nodeType":"YulFunctionCall","src":"13302:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"13291:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13335:47:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13378:3:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"13348:29:16"},"nodeType":"YulFunctionCall","src":"13348:34:16"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"13339:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13395:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13439:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"13409:29:16"},"nodeType":"YulFunctionCall","src":"13409:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"13399:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13457:18:16","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"13466:9:16"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13461:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13545:194:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13570:6:16"},{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"13588:5:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13595:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:16"},"nodeType":"YulFunctionCall","src":"13584:21:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13578:5:16"},"nodeType":"YulFunctionCall","src":"13578:28:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13563:6:16"},"nodeType":"YulFunctionCall","src":"13563:44:16"},"nodeType":"YulExpressionStatement","src":"13563:44:16"},{"nodeType":"YulVariableDeclaration","src":"13624:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13634:1:16","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13628:2:16","type":""}]},{"nodeType":"YulAssignment","src":"13652:25:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13666:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13674:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13662:3:16"},"nodeType":"YulFunctionCall","src":"13662:15:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13652:6:16"}]},{"nodeType":"YulAssignment","src":"13694:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13711:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13722:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13707:3:16"},"nodeType":"YulFunctionCall","src":"13707:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13694:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13499:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13502:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13496:2:16"},"nodeType":"YulFunctionCall","src":"13496:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13511:21:16","statements":[{"nodeType":"YulAssignment","src":"13513:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13522:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"13525:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13518:3:16"},"nodeType":"YulFunctionCall","src":"13518:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13513:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"13492:3:16","statements":[]},"src":"13488:251:16"},{"body":{"nodeType":"YulBlock","src":"13787:168:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13805:45:16","value":{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"13832:5:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13839:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13828:3:16"},"nodeType":"YulFunctionCall","src":"13828:21:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13822:5:16"},"nodeType":"YulFunctionCall","src":"13822:28:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13809:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13874:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"13886:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13913:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"13916:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13909:3:16"},"nodeType":"YulFunctionCall","src":"13909:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"13925:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13905:3:16"},"nodeType":"YulFunctionCall","src":"13905:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13935:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13931:3:16"},"nodeType":"YulFunctionCall","src":"13931:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13901:3:16"},"nodeType":"YulFunctionCall","src":"13901:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13897:3:16"},"nodeType":"YulFunctionCall","src":"13897:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13882:3:16"},"nodeType":"YulFunctionCall","src":"13882:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13867:6:16"},"nodeType":"YulFunctionCall","src":"13867:74:16"},"nodeType":"YulExpressionStatement","src":"13867:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13758:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"13767:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13755:2:16"},"nodeType":"YulFunctionCall","src":"13755:19:16"},"nodeType":"YulIf","src":"13752:203:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13975:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13989:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"13992:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13985:3:16"},"nodeType":"YulFunctionCall","src":"13985:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"14001:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13981:3:16"},"nodeType":"YulFunctionCall","src":"13981:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13968:6:16"},"nodeType":"YulFunctionCall","src":"13968:36:16"},"nodeType":"YulExpressionStatement","src":"13968:36:16"}]},"nodeType":"YulCase","src":"13266:748:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13271:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14031:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14045:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14058:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14049:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14094:67:16","statements":[{"nodeType":"YulAssignment","src":"14112:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14131:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14136:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14127:3:16"},"nodeType":"YulFunctionCall","src":"14127:19:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14121:5:16"},"nodeType":"YulFunctionCall","src":"14121:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14112:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14075:6:16"},"nodeType":"YulIf","src":"14072:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14181:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14240:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"14247:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14187:52:16"},"nodeType":"YulFunctionCall","src":"14187:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14174:6:16"},"nodeType":"YulFunctionCall","src":"14174:81:16"},"nodeType":"YulExpressionStatement","src":"14174:81:16"}]},"nodeType":"YulCase","src":"14023:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13246:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13254:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13243:2:16"},"nodeType":"YulFunctionCall","src":"13243:14:16"},"nodeType":"YulSwitch","src":"13236:1029:16"}]},"name":"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12918:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"12924:3:16","type":""}],"src":"12836:1435:16"},{"body":{"nodeType":"YulBlock","src":"14450:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14467:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14478:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14460:6:16"},"nodeType":"YulFunctionCall","src":"14460:21:16"},"nodeType":"YulExpressionStatement","src":"14460:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14501:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14512:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14497:3:16"},"nodeType":"YulFunctionCall","src":"14497:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14517:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14490:6:16"},"nodeType":"YulFunctionCall","src":"14490:30:16"},"nodeType":"YulExpressionStatement","src":"14490:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14540:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14551:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14536:3:16"},"nodeType":"YulFunctionCall","src":"14536:18:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14556:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14529:6:16"},"nodeType":"YulFunctionCall","src":"14529:52:16"},"nodeType":"YulExpressionStatement","src":"14529:52:16"},{"nodeType":"YulAssignment","src":"14590:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14602:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14613:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14598:3:16"},"nodeType":"YulFunctionCall","src":"14598:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14590:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14427:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14441:4:16","type":""}],"src":"14276:346:16"},{"body":{"nodeType":"YulBlock","src":"14786:99:16","statements":[{"nodeType":"YulAssignment","src":"14796:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14808:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14819:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14804:3:16"},"nodeType":"YulFunctionCall","src":"14804:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14796:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14838:9:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14869:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14863:5:16"},"nodeType":"YulFunctionCall","src":"14863:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14856:6:16"},"nodeType":"YulFunctionCall","src":"14856:21:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14849:6:16"},"nodeType":"YulFunctionCall","src":"14849:29:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14831:6:16"},"nodeType":"YulFunctionCall","src":"14831:48:16"},"nodeType":"YulExpressionStatement","src":"14831:48:16"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2564_memory_ptr__to_t_struct$_ExtraArgsV1_$2564_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14755:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14766:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14777:4:16","type":""}],"src":"14627:258:16"},{"body":{"nodeType":"YulBlock","src":"14922:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14939:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14946:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14951:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14942:3:16"},"nodeType":"YulFunctionCall","src":"14942:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14932:6:16"},"nodeType":"YulFunctionCall","src":"14932:31:16"},"nodeType":"YulExpressionStatement","src":"14932:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14979:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14982:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14972:6:16"},"nodeType":"YulFunctionCall","src":"14972:15:16"},"nodeType":"YulExpressionStatement","src":"14972:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15003:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15006:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14996:6:16"},"nodeType":"YulFunctionCall","src":"14996:15:16"},"nodeType":"YulExpressionStatement","src":"14996:15:16"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"14890:127:16"},{"body":{"nodeType":"YulBlock","src":"15054:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15071:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15078:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15083:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15074:3:16"},"nodeType":"YulFunctionCall","src":"15074:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15064:6:16"},"nodeType":"YulFunctionCall","src":"15064:31:16"},"nodeType":"YulExpressionStatement","src":"15064:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15111:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15114:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15104:6:16"},"nodeType":"YulFunctionCall","src":"15104:15:16"},"nodeType":"YulExpressionStatement","src":"15104:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15135:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15138:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15128:6:16"},"nodeType":"YulFunctionCall","src":"15128:15:16"},"nodeType":"YulExpressionStatement","src":"15128:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15022:127:16"},{"body":{"nodeType":"YulBlock","src":"15186:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15203:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15210:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15215:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15206:3:16"},"nodeType":"YulFunctionCall","src":"15206:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15196:6:16"},"nodeType":"YulFunctionCall","src":"15196:31:16"},"nodeType":"YulExpressionStatement","src":"15196:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15243:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15246:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15236:6:16"},"nodeType":"YulFunctionCall","src":"15236:15:16"},"nodeType":"YulExpressionStatement","src":"15236:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15267:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15270:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15260:6:16"},"nodeType":"YulFunctionCall","src":"15260:15:16"},"nodeType":"YulExpressionStatement","src":"15260:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15154:127:16"},{"body":{"nodeType":"YulBlock","src":"15333:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"15364:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15366:16:16"},"nodeType":"YulFunctionCall","src":"15366:18:16"},"nodeType":"YulExpressionStatement","src":"15366:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15349:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15360:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15356:3:16"},"nodeType":"YulFunctionCall","src":"15356:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15346:2:16"},"nodeType":"YulFunctionCall","src":"15346:17:16"},"nodeType":"YulIf","src":"15343:43:16"},{"nodeType":"YulAssignment","src":"15395:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15406:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"15413:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15402:3:16"},"nodeType":"YulFunctionCall","src":"15402:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15395:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15315:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15325:3:16","type":""}],"src":"15286:135:16"},{"body":{"nodeType":"YulBlock","src":"15651:329:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15668:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15683:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15691:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15679:3:16"},"nodeType":"YulFunctionCall","src":"15679:31:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15661:6:16"},"nodeType":"YulFunctionCall","src":"15661:50:16"},"nodeType":"YulExpressionStatement","src":"15661:50:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15742:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15727:3:16"},"nodeType":"YulFunctionCall","src":"15727:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15747:3:16","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15720:6:16"},"nodeType":"YulFunctionCall","src":"15720:31:16"},"nodeType":"YulExpressionStatement","src":"15720:31:16"},{"nodeType":"YulAssignment","src":"15760:54:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15786:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15798:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15809:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15794:3:16"},"nodeType":"YulFunctionCall","src":"15794:19:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15768:17:16"},"nodeType":"YulFunctionCall","src":"15768:46:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15760:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15834:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15845:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15830:3:16"},"nodeType":"YulFunctionCall","src":"15830:18:16"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15854:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15862:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15850:3:16"},"nodeType":"YulFunctionCall","src":"15850:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15823:6:16"},"nodeType":"YulFunctionCall","src":"15823:47:16"},"nodeType":"YulExpressionStatement","src":"15823:47:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15901:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15886:3:16"},"nodeType":"YulFunctionCall","src":"15886:18:16"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15910:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15918:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15906:3:16"},"nodeType":"YulFunctionCall","src":"15906:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15879:6:16"},"nodeType":"YulFunctionCall","src":"15879:51:16"},"nodeType":"YulExpressionStatement","src":"15879:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15950:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15961:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15946:3:16"},"nodeType":"YulFunctionCall","src":"15946:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"15967:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15939:6:16"},"nodeType":"YulFunctionCall","src":"15939:35:16"},"nodeType":"YulExpressionStatement","src":"15939:35:16"}]},"name":"abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__to_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15588:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15599:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15607:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15615:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15623:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15631:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15642:4:16","type":""}],"src":"15426:554:16"},{"body":{"nodeType":"YulBlock","src":"16066:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"16112:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16121:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16124:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16114:6:16"},"nodeType":"YulFunctionCall","src":"16114:12:16"},"nodeType":"YulExpressionStatement","src":"16114:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16087:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16096:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16083:3:16"},"nodeType":"YulFunctionCall","src":"16083:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"16108:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16079:3:16"},"nodeType":"YulFunctionCall","src":"16079:32:16"},"nodeType":"YulIf","src":"16076:52:16"},{"nodeType":"YulAssignment","src":"16137:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16153:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16147:5:16"},"nodeType":"YulFunctionCall","src":"16147:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16137:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16032:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16043:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16055:6:16","type":""}],"src":"15985:184:16"},{"body":{"nodeType":"YulBlock","src":"16348:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16365:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16376:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16358:6:16"},"nodeType":"YulFunctionCall","src":"16358:21:16"},"nodeType":"YulExpressionStatement","src":"16358:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16399:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16410:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16395:3:16"},"nodeType":"YulFunctionCall","src":"16395:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16415:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16388:6:16"},"nodeType":"YulFunctionCall","src":"16388:30:16"},"nodeType":"YulExpressionStatement","src":"16388:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16438:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16449:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16434:3:16"},"nodeType":"YulFunctionCall","src":"16434:18:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"16454:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16427:6:16"},"nodeType":"YulFunctionCall","src":"16427:53:16"},"nodeType":"YulExpressionStatement","src":"16427:53:16"},{"nodeType":"YulAssignment","src":"16489:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16501:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16512:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16497:3:16"},"nodeType":"YulFunctionCall","src":"16497:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16489:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16325:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16339:4:16","type":""}],"src":"16174:347:16"},{"body":{"nodeType":"YulBlock","src":"16574:77:16","statements":[{"nodeType":"YulAssignment","src":"16584:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16595:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"16598:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16591:3:16"},"nodeType":"YulFunctionCall","src":"16591:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16584:3:16"}]},{"body":{"nodeType":"YulBlock","src":"16623:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16625:16:16"},"nodeType":"YulFunctionCall","src":"16625:18:16"},"nodeType":"YulExpressionStatement","src":"16625:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16615:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"16618:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16612:2:16"},"nodeType":"YulFunctionCall","src":"16612:10:16"},"nodeType":"YulIf","src":"16609:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16557:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"16560:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16566:3:16","type":""}],"src":"16526:125:16"},{"body":{"nodeType":"YulBlock","src":"16705:79:16","statements":[{"nodeType":"YulAssignment","src":"16715:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16727:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"16730:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16723:3:16"},"nodeType":"YulFunctionCall","src":"16723:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16715:4:16"}]},{"body":{"nodeType":"YulBlock","src":"16756:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16758:16:16"},"nodeType":"YulFunctionCall","src":"16758:18:16"},"nodeType":"YulExpressionStatement","src":"16758:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16747:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"16753:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16744:2:16"},"nodeType":"YulFunctionCall","src":"16744:11:16"},"nodeType":"YulIf","src":"16741:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16687:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"16690:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16696:4:16","type":""}],"src":"16656:128:16"},{"body":{"nodeType":"YulBlock","src":"16827:171:16","statements":[{"body":{"nodeType":"YulBlock","src":"16858:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16879:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16886:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16891:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16882:3:16"},"nodeType":"YulFunctionCall","src":"16882:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16872:6:16"},"nodeType":"YulFunctionCall","src":"16872:31:16"},"nodeType":"YulExpressionStatement","src":"16872:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16923:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16926:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16916:6:16"},"nodeType":"YulFunctionCall","src":"16916:15:16"},"nodeType":"YulExpressionStatement","src":"16916:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16951:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16954:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16944:6:16"},"nodeType":"YulFunctionCall","src":"16944:15:16"},"nodeType":"YulExpressionStatement","src":"16944:15:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16847:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16840:6:16"},"nodeType":"YulFunctionCall","src":"16840:9:16"},"nodeType":"YulIf","src":"16837:132:16"},{"nodeType":"YulAssignment","src":"16978:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16987:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"16990:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"16983:3:16"},"nodeType":"YulFunctionCall","src":"16983:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16978:1:16"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16812:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"16815:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16821:1:16","type":""}],"src":"16789:209:16"},{"body":{"nodeType":"YulBlock","src":"17055:116:16","statements":[{"nodeType":"YulAssignment","src":"17065:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17080:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"17083:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17076:3:16"},"nodeType":"YulFunctionCall","src":"17076:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"17065:7:16"}]},{"body":{"nodeType":"YulBlock","src":"17143:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17145:16:16"},"nodeType":"YulFunctionCall","src":"17145:18:16"},"nodeType":"YulExpressionStatement","src":"17145:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17114:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17107:6:16"},"nodeType":"YulFunctionCall","src":"17107:9:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17121:1:16"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"17128:7:16"},{"name":"x","nodeType":"YulIdentifier","src":"17137:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17124:3:16"},"nodeType":"YulFunctionCall","src":"17124:15:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17118:2:16"},"nodeType":"YulFunctionCall","src":"17118:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17104:2:16"},"nodeType":"YulFunctionCall","src":"17104:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17097:6:16"},"nodeType":"YulFunctionCall","src":"17097:45:16"},"nodeType":"YulIf","src":"17094:71:16"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17034:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"17037:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"17043:7:16","type":""}],"src":"17003:168:16"},{"body":{"nodeType":"YulBlock","src":"17240:358:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17250:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17265:1:16","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"17254:7:16","type":""}]},{"nodeType":"YulAssignment","src":"17275:16:16","value":{"name":"power_1","nodeType":"YulIdentifier","src":"17284:7:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17275:5:16"}]},{"nodeType":"YulAssignment","src":"17300:13:16","value":{"name":"_base","nodeType":"YulIdentifier","src":"17308:5:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17300:4:16"}]},{"body":{"nodeType":"YulBlock","src":"17364:228:16","statements":[{"body":{"nodeType":"YulBlock","src":"17409:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17411:16:16"},"nodeType":"YulFunctionCall","src":"17411:18:16"},"nodeType":"YulExpressionStatement","src":"17411:18:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17384:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17398:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17394:3:16"},"nodeType":"YulFunctionCall","src":"17394:6:16"},{"name":"base","nodeType":"YulIdentifier","src":"17402:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17390:3:16"},"nodeType":"YulFunctionCall","src":"17390:17:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17381:2:16"},"nodeType":"YulFunctionCall","src":"17381:27:16"},"nodeType":"YulIf","src":"17378:53:16"},{"body":{"nodeType":"YulBlock","src":"17470:29:16","statements":[{"nodeType":"YulAssignment","src":"17472:25:16","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"17485:5:16"},{"name":"base","nodeType":"YulIdentifier","src":"17492:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17481:3:16"},"nodeType":"YulFunctionCall","src":"17481:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17472:5:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17451:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"17461:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17447:3:16"},"nodeType":"YulFunctionCall","src":"17447:22:16"},"nodeType":"YulIf","src":"17444:55:16"},{"nodeType":"YulAssignment","src":"17512:23:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17524:4:16"},{"name":"base","nodeType":"YulIdentifier","src":"17530:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17520:3:16"},"nodeType":"YulFunctionCall","src":"17520:15:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17512:4:16"}]},{"nodeType":"YulAssignment","src":"17548:34:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"17564:7:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"17573:8:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17560:3:16"},"nodeType":"YulFunctionCall","src":"17560:22:16"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17548:8:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17333:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"17343:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17330:2:16"},"nodeType":"YulFunctionCall","src":"17330:21:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17352:3:16","statements":[]},"pre":{"nodeType":"YulBlock","src":"17326:3:16","statements":[]},"src":"17322:270:16"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"17204:5:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17211:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17224:5:16","type":""},{"name":"base","nodeType":"YulTypedName","src":"17231:4:16","type":""}],"src":"17176:422:16"},{"body":{"nodeType":"YulBlock","src":"17662:747:16","statements":[{"body":{"nodeType":"YulBlock","src":"17700:52:16","statements":[{"nodeType":"YulAssignment","src":"17714:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17723:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17714:5:16"}]},{"nodeType":"YulLeave","src":"17737:5:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17682:8:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17675:6:16"},"nodeType":"YulFunctionCall","src":"17675:16:16"},"nodeType":"YulIf","src":"17672:80:16"},{"body":{"nodeType":"YulBlock","src":"17785:52:16","statements":[{"nodeType":"YulAssignment","src":"17799:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17808:1:16","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17799:5:16"}]},{"nodeType":"YulLeave","src":"17822:5:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17771:4:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17764:6:16"},"nodeType":"YulFunctionCall","src":"17764:12:16"},"nodeType":"YulIf","src":"17761:76:16"},{"cases":[{"body":{"nodeType":"YulBlock","src":"17873:52:16","statements":[{"nodeType":"YulAssignment","src":"17887:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17896:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17887:5:16"}]},{"nodeType":"YulLeave","src":"17910:5:16"}]},"nodeType":"YulCase","src":"17866:59:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17871:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17941:123:16","statements":[{"body":{"nodeType":"YulBlock","src":"17976:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17978:16:16"},"nodeType":"YulFunctionCall","src":"17978:18:16"},"nodeType":"YulExpressionStatement","src":"17978:18:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17961:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"17971:3:16","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17958:2:16"},"nodeType":"YulFunctionCall","src":"17958:17:16"},"nodeType":"YulIf","src":"17955:43:16"},{"nodeType":"YulAssignment","src":"18011:25:16","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18024:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"18034:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18020:3:16"},"nodeType":"YulFunctionCall","src":"18020:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18011:5:16"}]},{"nodeType":"YulLeave","src":"18049:5:16"}]},"nodeType":"YulCase","src":"17934:130:16","value":{"kind":"number","nodeType":"YulLiteral","src":"17939:1:16","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"17853:4:16"},"nodeType":"YulSwitch","src":"17846:218:16"},{"body":{"nodeType":"YulBlock","src":"18162:70:16","statements":[{"nodeType":"YulAssignment","src":"18176:28:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18189:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"18195:8:16"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18185:3:16"},"nodeType":"YulFunctionCall","src":"18185:19:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18176:5:16"}]},{"nodeType":"YulLeave","src":"18217:5:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18086:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"18092:2:16","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18083:2:16"},"nodeType":"YulFunctionCall","src":"18083:12:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18100:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"18110:2:16","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18097:2:16"},"nodeType":"YulFunctionCall","src":"18097:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18079:3:16"},"nodeType":"YulFunctionCall","src":"18079:35:16"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18123:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"18129:3:16","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18120:2:16"},"nodeType":"YulFunctionCall","src":"18120:13:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18138:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"18148:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18135:2:16"},"nodeType":"YulFunctionCall","src":"18135:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18116:3:16"},"nodeType":"YulFunctionCall","src":"18116:36:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18076:2:16"},"nodeType":"YulFunctionCall","src":"18076:77:16"},"nodeType":"YulIf","src":"18073:159:16"},{"nodeType":"YulVariableDeclaration","src":"18241:57:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18283:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"18289:8:16"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"18264:18:16"},"nodeType":"YulFunctionCall","src":"18264:34:16"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"18245:7:16","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"18254:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"18343:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18345:16:16"},"nodeType":"YulFunctionCall","src":"18345:18:16"},"nodeType":"YulExpressionStatement","src":"18345:18:16"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18313:7:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18330:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18326:3:16"},"nodeType":"YulFunctionCall","src":"18326:6:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"18334:6:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18322:3:16"},"nodeType":"YulFunctionCall","src":"18322:19:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18310:2:16"},"nodeType":"YulFunctionCall","src":"18310:32:16"},"nodeType":"YulIf","src":"18307:58:16"},{"nodeType":"YulAssignment","src":"18374:29:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18387:7:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"18396:6:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18383:3:16"},"nodeType":"YulFunctionCall","src":"18383:20:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18374:5:16"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17633:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17639:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17652:5:16","type":""}],"src":"17603:806:16"},{"body":{"nodeType":"YulBlock","src":"18484:61:16","statements":[{"nodeType":"YulAssignment","src":"18494:45:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18524:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"18530:8:16"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"18503:20:16"},"nodeType":"YulFunctionCall","src":"18503:36:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18494:5:16"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"18455:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"18461:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"18474:5:16","type":""}],"src":"18414:131:16"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2448__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_struct$_RandomWordsRequest_$2577_memory_ptr__to_t_struct$_RandomWordsRequest_$2577_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        mstore(add(headStart, 96), and(mload(add(value0, 64)), 0xffff))\n        let memberValue0 := mload(add(value0, 96))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 128), and(memberValue0, _1))\n        mstore(add(headStart, 160), and(mload(add(value0, 128)), _1))\n        let memberValue0_1 := mload(add(value0, 160))\n        mstore(add(headStart, 0xc0), 0xc0)\n        tail := abi_encode_string(memberValue0_1, add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_0f5343873485c5c5ba9c972f367671af3745dc5cce720ddb197036ef7342b2b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid request id\")\n        tail := add(headStart, 96)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_string_storage(src)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2564_memory_ptr__to_t_struct$_ExtraArgsV1_$2564_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(mload(value0))))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__to_t_uint64_t_bytes_memory_ptr_t_uint16_t_uint32_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), 160)\n        tail := abi_encode_string(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"17":[{"length":32,"start":1316},{"length":32,"start":4131}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101cf5760003560e01c806385e1b15b11610104578063a321ccaa116100a2578063f2fde38b11610071578063f2fde38b1461044c578063f68016b71461045f578063f887ea401461046f578063fc2a88c31461048257600080fd5b8063a321ccaa146103f4578063b0fb162f1461040f578063b1e2174914610430578063cfd30a6e1461043957600080fd5b80638e84737f116100de5780638e84737f146103375780638ea981171461038b5780639eccacf61461039e578063a168fa89146103b157600080fd5b806385e1b15b146102ec5780638796ba8c146102ff5780638da5cb5b1461031257600080fd5b80633944ea3a11610171578063653721471161014b57806365372147146102b357806377452a2c146102bb57806379ba5097146102ce5780637ccfd7fc146102d657600080fd5b80633944ea3a1461029a5780634b0795a8146102a257806361728f39146102aa57600080fd5b80631ab0f2b3116101ad5780631ab0f2b3146102395780631fe543e31461024f57806324f74697146102625780632e0a58901461028757600080fd5b8063020dbb9b146101d457806309c1ba2e146101f25780630ca7617514610224575b600080fd5b6101dc61048b565b6040516101e9919061175c565b60405180910390f35b60025461020c90600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101e9565b61023761023236600461181a565b610519565b005b61024161059d565b6040519081526020016101e9565b61023761025d366004611886565b610785565b6012546102729063ffffffff1681565b60405163ffffffff90911681526020016101e9565b6101dc610295366004611904565b6107cf565b6101dc6107e8565b6101dc6107f5565b610241600e5481565b6101dc610802565b6102376102c936600461192d565b61080f565b610237610827565b600f546102729062010000900463ffffffff1681565b6102416102fa366004611904565b6108d1565b61024161030d36600461197d565b610a4d565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b61036c61034536600461197d565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016101e9565b610237610399366004611904565b610a6e565b60025461031f906001600160a01b031681565b6103dd6103bf36600461197d565b600d6020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016101e9565b60125461031f9064010000000090046001600160a01b031681565b600f5461041d9061ffff1681565b60405161ffff90911681526020016101e9565b61024160095481565b6101dc61044736600461197d565b610b60565b61023761045a366004611904565b610b8b565b6008546102729063ffffffff1681565b60065461031f906001600160a01b031681565b61024160115481565b6013805461049890611996565b80601f01602080910402602001604051908101604052809291908181526020018280546104c490611996565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105625760405163c6829f8360e01b815260040160405180910390fd5b61056d838383610b9f565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b60006105a7610c73565b6002546040805160c081018252600e5481526001600160401b03600160a01b840416602080830191909152600f5461ffff81168385015260125463ffffffff9081166060850152620100009091041660808301528251908101909252600082526001600160a01b0390921691639b1c385e9160a082019061062790610cc8565b8152506040518263ffffffff1660e01b815260040161064691906119d0565b6020604051808303816000875af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190611a2d565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600d83529590932084518154945161ffff1990951690151561ff001916176101009415159490940293909317835593518051959650929491936106fe9391850192910190611681565b5050601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201829055506011819055600f54604080518381526201000090920463ffffffff1660208301527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b6002546001600160a01b031633146107ca5760025460405163073e64fd60e21b81523360048201526001600160a01b0390911660248201526044015b60405180910390fd5b505050565b6005602052600090815260409020805461049890611996565b600a805461049890611996565b600b805461049890611996565b600c805461049890611996565b610817610c73565b60136108238282611a94565b5050565b6001546001600160a01b0316331461087a5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016107c1565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60006108db610c73565b61091c6040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6109b96013805461092c90611996565b80601f016020809104026020016040519081016040528092919081815260200182805461095890611996565b80156109a55780601f1061097a576101008083540402835291602001916109a5565b820191906000526020600020905b81548152906001019060200180831161098857829003601f168201915b505050505082610d3990919063ffffffff16565b6109ee6109c582610d46565b600254600854600754600160a01b9092046001600160401b03169163ffffffff9091169061101e565b60098181556040805180820182526001600160a01b03808816825260016020808401918252600096875260049052929094209051815492511515600160a01b026001600160a81b03199093169416939093171790915554915050919050565b60108181548110610a5d57600080fd5b600091825260209091200154905081565b6000546001600160a01b03163314801590610a9457506002546001600160a01b03163314155b15610ae55733610aac6000546001600160a01b031690565b60025460405163061db9c160e01b81526001600160a01b03938416600482015291831660248301529190911660448201526064016107c1565b6001600160a01b038116610b0c5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be69060200160405180910390a150565b60038181548110610b7057600080fd5b90600052602060002001600091509050805461049890611996565b610b93610c73565b610b9c816110f0565b50565b600083815260046020526040902054600160a01b900460ff161515600114610bfe5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064016107c1565b600b610c0a8282611a94565b506000838152600460205260409020805460ff60a01b19169055600a610c308382611a94565b50600c610c3d8382611a94565b506000838152600460209081526040808320546001600160a01b0316835260059091529020610c6d600c82611b53565b50505050565b6000546001600160a01b03163314610cc65760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016107c1565b565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401610d0191511515815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915292915050565b6108238260008084611199565b60606000610d55610100611217565b9050610d8e6040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b8152508261123890919063ffffffff16565b8251610dac906002811115610da557610da5611c2d565b8290611251565b6040805180820190915260088152676c616e677561676560c01b6020820152610dd6908290611238565b6040830151610ded908015610da557610da5611c2d565b604080518082019091526006815265736f7572636560d01b6020820152610e15908290611238565b6060830151610e25908290611238565b60a08301515115610eb9576040805180820190915260048152636172677360e01b6020820152610e56908290611238565b610e5f8161128a565b60005b8360a0015151811015610eaf57610e9f8460a001518281518110610e8857610e88611c43565b60200260200101518361123890919063ffffffff16565b610ea881611c6f565b9050610e62565b50610eb9816112ae565b60808301515115610f7d57600083602001516002811115610edc57610edc611c2d565b03610efa5760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152610f2b908290611238565b610f4483602001516002811115610da557610da5611c2d565b6040805180820190915260078152667365637265747360c81b6020820152610f6d908290611238565b6080830151610f7d9082906112cc565b60c083015151156110165760408051808201909152600981526862797465734172677360b81b6020820152610fb3908290611238565b610fbc8161128a565b60005b8360c001515181101561100c57610ffc8460c001518281518110610fe557610fe5611c43565b6020026020010151836112cc90919063ffffffff16565b61100581611c6f565b9050610fbf565b50611016816112ae565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b8152600401611076959493929190611c88565b6020604051808303816000875af1158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611a2d565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b336001600160a01b038216036111485760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016107c1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516000036111bb576040516322ce3edd60e01b815260040160405180910390fd5b838360028111156111ce576111ce611c2d565b908160028111156111e1576111e1611c2d565b905250604084018280156111f7576111f7611c2d565b9081801561120757611207611c2d565b9052506060909301929092525050565b61121f6116cc565b805161122b90836112d9565b5060006020820152919050565b6112458260038351611353565b81516107ca908261146c565b815161125e9060c2611494565b50610823828260405160200161127691815260200190565b6040516020818303038152906040526112cc565b6112958160046114fd565b6001816020018181516112a89190611cd1565b90525050565b6112b98160076114fd565b6001816020018181516112a89190611ce4565b6112458260028351611353565b6040805180820190915260608152600060208201526112f9602083611cf7565b1561132157611309602083611cf7565b611314906020611ce4565b61131e9083611cd1565b91505b60208084018390526040518085526000815290818401018181101561134557600080fd5b604052508290505b92915050565b6017816001600160401b031611611379578251610c6d9060e0600585901b168317611494565b60ff816001600160401b0316116113b95782516113a1906018611fe0600586901b1617611494565b508251610c6d906001600160401b0383166001611514565b61ffff816001600160401b0316116113fa5782516113e2906019611fe0600586901b1617611494565b508251610c6d906001600160401b0383166002611514565b63ffffffff816001600160401b03161161143d57825161142590601a611fe0600586901b1617611494565b508251610c6d906001600160401b0383166004611514565b825161145490601b611fe0600586901b1617611494565b508251610c6d906001600160401b0383166008611514565b60408051808201909152606081526000602082015261148d83838451611599565b9392505050565b60408051808201909152606081526000602082015282515160006114b9826001611cd1565b9050846020015182106114da576114da856114d5836002611d19565b61166a565b84516020838201018581535080518211156114f3578181525b5093949350505050565b81516107ca90601f611fe0600585901b1617611494565b60408051808201909152606081526000602082015283515160006115388285611cd1565b9050856020015181111561155557611555866114d5836002611d19565b6000600161156586610100611e14565b61156f9190611ce4565b9050865182810187831982511617815250805183111561158d578281525b50959695505050505050565b60408051808201909152606081526000602082015282518211156115bc57600080fd5b83515160006115cb8483611cd1565b905085602001518111156115e8576115e8866114d5836002611d19565b855180518382016020019160009180851115611602578482525b505050602086015b602086106116425780518252611621602083611cd1565b915061162e602082611cd1565b905061163b602087611ce4565b955061160a565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b815161167683836112d9565b50610c6d838261146c565b8280548282559060005260206000209081019282156116bc579160200282015b828111156116bc5782518255916020019190600101906116a1565b506116c8929150611701565b5090565b60405180604001604052806116f4604051806040016040528060608152602001600081525090565b8152602001600081525090565b5b808211156116c85760008155600101611702565b6000815180845260005b8181101561173c57602081850181015186830182015201611720565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061148d6020830184611716565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561179f5761179f61176f565b604051601f8501601f19908116603f011681019082821181831017156117c7576117c761176f565b816040528093508581528686860111156117e057600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261180b57600080fd5b61148d83833560208501611785565b60008060006060848603121561182f57600080fd5b8335925060208401356001600160401b038082111561184d57600080fd5b611859878388016117fa565b9350604086013591508082111561186f57600080fd5b5061187c868287016117fa565b9150509250925092565b60008060006040848603121561189b57600080fd5b8335925060208401356001600160401b03808211156118b957600080fd5b818601915086601f8301126118cd57600080fd5b8135818111156118dc57600080fd5b8760208260051b85010111156118f157600080fd5b6020830194508093505050509250925092565b60006020828403121561191657600080fd5b81356001600160a01b038116811461148d57600080fd5b60006020828403121561193f57600080fd5b81356001600160401b0381111561195557600080fd5b8201601f8101841361196657600080fd5b61197584823560208401611785565b949350505050565b60006020828403121561198f57600080fd5b5035919050565b600181811c908216806119aa57607f821691505b6020821081036119ca57634e487b7160e01b600052602260045260246000fd5b50919050565b60208152815160208201526020820151604082015261ffff60408301511660608201526000606083015163ffffffff80821660808501528060808601511660a0850152505060a083015160c08084015261197560e0840182611716565b600060208284031215611a3f57600080fd5b5051919050565b601f8211156107ca57600081815260208120601f850160051c81016020861015611a6d5750805b601f850160051c820191505b81811015611a8c57828155600101611a79565b505050505050565b81516001600160401b03811115611aad57611aad61176f565b611ac181611abb8454611996565b84611a46565b602080601f831160018114611af65760008415611ade5750858301515b600019600386901b1c1916600185901b178555611a8c565b600085815260208120601f198616915b82811015611b2557888601518255948401946001909101908401611b06565b5085821015611b435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103611b5e575050565b611b688254611996565b6001600160401b03811115611b7f57611b7f61176f565b611b8d81611abb8454611996565b6000601f821160018114611bc15760008315611ba95750848201545b600019600385901b1c1916600184901b178455611c26565b600085815260209020601f19841690600086815260209020845b83811015611bfb5782860154825560019586019590910190602001611bdb565b5085831015611c195781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c8157611c81611c59565b5060010190565b6001600160401b038616815260a060208201526000611caa60a0830187611716565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b8082018082111561134d5761134d611c59565b8181038181111561134d5761134d611c59565b600082611d1457634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761134d5761134d611c59565b600181815b80851115611d6b578160001904821115611d5157611d51611c59565b80851615611d5e57918102915b93841c9390800290611d35565b509250929050565b600082611d825750600161134d565b81611d8f5750600061134d565b8160018114611da55760028114611daf57611dcb565b600191505061134d565b60ff841115611dc057611dc0611c59565b50506001821b61134d565b5060208310610133831016604e8410600b8410161715611dee575081810a61134d565b611df88383611d30565b8060001904821115611e0c57611e0c611c59565b029392505050565b600061148d8383611d7356fea2646970667358221220702b8ac0223405455c0e737665d3801969ce04a0aad32afac97648c8d82098b364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E1B15B GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA321CCAA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xFC2A88C3 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA321CCAA EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB1E21749 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCFD30A6E EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E84737F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8E84737F EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xA168FA89 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85E1B15B EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3944EA3A GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x65372147 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x65372147 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x77452A2C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3944EA3A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x4B0795A8 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1AB0F2B3 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1AB0F2B3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x2E0A5890 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20DBB9B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xCA76175 EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x20C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x272 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x241 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x802 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST PUSH2 0x237 PUSH2 0x827 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x272 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x31F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x31F SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x41D SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x197D JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x272 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x31F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x511 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56D DUP4 DUP4 DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0xE SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xF SLOAD PUSH2 0xFFFF DUP2 AND DUP4 DUP6 ADD MSTORE PUSH1 0x12 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9B1C385E SWAP2 PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x627 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP5 DUP2 MSTORE DUP1 DUP4 ADD DUP8 MSTORE DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP6 MSTORE PUSH1 0xD DUP4 MSTORE SWAP6 SWAP1 SWAP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP6 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH2 0x6FE SWAP4 SWAP2 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD DUP3 SWAP1 SSTORE POP PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CA JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x817 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x823 DUP3 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DB PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x91C PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x13 DUP1 SLOAD PUSH2 0x92C SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x958 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x97A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x988 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 PUSH2 0xD39 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x9C5 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP3 SWAP1 SWAP5 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SWAP2 SSTORE SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA94 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xAE5 JUMPI CALLER PUSH2 0xAAC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0x10F0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0xB PUSH2 0xC0A DUP3 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0xA PUSH2 0xC30 DUP4 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0xC PUSH2 0xC3D DUP4 DUP3 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xC6D PUSH1 0xC DUP3 PUSH2 0x1B53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD01 SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP3 PUSH1 0x0 DUP1 DUP5 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD55 PUSH2 0x100 PUSH2 0x1217 JUMP JUMPDEST SWAP1 POP PUSH2 0xD8E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP3 PUSH2 0x1238 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xDAC SWAP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDD6 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xDED SWAP1 DUP1 ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE15 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE25 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE56 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xE9F DUP5 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1238 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xE62 JUMP JUMPDEST POP PUSH2 0xEB9 DUP2 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEDC PUSH2 0x1C2D JUMP JUMPDEST SUB PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF2B SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xF44 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF6D SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xF7D SWAP1 DUP3 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD MLOAD ISZERO PUSH2 0x1016 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFB3 SWAP1 DUP3 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xFBC DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0xC0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH2 0xFFC DUP5 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFE5 JUMPI PUSH2 0xFE5 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xFBF JUMP JUMPDEST POP PUSH2 0x1016 DUP2 PUSH2 0x12AE JUMP JUMPDEST MLOAD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x461D2762 DUP7 DUP9 PUSH1 0x1 DUP9 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1076 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CE PUSH2 0x1C2D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP5 ADD DUP3 DUP1 ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F7 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 DUP2 DUP1 ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1207 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x121F PUSH2 0x16CC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x122B SWAP1 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1245 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1353 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x7CA SWAP1 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP2 MLOAD PUSH2 0x125E SWAP1 PUSH1 0xC2 PUSH2 0x1494 JUMP JUMPDEST POP PUSH2 0x823 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1276 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x1295 DUP2 PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12B9 DUP2 PUSH1 0x7 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0x1245 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12F9 PUSH1 0x20 DUP4 PUSH2 0x1CF7 JUMP JUMPDEST ISZERO PUSH2 0x1321 JUMPI PUSH2 0x1309 PUSH1 0x20 DUP4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x1314 SWAP1 PUSH1 0x20 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0x131E SWAP1 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 DUP5 ADD ADD DUP2 DUP2 LT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1379 JUMPI DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x1494 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x13B9 JUMPI DUP3 MLOAD PUSH2 0x13A1 SWAP1 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x13FA JUMPI DUP3 MLOAD PUSH2 0x13E2 SWAP1 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x2 PUSH2 0x1514 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x143D JUMPI DUP3 MLOAD PUSH2 0x1425 SWAP1 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x4 PUSH2 0x1514 JUMP JUMPDEST DUP3 MLOAD PUSH2 0x1454 SWAP1 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0xC6D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x8 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x148D DUP4 DUP4 DUP5 MLOAD PUSH2 0x1599 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD MLOAD PUSH1 0x0 PUSH2 0x14B9 DUP3 PUSH1 0x1 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x20 ADD MLOAD DUP3 LT PUSH2 0x14DA JUMPI PUSH2 0x14DA DUP6 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP4 DUP3 ADD ADD DUP6 DUP2 MSTORE8 POP DUP1 MLOAD DUP3 GT ISZERO PUSH2 0x14F3 JUMPI DUP2 DUP2 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x7CA SWAP1 PUSH1 0x1F PUSH2 0x1FE0 PUSH1 0x5 DUP6 SWAP1 SHL AND OR PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x1538 DUP3 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1555 DUP7 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1565 DUP7 PUSH2 0x100 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x156F SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP DUP7 MLOAD DUP3 DUP2 ADD DUP8 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP4 GT ISZERO PUSH2 0x158D JUMPI DUP3 DUP2 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x15BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x15CB DUP5 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x15E8 JUMPI PUSH2 0x15E8 DUP7 PUSH2 0x14D5 DUP4 PUSH1 0x2 PUSH2 0x1D19 JUMP JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP4 DUP3 ADD PUSH1 0x20 ADD SWAP2 PUSH1 0x0 SWAP2 DUP1 DUP6 GT ISZERO PUSH2 0x1602 JUMPI DUP5 DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP7 ADD JUMPDEST PUSH1 0x20 DUP7 LT PUSH2 0x1642 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1621 PUSH1 0x20 DUP4 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E PUSH1 0x20 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x163B PUSH1 0x20 DUP8 PUSH2 0x1CE4 JUMP JUMPDEST SWAP6 POP PUSH2 0x160A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP9 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP5 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1676 DUP4 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xC6D DUP4 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x16BC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16A1 JUMP JUMPDEST POP PUSH2 0x16C8 SWAP3 SWAP2 POP PUSH2 0x1701 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x16F4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1720 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x148D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1716 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH2 0x179F JUMPI PUSH2 0x179F PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C7 PUSH2 0x176F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x17E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x180B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1859 DUP8 DUP4 DUP9 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187C DUP7 DUP3 DUP8 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1975 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1785 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x19AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH2 0x1975 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A6D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A8C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAD PUSH2 0x176F JUMP JUMPDEST PUSH2 0x1AC1 DUP2 PUSH2 0x1ABB DUP5 SLOAD PUSH2 0x1996 JUMP JUMPDEST DUP5 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1AF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1ADE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1B5E JUMPI POP POP JUMP JUMPDEST PUSH2 0x1B68 DUP3 SLOAD PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7F PUSH2 0x176F JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1ABB DUP5 SLOAD PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BA9 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFB JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x1BDB JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x1C19 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C81 JUMPI PUSH2 0x1C81 PUSH2 0x1C59 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CAA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D14 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1D6B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D51 JUMPI PUSH2 0x1D51 PUSH2 0x1C59 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1D5E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1D35 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D82 JUMPI POP PUSH1 0x1 PUSH2 0x134D JUMP JUMPDEST DUP2 PUSH2 0x1D8F JUMPI POP PUSH1 0x0 PUSH2 0x134D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1DA5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1DAF JUMPI PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x134D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DC0 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x134D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1DEE JUMPI POP DUP2 DUP2 EXP PUSH2 0x134D JUMP JUMPDEST PUSH2 0x1DF8 DUP4 DUP4 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C59 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP4 DUP4 PUSH2 0x1D73 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x2B8AC0223405455C0E737665D3801969CE DIV LOG0 0xAA 0xD3 0x2A STATICCALL 0xC9 PUSH23 0x48C8D82098B364736F6C63430008140033000000000000 ","sourceMap":"570:4956:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:764;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:33;;;;;-1:-1:-1;;;960:33:15;;-1:-1:-1;;;;;960:33:15;;;;;;-1:-1:-1;;;;;829:31:16;;;811:50;;799:2;784:18;960:33:15;667:200:16;2078:286:0;;;;;;:::i;:::-;;:::i;:::-;;3467:883:15;;;:::i;:::-;;;2623:25:16;;;2611:2;2596:18;3467:883:15;2477:177:16;7489:280:10;;;;;;:::i;:::-;;:::i;2080:39:15:-;;;;;;;;;;;;3521:10:16;3509:23;;;3491:42;;3479:2;3464:18;2080:39:15;3347:192:16;1161:53:15;;;;;;:::i;:::-;;:::i;1641:27::-;;;:::i;1675:24::-;;;:::i;1827:99::-;;;;;;1706:20;;;:::i;3370:91::-;;;;;;:::i;:::-;;:::i;1026:316:6:-;;;:::i;1978:26:15:-;;;;;;;;;;;;4356:546;;;;;;:::i;:::-;;:::i;2011:27::-;;;;;;:::i;:::-;;:::i;1382:81:6:-;1429:7;1451;-1:-1:-1;;;;;1451:7:6;1382:81;;;-1:-1:-1;;;;;5044:32:16;;;5026:51;;5014:2;4999:18;1382:81:6;4880:203:16;1085:69:15;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1085:69:15;;;-1:-1:-1;;;1085:69:15;;;;;;;;;;-1:-1:-1;;;;;5459:32:16;;;5441:51;;5535:14;;5528:22;5523:2;5508:18;;5501:50;5414:18;1085:69:15;5273:284:16;7831:276:10;;;;;;:::i;:::-;;:::i;6077:45::-;;;;;-1:-1:-1;;;;;6077:45:10;;;1769:51:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5987:14:16;;5980:22;5962:41;;6046:14;;6039:22;6034:2;6019:18;;6012:50;5935:18;1769:51:15;5800:268:16;2126:86:15;;;;;;;;-1:-1:-1;;;;;2126:86:15;;;1933:38;;;;;;;;;;;;6247:6:16;6235:19;;;6217:38;;6205:2;6190:18;1933:38:15;6073:188:16;1604:30:15;;;;;;1042:36;;;;;;:::i;:::-;;:::i;847:98:6:-;;;;;;:::i;:::-;;:::i;1566:31:15:-;;;;;;;;;1296:66;;;;;-1:-1:-1;;;;;1296:66:15;;;2045:28;;;;;;2491:764;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2078:286:0:-;2199:10;-1:-1:-1;;;;;2221:8:0;2199:31;;2195:81;;2247:22;;-1:-1:-1;;;2247:22:0;;;;;;;;;;;2195:81;2281:40;2296:9;2307:8;2317:3;2281:14;:40::i;:::-;2332:27;;2349:9;;2332:27;;;;;2078:286;;;:::o;3467:883:15:-;3522:17;2075:20:6;:18;:20::i;:::-;3563:16:15::1;::::0;3612:419:::1;::::0;;::::1;::::0;::::1;::::0;;3674:7:::1;::::0;3612:419;;-1:-1:-1;;;;;;;;3706:14:15;::::1;;3612:419;::::0;;::::1;::::0;;;;3760:20:::1;::::0;::::1;::::0;::::1;3612:419:::0;;;;3816:16:::1;::::0;::::1;::::0;;::::1;3612:419:::0;;;;3860:8;;;::::1;;3612:419:::0;;;;3947:51;;;;::::1;::::0;;;3563:16:::1;3947:51:::0;;-1:-1:-1;;;;;3563:16:15;;::::1;::::0;:35:::1;::::0;3612:419;;;;3897:119:::1;::::0;:28:::1;:119::i;:::-;3612:419;;::::0;3563:478:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4075:124;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4075:124:15;;;;::::1;::::0;;::::1;::::0;;;4116:16;;;;;;;::::1;::::0;;4075:124;;;;;;4051:21;;;:10:::1;:21:::0;;;;;;:148;;;;;;-1:-1:-1;;4051:148:15;;;;::::1;;-1:-1:-1::0;;4051:148:15;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;3551:490;;-1:-1:-1;4075:124:15;;4051:21;;:148:::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;4209:10:15::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4209:26:15;;;;;::::1;::::0;;;-1:-1:-1;4245:13:15::1;:25:::0;;;4308:8:::1;::::0;4285:32:::1;::::0;;7785:25:16;;;4308:8:15;;;::::1;;;7841:2:16::0;7826:18;;7819:51;4285:32:15::1;::::0;7758:18:16;4285:32:15::1;;;;;;;3467:883:::0;:::o;7489:280:10:-;7612:16;;-1:-1:-1;;;;;7612:16:10;7590:10;:39;7586:131;;7692:16;;7646:64;;-1:-1:-1;;;7646:64:10;;7672:10;7646:64;;;8093:34:16;-1:-1:-1;;;;;7692:16:10;;;8143:18:16;;;8136:43;8028:18;;7646:64:10;;;;;;;;7586:131;7489:280;;;:::o;1161:53:15:-;;;;;;;;;;;;;;;;:::i;1641:27::-;;;;;;;:::i;1675:24::-;;;;;;;:::i;1706:20::-;;;;;;;:::i;3370:91::-;2075:20:6;:18;:20::i;:::-;3440:10:15::1;:14;3453:1:::0;3440:10;:14:::1;:::i;:::-;;3370:91:::0;:::o;1026:316:6:-;1150:14;;-1:-1:-1;;;;;1150:14:6;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:6;;10596:2:16;1128:63:6;;;10578:21:16;10635:2;10615:18;;;10608:30;-1:-1:-1;;;10654:18:16;;;10647:52;10716:18;;1128:63:6;10394:346:16;1128:63:6;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:6;;;;;;;-1:-1:-1;1256:27:6;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:6;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;4356:546:15:-;4439:17;2075:20:6;:18;:20::i;:::-;4468:35:15::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4468:35:15::1;4513:52;4554:10;4513:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:40;;:52;;;;:::i;:::-;4594:121;4620:16;:3;:14;:16::i;:::-;4650:14;::::0;4678:8:::1;::::0;4700:5:::1;::::0;-1:-1:-1;;;4650:14:15;;::::1;-1:-1:-1::0;;;;;4650:14:15::1;::::0;4678:8:::1;::::0;;::::1;::::0;4594:12:::1;:121::i;:::-;4576:15;:139:::0;;;4761:102:::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4761:102:15;;::::1;::::0;;4848:4:::1;4761:102;::::0;;::::1;::::0;;;-1:-1:-1;4725:33:15;;;:16:::1;:33:::0;;;;;;:138;;;;;;::::1;;-1:-1:-1::0;;;4725:138:15::1;-1:-1:-1::0;;;;;;4725:138:15;;;;::::1;::::0;;;;::::1;::::0;;;4880:15;;-1:-1:-1;;4356:546:15;;;:::o;2011:27::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:27:15;:::o;7831:276:10:-;1429:7:6;1451;-1:-1:-1;;;;;1451:7:6;8155:10:10;:21;;;;:64;;-1:-1:-1;8202:16:10;;-1:-1:-1;;;;;8202:16:10;8180:10;:39;;8155:64;8151:162;;;8259:10;8271:7;1429::6;1451;-1:-1:-1;;;;;1451:7:6;;1382:81;8271:7:10;8288:16;;8236:70;;-1:-1:-1;;;8236:70:10;;-1:-1:-1;;;;;11003:15:16;;;8236:70:10;;;10985:34:16;11055:15;;;11035:18;;;11028:43;8288:16:10;;;;11087:18:16;;;11080:43;10920:18;;8236:70:10;10745:384:16;8151:162:10;-1:-1:-1;;;;;7931:29:10;::::1;7927:70;;7977:13;;-1:-1:-1::0;;;7977:13:10::1;;;;;;;;;;;7927:70;8002:16;:57:::0;;-1:-1:-1;;;;;;8002:57:10::1;-1:-1:-1::0;;;;;8002:57:10;::::1;::::0;;::::1;::::0;;;8071:31:::1;::::0;5026:51:16;;;8071:31:10::1;::::0;5014:2:16;4999:18;8071:31:10::1;;;;;;;7831:276:::0;:::o;1042:36:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;847:98:6:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;4908:489:15:-;5071:27;;;;:16;:27;;;;;:37;-1:-1:-1;;;5071:37:15;;;;:45;;5112:4;5071:45;5050:110;;;;-1:-1:-1;;;5050:110:15;;11336:2:16;5050:110:15;;;11318:21:16;11375:2;11355:18;;;11348:30;-1:-1:-1;;;11394:18:16;;;11387:48;11452:18;;5050:110:15;11134:342:16;5050:110:15;5170:11;:17;5184:3;5170:11;:17;:::i;:::-;-1:-1:-1;5237:5:15;5197:27;;;:16;:27;;;;;:45;;-1:-1:-1;;;;5197:45:15;;;5252:14;:25;5269:8;5252:14;:25;:::i;:::-;-1:-1:-1;5287:6:15;:25;5303:8;5287:6;:25;:::i;:::-;-1:-1:-1;5322:59:15;5342:27;;;:16;:27;;;;;;;;:38;-1:-1:-1;;;;;5342:38:15;5322:59;;:19;:59;;;;;:68;5384:6;5322:59;:68;:::i;:::-;;4908:489;;;:::o;1809:162:6:-;1932:7;;-1:-1:-1;;;;;1932:7:6;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:6;;14478:2:16;1910:56:6;;;14460:21:16;14517:2;14497:18;;;14490:30;-1:-1:-1;;;14536:18:16;;;14529:52;14598:18;;1910:56:6;14276:346:16;1910:56:6;1809:162::o;475:163:14:-;550:16;211:28;623:9;581:52;;;;;;14863:13:16;14856:21;14849:29;14831:48;;14819:2;14804:18;;14627:258;581:52:14;;;;-1:-1:-1;;581:52:14;;;;;;;;;;;;;;-1:-1:-1;;;;;581:52:14;-1:-1:-1;;;;;;581:52:14;;;;;;;;;;;475:163;-1:-1:-1;;475:163:14:o;4323:207:3:-;4442:83;4460:4;4466:15;4483:23;4508:16;4442:17;:83::i;2158:1270::-;2222:12;2242:29;2274:32;375:3;2274:11;:32::i;:::-;2242:64;;2313:34;;;;;;;;;;;;;;-1:-1:-1;;;2313:34:3;;;:6;:18;;:34;;;;:::i;:::-;2381:17;;2353:47;;2373:26;;;;;;;;:::i;:::-;2353:6;;:19;:47::i;:::-;2407:30;;;;;;;;;;;;-1:-1:-1;;;2407:30:3;;;;;;:6;;:18;:30::i;:::-;2471:13;;;;2443:43;;2463:22;;;;;;:::i;2443:43::-;2493:28;;;;;;;;;;;;-1:-1:-1;;;2493:28:3;;;;;;:6;;:18;:28::i;:::-;2546:11;;;;2527:31;;:6;;:18;:31::i;:::-;2569:9;;;;:16;:20;2565:227;;2599:26;;;;;;;;;;;;-1:-1:-1;;;2599:26:3;;;;;;:6;;:18;:26::i;:::-;2633:19;:6;:17;:19::i;:::-;2665:9;2660:98;2684:4;:9;;;:16;2680:1;:20;2660:98;;;2717:32;2736:4;:9;;;2746:1;2736:12;;;;;;;;:::i;:::-;;;;;;;2717:6;:18;;:32;;;;:::i;:::-;2702:3;;;:::i;:::-;;;2660:98;;;;2765:20;:6;:18;:20::i;:::-;2802:30;;;;:37;:41;2798:346;;2881:15;2857:4;:20;;;:39;;;;;;;;:::i;:::-;;2853:88;;2915:17;;-1:-1:-1;;;2915:17:3;;;;;;;;;;;2853:88;2948:37;;;;;;;;;;;;-1:-1:-1;;;2948:37:3;;;;;;:6;;:18;:37::i;:::-;2993:50;3021:4;:20;;;3013:29;;;;;;;;:::i;2993:50::-;3051:29;;;;;;;;;;;;-1:-1:-1;;;3051:29:3;;;;;;:6;;:18;:29::i;:::-;3106:30;;;;3088:49;;:6;;:17;:49::i;:::-;3154:14;;;;:21;:25;3150:246;;3189:31;;;;;;;;;;;;-1:-1:-1;;;3189:31:3;;;;;;:6;;:18;:31::i;:::-;3228:19;:6;:17;:19::i;:::-;3260:9;3255:107;3279:4;:14;;;:21;3275:1;:25;3255:107;;;3317:36;3335:4;:14;;;3350:1;3335:17;;;;;;;;:::i;:::-;;;;;;;3317:6;:17;;:36;;;;:::i;:::-;3302:3;;;:::i;:::-;;;3255:107;;;;3369:20;:6;:18;:20::i;:::-;3409:10;:14;;2158:1270;-1:-1:-1;;2158:1270:3:o;1158:379:0:-;1300:7;1315:17;1335:8;-1:-1:-1;;;;;1335:20:0;;1363:14;1385:4;322:1:3;1442:16:0;1466:5;1335:142;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1488:22;;1315:162;;-1:-1:-1;1315:162:0;;1488:22;;;;;1523:9;1158:379;-1:-1:-1;;;;;1158:379:0:o;1536:239:6:-;1655:10;-1:-1:-1;;;;;1649:16:6;;;1641:52;;;;-1:-1:-1;;;1641:52:6;;16376:2:16;1641:52:6;;;16358:21:16;16415:2;16395:18;;;16388:30;16454:25;16434:18;;;16427:53;16497:18;;1641:52:6;16174:347:16;1641:52:6;1700:14;:19;;-1:-1:-1;;;;;;1700:19:6;-1:-1:-1;;;;;1700:19:6;;;;;;;;;-1:-1:-1;1758:7:6;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:6;1536:239;:::o;3777:307:3:-;3943:6;3937:20;3961:1;3937:25;3933:51;;3971:13;;-1:-1:-1;;;3971:13:3;;;;;;;;;;;3933:51;3991:4;4011:12;3991:32;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;4029:13:3;;;4045:8;4029:24;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;4059:11:3;;;;:20;;;;-1:-1:-1;;3777:307:3:o;1490:173:9:-;1546:22;;:::i;:::-;1592:8;;1580:31;;1602:8;1580:11;:31::i;:::-;-1:-1:-1;1634:1:9;1621:10;;;:14;:4;1490:173;-1:-1:-1;1490:173:9:o;3021:204::-;3110:70;3128:3;998:1;3165:5;3159:19;3110:17;:70::i;:::-;3190:7;;:28;;3211:5;3190:14;:28::i;1832:202::-;1916:7;;:67;;1942:39;1916:19;:67::i;:::-;;1993:34;2004:3;2020:5;2009:17;;;;;;2623:25:16;;2611:2;2596:18;;2477:177;2009:17:9;;;;;;;;;;;;;1993:10;:34::i;3607:146::-;3674:48;3700:3;1047:1;3674:25;:48::i;:::-;3745:1;3732:3;:9;;:14;;;;;;;:::i;:::-;;;-1:-1:-1;;3607:146:9:o;4211:154::-;4279:55;4305:3;1197:1;4279:25;:55::i;:::-;4357:1;4344:3;:9;;:14;;;;;;;:::i;2828:187::-;2915:62;2933:3;948:1;2963:5;:12;2915:17;:62::i;1020:555:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;1119:13:8;1130:2;1119:8;:13;:::i;:::-;:18;1115:81;;1171:13;1182:2;1171:8;:13;:::i;:::-;1165:20;;:2;:20;:::i;:::-;1153:32;;;;:::i;:::-;;;1115:81;1251:12;;;;:23;;;1324:4;1318:11;1342:16;;;-1:-1:-1;1371:14:8;;1318:11;1417:18;;;1409:27;1452:12;;;1449:60;;;1493:1;1490;1483:12;1449:60;1529:4;1522:17;-1:-1:-1;1565:3:8;;-1:-1:-1;1020:555:8;;;;;:::o;6156:759:9:-;6299:2;6290:5;-1:-1:-1;;;;;6290:11:9;;6286:623;;6317:7;;:48;;6343:20;6353:1;6344:10;;;6343:20;;;6317:19;:48::i;6286:623::-;6395:4;6386:5;-1:-1:-1;;;;;6386:13:9;;6382:527;;6415:7;;:45;;6456:2;6442:10;6451:1;6442:10;;;;6441:17;6415:19;:45::i;:::-;-1:-1:-1;6474:7:9;;:27;;-1:-1:-1;;;;;6474:27:9;;6499:1;6474:17;:27::i;6382:527::-;6531:6;6522:5;-1:-1:-1;;;;;6522:15:9;;6518:391;;6553:7;;:45;;6594:2;6580:10;6589:1;6580:10;;;;6579:17;6553:19;:45::i;:::-;-1:-1:-1;6612:7:9;;:27;;-1:-1:-1;;;;;6612:27:9;;6637:1;6612:17;:27::i;6518:391::-;6669:10;6660:5;-1:-1:-1;;;;;6660:19:9;;6656:253;;6695:7;;:45;;6736:2;6722:10;6731:1;6722:10;;;;6721:17;6695:19;:45::i;:::-;-1:-1:-1;6754:7:9;;:27;;-1:-1:-1;;;;;6754:27:9;;6779:1;6754:17;:27::i;6656:253::-;6812:7;;:45;;6853:2;6839:10;6848:1;6839:10;;;;6838:17;6812:19;:45::i;:::-;-1:-1:-1;6871:7:9;;:27;;-1:-1:-1;;;;;6871:27:9;;6896:1;6871:17;:27::i;4539:146:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;4648:30:8;4655:3;4660:4;4666;:11;4648:6;:30::i;:::-;4641:37;4539:146;-1:-1:-1;;;4539:146:8:o;4948:699::-;-1:-1:-1;;;;;;;;;;;;;;;;;5058:7:8;;:14;5047:8;5100:7;5058:14;5106:1;5100:7;:::i;:::-;5082:25;;5128:3;:12;;;5121:3;:19;5117:77;;5156:27;5163:3;5168:14;:10;5181:1;5168:14;:::i;:::-;5156:6;:27::i;:::-;5296:3;5290:10;5417:2;5411:3;5403:6;5399:16;5395:25;5447:4;5441;5433:19;;5543:6;5537:13;5525:10;5522:29;5519:91;;;5585:10;5577:6;5570:26;5519:91;-1:-1:-1;5637:3:8;;4948:699;-1:-1:-1;;;;4948:699:8:o;6921:166:9:-;7035:7;;:45;;7076:2;7062:10;7071:1;7062:10;;;;7061:17;7035:19;:45::i;8083:795:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;8200:7:8;;:14;8189:8;8243:9;8200:14;8243:3;:9;:::i;:::-;8224:28;;8280:3;:12;;;8266:11;:26;8262:85;;;8308:28;8315:3;8320:15;:11;8334:1;8320:15;:::i;8308:28::-;8357:9;8384:1;8370:10;8377:3;8370;:10;:::i;:::-;8369:16;;;;:::i;:::-;8357:28;;8487:3;8481:10;8606:11;8598:6;8594:24;8676:4;8668;8664:9;8657:4;8651:11;8647:27;8644:37;8638:4;8631:51;;8774:6;8768:13;8755:11;8752:30;8749:93;;;8816:11;8808:6;8801:27;8749:93;-1:-1:-1;8868:3:8;;8083:795;-1:-1:-1;;;;;;8083:795:8:o;2844:1427::-;-1:-1:-1;;;;;;;;;;;;;;;;;2970:4:8;:11;2963:3;:18;;2955:27;;;;;;3004:7;;:14;2993:8;3047:9;3053:3;3004:14;3047:9;:::i;:::-;3028:28;;3084:3;:12;;;3070:11;:26;3066:85;;;3112:28;3119:3;3124:15;:11;3138:1;3124:15;:::i;3112:28::-;3284:10;;3367:13;;3480:25;;;3496:2;3480:25;;3161:9;;3579:23;;;3576:86;;;3636:11;3628:6;3621:27;3576:86;-1:-1:-1;;;3692:2:8;3682:13;;3765:165;3779:2;3772:3;:9;3765:165;;3848:10;;3835:24;;3886:10;3894:2;3842:4;3886:10;:::i;:::-;;-1:-1:-1;3910:9:8;3917:2;3910:9;;:::i;:::-;;-1:-1:-1;3783:9:8;3790:2;3783:9;;:::i;:::-;;;3765:165;;;4091:10;4150:11;;-1:-1:-1;;4017:2:8;:8;;;4009:3;:17;4008:23;4146:22;;;4103:9;;4087:26;;;;4198:21;4185:35;;-1:-1:-1;4261:3:8;;-1:-1:-1;;2844:1427:8;;;;;:::o;2004:167::-;2099:7;;2116:19;2099:3;2126:8;2116:4;:19::i;:::-;;2145;2152:3;2157:6;2145;:19::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:423:16;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;872:127::-;933:10;928:3;924:20;921:1;914:31;964:4;961:1;954:15;988:4;985:1;978:15;1004:631;1068:5;-1:-1:-1;;;;;1139:2:16;1131:6;1128:14;1125:40;;;1145:18;;:::i;:::-;1220:2;1214:9;1188:2;1274:15;;-1:-1:-1;;1270:24:16;;;1296:2;1266:33;1262:42;1250:55;;;1320:18;;;1340:22;;;1317:46;1314:72;;;1366:18;;:::i;:::-;1406:10;1402:2;1395:22;1435:6;1426:15;;1465:6;1457;1450:22;1505:3;1496:6;1491:3;1487:16;1484:25;1481:45;;;1522:1;1519;1512:12;1481:45;1572:6;1567:3;1560:4;1552:6;1548:17;1535:44;1627:1;1620:4;1611:6;1603;1599:19;1595:30;1588:41;;;;1004:631;;;;;:::o;1640:220::-;1682:5;1735:3;1728:4;1720:6;1716:17;1712:27;1702:55;;1753:1;1750;1743:12;1702:55;1775:79;1850:3;1841:6;1828:20;1821:4;1813:6;1809:17;1775:79;:::i;1865:607::-;1960:6;1968;1976;2029:2;2017:9;2008:7;2004:23;2000:32;1997:52;;;2045:1;2042;2035:12;1997:52;2081:9;2068:23;2058:33;;2142:2;2131:9;2127:18;2114:32;-1:-1:-1;;;;;2206:2:16;2198:6;2195:14;2192:34;;;2222:1;2219;2212:12;2192:34;2245:49;2286:7;2277:6;2266:9;2262:22;2245:49;:::i;:::-;2235:59;;2347:2;2336:9;2332:18;2319:32;2303:48;;2376:2;2366:8;2363:16;2360:36;;;2392:1;2389;2382:12;2360:36;;2415:51;2458:7;2447:8;2436:9;2432:24;2415:51;:::i;:::-;2405:61;;;1865:607;;;;;:::o;2659:683::-;2754:6;2762;2770;2823:2;2811:9;2802:7;2798:23;2794:32;2791:52;;;2839:1;2836;2829:12;2791:52;2875:9;2862:23;2852:33;;2936:2;2925:9;2921:18;2908:32;-1:-1:-1;;;;;3000:2:16;2992:6;2989:14;2986:34;;;3016:1;3013;3006:12;2986:34;3054:6;3043:9;3039:22;3029:32;;3099:7;3092:4;3088:2;3084:13;3080:27;3070:55;;3121:1;3118;3111:12;3070:55;3161:2;3148:16;3187:2;3179:6;3176:14;3173:34;;;3203:1;3200;3193:12;3173:34;3256:7;3251:2;3241:6;3238:1;3234:14;3230:2;3226:23;3222:32;3219:45;3216:65;;;3277:1;3274;3267:12;3216:65;3308:2;3304;3300:11;3290:21;;3330:6;3320:16;;;;;2659:683;;;;;:::o;3544:286::-;3603:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:52;;;3672:1;3669;3662:12;3624:52;3698:23;;-1:-1:-1;;;;;3750:31:16;;3740:42;;3730:70;;3796:1;3793;3786:12;4240:450;4309:6;4362:2;4350:9;4341:7;4337:23;4333:32;4330:52;;;4378:1;4375;4368:12;4330:52;4418:9;4405:23;-1:-1:-1;;;;;4443:6:16;4440:30;4437:50;;;4483:1;4480;4473:12;4437:50;4506:22;;4559:4;4551:13;;4547:27;-1:-1:-1;4537:55:16;;4588:1;4585;4578:12;4537:55;4611:73;4676:7;4671:2;4658:16;4653:2;4649;4645:11;4611:73;:::i;:::-;4601:83;4240:450;-1:-1:-1;;;;4240:450:16:o;4695:180::-;4754:6;4807:2;4795:9;4786:7;4782:23;4778:32;4775:52;;;4823:1;4820;4813:12;4775:52;-1:-1:-1;4846:23:16;;4695:180;-1:-1:-1;4695:180:16:o;6266:380::-;6345:1;6341:12;;;;6388;;;6409:61;;6463:4;6455:6;6451:17;6441:27;;6409:61;6516:2;6508:6;6505:14;6485:18;6482:38;6479:161;;6562:10;6557:3;6553:20;6550:1;6543:31;6597:4;6594:1;6587:15;6625:4;6622:1;6615:15;6479:161;;6266:380;;;:::o;6651:768::-;6852:2;6841:9;6834:21;6897:6;6891:13;6886:2;6875:9;6871:18;6864:41;6959:2;6951:6;6947:15;6941:22;6936:2;6925:9;6921:18;6914:50;7028:6;7022:2;7014:6;7010:15;7004:22;7000:35;6995:2;6984:9;6980:18;6973:63;6815:4;7083:2;7075:6;7071:15;7065:22;7106:10;7171:2;7157:12;7153:21;7147:3;7136:9;7132:19;7125:50;7241:2;7234:3;7226:6;7222:16;7216:23;7212:32;7206:3;7195:9;7191:19;7184:61;;;7294:3;7286:6;7282:16;7276:23;7337:4;7330;7319:9;7315:20;7308:34;7359:54;7408:3;7397:9;7393:19;7377:14;7359:54;:::i;7424:184::-;7494:6;7547:2;7535:9;7526:7;7522:23;7518:32;7515:52;;;7563:1;7560;7553:12;7515:52;-1:-1:-1;7586:16:16;;7424:184;-1:-1:-1;7424:184:16:o;8316:545::-;8418:2;8413:3;8410:11;8407:448;;;8454:1;8479:5;8475:2;8468:17;8524:4;8520:2;8510:19;8594:2;8582:10;8578:19;8575:1;8571:27;8565:4;8561:38;8630:4;8618:10;8615:20;8612:47;;;-1:-1:-1;8653:4:16;8612:47;8708:2;8703:3;8699:12;8696:1;8692:20;8686:4;8682:31;8672:41;;8763:82;8781:2;8774:5;8771:13;8763:82;;;8826:17;;;8807:1;8796:13;8763:82;;;8767:3;;;8316:545;;;:::o;9037:1352::-;9163:3;9157:10;-1:-1:-1;;;;;9182:6:16;9179:30;9176:56;;;9212:18;;:::i;:::-;9241:97;9331:6;9291:38;9323:4;9317:11;9291:38;:::i;:::-;9285:4;9241:97;:::i;:::-;9393:4;;9457:2;9446:14;;9474:1;9469:663;;;;10176:1;10193:6;10190:89;;;-1:-1:-1;10245:19:16;;;10239:26;10190:89;-1:-1:-1;;8994:1:16;8990:11;;;8986:24;8982:29;8972:40;9018:1;9014:11;;;8969:57;10292:81;;9439:944;;9469:663;8263:1;8256:14;;;8300:4;8287:18;;-1:-1:-1;;9505:20:16;;;9623:236;9637:7;9634:1;9631:14;9623:236;;;9726:19;;;9720:26;9705:42;;9818:27;;;;9786:1;9774:14;;;;9653:19;;9623:236;;;9627:3;9887:6;9878:7;9875:19;9872:201;;;9948:19;;;9942:26;-1:-1:-1;;10031:1:16;10027:14;;;10043:3;10023:24;10019:37;10015:42;10000:58;9985:74;;9872:201;-1:-1:-1;;;;;10119:1:16;10103:14;;;10099:22;10086:36;;-1:-1:-1;9037:1352:16:o;12836:1435::-;12955:3;12949:4;12946:13;12943:26;;12962:5;;12836:1435::o;12943:26::-;12992:37;13024:3;13018:10;12992:37;:::i;:::-;-1:-1:-1;;;;;13044:6:16;13041:30;13038:56;;;13074:18;;:::i;:::-;13103:97;13193:6;13153:38;13185:4;13179:11;13153:38;:::i;13103:97::-;13226:1;13254:2;13246:6;13243:14;13271:1;13266:748;;;;14058:1;14075:6;14072:89;;;-1:-1:-1;14127:19:16;;;14121:26;14072:89;-1:-1:-1;;8994:1:16;8990:11;;;8986:24;8982:29;8972:40;9018:1;9014:11;;;8969:57;14174:81;;13236:1029;;13266:748;8263:1;8256:14;;;8300:4;8287:18;;-1:-1:-1;;13302:20:16;;;8263:1;8256:14;;;8300:4;8287:18;;13466:9;13488:251;13502:7;13499:1;13496:14;13488:251;;;13584:21;;;13578:28;13563:44;;13634:1;13707:18;;;;13662:15;;;;13525:4;13518:12;13488:251;;;13492:3;13767:6;13758:7;13755:19;13752:203;;;13828:21;;;13822:28;-1:-1:-1;;13913:1:16;13909:14;;;13925:3;13905:24;13901:37;13897:42;13882:58;13867:74;;13752:203;;;;14001:1;13992:6;13989:1;13985:14;13981:22;13975:4;13968:36;13236:1029;;;;12836:1435;;:::o;14890:127::-;14951:10;14946:3;14942:20;14939:1;14932:31;14982:4;14979:1;14972:15;15006:4;15003:1;14996:15;15022:127;15083:10;15078:3;15074:20;15071:1;15064:31;15114:4;15111:1;15104:15;15138:4;15135:1;15128:15;15154:127;15215:10;15210:3;15206:20;15203:1;15196:31;15246:4;15243:1;15236:15;15270:4;15267:1;15260:15;15286:135;15325:3;15346:17;;;15343:43;;15366:18;;:::i;:::-;-1:-1:-1;15413:1:16;15402:13;;15286:135::o;15426:554::-;-1:-1:-1;;;;;15683:6:16;15679:31;15668:9;15661:50;15747:3;15742:2;15731:9;15727:18;15720:31;15642:4;15768:46;15809:3;15798:9;15794:19;15786:6;15768:46;:::i;:::-;15862:6;15850:19;;;;15845:2;15830:18;;15823:47;-1:-1:-1;15918:10:16;15906:23;;;;15901:2;15886:18;;15879:51;15961:3;15946:19;;;15939:35;15760:54;15426:554;-1:-1:-1;;15426:554:16:o;16526:125::-;16591:9;;;16612:10;;;16609:36;;;16625:18;;:::i;16656:128::-;16723:9;;;16744:11;;;16741:37;;;16758:18;;:::i;16789:209::-;16821:1;16847;16837:132;;16891:10;16886:3;16882:20;16879:1;16872:31;16926:4;16923:1;16916:15;16954:4;16951:1;16944:15;16837:132;-1:-1:-1;16983:9:16;;16789:209::o;17003:168::-;17076:9;;;17107;;17124:15;;;17118:22;;17104:37;17094:71;;17145:18;;:::i;17176:422::-;17265:1;17308:5;17265:1;17322:270;17343:7;17333:8;17330:21;17322:270;;;17402:4;17398:1;17394:6;17390:17;17384:4;17381:27;17378:53;;;17411:18;;:::i;:::-;17461:7;17451:8;17447:22;17444:55;;;17481:16;;;;17444:55;17560:22;;;;17520:15;;;;17322:270;;;17326:3;17176:422;;;;;:::o;17603:806::-;17652:5;17682:8;17672:80;;-1:-1:-1;17723:1:16;17737:5;;17672:80;17771:4;17761:76;;-1:-1:-1;17808:1:16;17822:5;;17761:76;17853:4;17871:1;17866:59;;;;17939:1;17934:130;;;;17846:218;;17866:59;17896:1;17887:10;;17910:5;;;17934:130;17971:3;17961:8;17958:17;17955:43;;;17978:18;;:::i;:::-;-1:-1:-1;;18034:1:16;18020:16;;18049:5;;17846:218;;18148:2;18138:8;18135:16;18129:3;18123:4;18120:13;18116:36;18110:2;18100:8;18097:16;18092:2;18086:4;18083:12;18079:35;18076:77;18073:159;;;-1:-1:-1;18185:19:16;;;18217:5;;18073:159;18264:34;18289:8;18283:4;18264:34;:::i;:::-;18334:6;18330:1;18326:6;18322:19;18313:7;18310:32;18307:58;;;18345:18;;:::i;:::-;18383:20;;17603:806;-1:-1:-1;;;17603:806:16:o;18414:131::-;18474:5;18503:36;18530:8;18524:4;18503:36;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1553200","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52388","arbitrumSepoliaVRF()":"2393","callbackGasLimit()":"2403","gasLimit()":"2379","handleOracleFulfillment(bytes32,bytes,bytes)":"infinite","keyHash()":"2385","lastRequestId()":"2405","makeRandomRequest()":"infinite","multiverseApiSources(uint256)":"infinite","numWords()":"2435","owner()":"2410","pokesource()":"infinite","rawFulfillRandomWords(uint256,uint256[])":"4847","requestConfirmations()":"2380","requestIdPending(bytes32)":"2575","requestIds(uint256)":"4643","result()":"infinite","router()":"2425","s_lastError()":"infinite","s_lastRequestId()":"2384","s_lastResponse()":"infinite","s_requests(uint256)":"2608","s_vrfCoordinator()":"2426","sendRequest(address)":"infinite","setCoordinator(address)":"29988","subscriptionId()":"2423","transferOwnership(address)":"30445","updatePokeSource(string)":"infinite","userToRequestResult(address)":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] calldata)":"infinite","fulfillRequest(bytes32,bytes memory,bytes memory)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","arbitrumSepoliaVRF()":"a321ccaa","callbackGasLimit()":"24f74697","gasLimit()":"f68016b7","handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175","keyHash()":"61728f39","lastRequestId()":"fc2a88c3","makeRandomRequest()":"1ab0f2b3","multiverseApiSources(uint256)":"cfd30a6e","numWords()":"7ccfd7fc","owner()":"8da5cb5b","pokesource()":"020dbb9b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestConfirmations()":"b0fb162f","requestIdPending(bytes32)":"8e84737f","requestIds(uint256)":"8796ba8c","result()":"65372147","router()":"f887ea40","s_lastError()":"4b0795a8","s_lastRequestId()":"b1e21749","s_lastResponse()":"3944ea3a","s_requests(uint256)":"a168fa89","s_vrfCoordinator()":"9eccacf6","sendRequest(address)":"85e1b15b","setCoordinator(address)":"8ea98117","subscriptionId()":"09c1ba2e","transferOwnership(address)":"f2fde38b","updatePokeSource(string)":"77452a2c","userToRequestResult(address)":"2e0a5890"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedRequestID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbitrumSepoliaVRF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeRandomRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"multiverseApiSources\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pokesource\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requestIdPending\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastRequestId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastResponse\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"}],\"name\":\"sendRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"updatePokeSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToRequestResult\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"UnexpectedRequestID(bytes32)\":[{\"notice\":\"ERRORS \"}]},\"events\":{\"RequestSent(uint256,uint32)\":{\"notice\":\"CHAINLINK VRF EVENTS \"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"},\"multiverseApiSources(uint256)\":{\"notice\":\"CHAINLINK FUNCTIONS VARIABLES \"},\"owner()\":{\"notice\":\"Get the current owner\"},\"s_requests(uint256)\":{\"notice\":\"CHAINLINK VRF VARIABLES \"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"subscriptionId()\":{\"notice\":\"CHAINLINK SHARED VARIABLES \"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkMultiverse.sol\":\"EnterTheChainlinkMultiverse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {IFunctionsRouter} from \\\"./interfaces/IFunctionsRouter.sol\\\";\\nimport {IFunctionsClient} from \\\"./interfaces/IFunctionsClient.sol\\\";\\n\\nimport {FunctionsRequest} from \\\"./libraries/FunctionsRequest.sol\\\";\\n\\n/// @title The Chainlink Functions client contract\\n/// @notice Contract developers can inherit this contract in order to make Chainlink Functions requests\\nabstract contract FunctionsClient is IFunctionsClient {\\n  using FunctionsRequest for FunctionsRequest.Request;\\n\\n  IFunctionsRouter internal immutable i_router;\\n\\n  event RequestSent(bytes32 indexed id);\\n  event RequestFulfilled(bytes32 indexed id);\\n\\n  error OnlyRouterCanFulfill();\\n\\n  constructor(address router) {\\n    i_router = IFunctionsRouter(router);\\n  }\\n\\n  /// @notice Sends a Chainlink Functions request\\n  /// @param data The CBOR encoded bytes data for a Functions request\\n  /// @param subscriptionId The subscription ID that will be charged to service the request\\n  /// @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\\n  /// @return requestId The generated request ID for this request\\n  function _sendRequest(\\n    bytes memory data,\\n    uint64 subscriptionId,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) internal returns (bytes32) {\\n    bytes32 requestId = i_router.sendRequest(\\n      subscriptionId,\\n      data,\\n      FunctionsRequest.REQUEST_DATA_VERSION,\\n      callbackGasLimit,\\n      donId\\n    );\\n    emit RequestSent(requestId);\\n    return requestId;\\n  }\\n\\n  /// @notice User defined function to handle a response from the DON\\n  /// @param requestId The request ID, returned by sendRequest()\\n  /// @param response Aggregated response from the execution of the user's source code\\n  /// @param err Aggregated error from the execution of the user code or from the execution pipeline\\n  /// @dev Either response or error parameter will be set, but never both\\n  function fulfillRequest(bytes32 requestId, bytes memory response, bytes memory err) internal virtual;\\n\\n  /// @inheritdoc IFunctionsClient\\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external override {\\n    if (msg.sender != address(i_router)) {\\n      revert OnlyRouterCanFulfill();\\n    }\\n    fulfillRequest(requestId, response, err);\\n    emit RequestFulfilled(requestId);\\n  }\\n}\\n\",\"keccak256\":\"0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Chainlink Functions client interface.\\ninterface IFunctionsClient {\\n  /// @notice Chainlink Functions response handler called by the Functions Router\\n  /// during fullilment from the designated transmitter node in an OCR round.\\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\\n  /// @param response Aggregated response from the request's source code.\\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\\n  /// @dev Either response or error parameter will be set, but never both.\\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\\n}\\n\",\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {FunctionsResponse} from \\\"../libraries/FunctionsResponse.sol\\\";\\n\\n/// @title Chainlink Functions Router interface.\\ninterface IFunctionsRouter {\\n  /// @notice The identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  /// @return id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\\n  function getAllowListId() external view returns (bytes32);\\n\\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\\n  /// The access control contract controls which accounts can manage subscriptions\\n  function setAllowListId(bytes32 allowListId) external;\\n\\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\\n  /// @return adminFee\\n  function getAdminFee() external view returns (uint72 adminFee);\\n\\n  /// @notice Sends a request using the provided subscriptionId\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequest(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Sends a request to the proposed contracts\\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\\n  /// a client can make requests from different contracts referencing the same subscription\\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\\n  /// @param dataVersion - Gas limit for the fulfillment callback\\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\\n  /// @param donId - An identifier used to determine which route to send the request along\\n  /// @return requestId - A unique request identifier\\n  function sendRequestToProposed(\\n    uint64 subscriptionId,\\n    bytes calldata data,\\n    uint16 dataVersion,\\n    uint32 callbackGasLimit,\\n    bytes32 donId\\n  ) external returns (bytes32);\\n\\n  /// @notice Fulfill the request by:\\n  /// - calling back the data that the Oracle returned to the client contract\\n  /// - pay the DON for processing the request\\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\\n  /// @param response response data from DON consensus\\n  /// @param err error from DON consensus\\n  /// @param juelsPerGas - current rate of juels/gas\\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\\n  /// @param transmitter - The Node that transmitted the OCR report\\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\\n  /// @return fulfillResult -\\n  /// @return callbackGasCostJuels -\\n  function fulfill(\\n    bytes memory response,\\n    bytes memory err,\\n    uint96 juelsPerGas,\\n    uint96 costWithoutFulfillment,\\n    address transmitter,\\n    FunctionsResponse.Commitment memory commitment\\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\\n\\n  /// @notice Validate requested gas limit is below the subscription max.\\n  /// @param subscriptionId subscription ID\\n  /// @param callbackGasLimit desired callback gas limit\\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\\n\\n  /// @notice Get the current contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current contract address\\n  function getContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Get the proposed next contract given an ID\\n  /// @param id A bytes32 identifier for the route\\n  /// @return contract The current or proposed contract address\\n  function getProposedContractById(bytes32 id) external view returns (address);\\n\\n  /// @notice Return the latest proprosal set\\n  /// @return ids The identifiers of the contracts to update\\n  /// @return to The addresses of the contracts that will be updated to\\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\\n\\n  /// @notice Proposes one or more updates to the contract routes\\n  /// @dev Only callable by owner\\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\\n\\n  /// @notice Updates the current contract routes to the proposed contracts\\n  /// @dev Only callable by owner\\n  function updateContracts() external;\\n\\n  /// @dev Puts the system into an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function pause() external;\\n\\n  /// @dev Takes the system out of an emergency stopped state.\\n  /// @dev Only callable by owner\\n  function unpause() external;\\n}\\n\",\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport {CBOR} from \\\"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\\\";\\n\\n/// @title Library for encoding the input data of a Functions request into CBOR\\nlibrary FunctionsRequest {\\n  using CBOR for CBOR.CBORBuffer;\\n\\n  uint16 public constant REQUEST_DATA_VERSION = 1;\\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\\n\\n  enum Location {\\n    Inline, // Provided within the Request\\n    Remote, // Hosted through remote location that can be accessed through a provided URL\\n    DONHosted // Hosted on the DON's storage\\n  }\\n\\n  enum CodeLanguage {\\n    JavaScript\\n    // In future version we may add other languages\\n  }\\n\\n  struct Request {\\n    Location codeLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of the source code that will be executed on each node in the DON\\n    Location secretsLocation; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The location of secrets that will be passed into the source code. *Only Remote secrets are supported\\n    CodeLanguage language; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 The coding language that the source code is written in\\n    string source; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\\n    bytes encryptedSecretsReference; // \\u2550\\u2550\\u2578 Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\\n    string[] args; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 String arguments that will be passed into the source code\\n    bytes[] bytesArgs; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Bytes arguments that will be passed into the source code\\n  }\\n\\n  error EmptySource();\\n  error EmptySecrets();\\n  error EmptyArgs();\\n  error NoInlineSecrets();\\n\\n  /// @notice Encodes a Request to CBOR encoded bytes\\n  /// @param self The request to encode\\n  /// @return CBOR encoded bytes\\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"codeLocation\\\");\\n    buffer.writeUInt256(uint256(self.codeLocation));\\n\\n    buffer.writeString(\\\"language\\\");\\n    buffer.writeUInt256(uint256(self.language));\\n\\n    buffer.writeString(\\\"source\\\");\\n    buffer.writeString(self.source);\\n\\n    if (self.args.length > 0) {\\n      buffer.writeString(\\\"args\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.args.length; ++i) {\\n        buffer.writeString(self.args[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    if (self.encryptedSecretsReference.length > 0) {\\n      if (self.secretsLocation == Location.Inline) {\\n        revert NoInlineSecrets();\\n      }\\n      buffer.writeString(\\\"secretsLocation\\\");\\n      buffer.writeUInt256(uint256(self.secretsLocation));\\n      buffer.writeString(\\\"secrets\\\");\\n      buffer.writeBytes(self.encryptedSecretsReference);\\n    }\\n\\n    if (self.bytesArgs.length > 0) {\\n      buffer.writeString(\\\"bytesArgs\\\");\\n      buffer.startArray();\\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\\n        buffer.writeBytes(self.bytesArgs[i]);\\n      }\\n      buffer.endSequence();\\n    }\\n\\n    return buffer.buf.buf;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Sets the codeLocation and code on the request\\n  /// @param self The uninitialized request\\n  /// @param codeLocation The user provided source code location\\n  /// @param language The programming language of the user code\\n  /// @param source The user provided source code or a url\\n  function initializeRequest(\\n    Request memory self,\\n    Location codeLocation,\\n    CodeLanguage language,\\n    string memory source\\n  ) internal pure {\\n    if (bytes(source).length == 0) revert EmptySource();\\n\\n    self.codeLocation = codeLocation;\\n    self.language = language;\\n    self.source = source;\\n  }\\n\\n  /// @notice Initializes a Chainlink Functions Request\\n  /// @dev Simplified version of initializeRequest for PoC\\n  /// @param self The uninitialized request\\n  /// @param javaScriptSource The user provided JS code (must not be empty)\\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\\n  }\\n\\n  /// @notice Adds Remote user encrypted secrets to a Request\\n  /// @param self The initialized request\\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\\n\\n    self.secretsLocation = Location.Remote;\\n    self.encryptedSecretsReference = encryptedSecretsReference;\\n  }\\n\\n  /// @notice Adds DON-hosted secrets reference to a Request\\n  /// @param self The initialized request\\n  /// @param slotID Slot ID of the user's secrets hosted on DON\\n  /// @param version User data version (for the slotID)\\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\\n\\n    buffer.writeString(\\\"slotID\\\");\\n    buffer.writeUInt64(slotID);\\n    buffer.writeString(\\\"version\\\");\\n    buffer.writeUInt64(version);\\n\\n    self.secretsLocation = Location.DONHosted;\\n    self.encryptedSecretsReference = buffer.buf.buf;\\n  }\\n\\n  /// @notice Sets args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of string args (must not be empty)\\n  function setArgs(Request memory self, string[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.args = args;\\n  }\\n\\n  /// @notice Sets bytes args for the user run function\\n  /// @param self The initialized request\\n  /// @param args The array of bytes args (must not be empty)\\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\\n    if (args.length == 0) revert EmptyArgs();\\n\\n    self.bytesArgs = args;\\n  }\\n}\\n\",\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title Library of types that are used for fulfillment of a Functions request\\nlibrary FunctionsResponse {\\n  // Used to send request information from the Router to the Coordinator\\n  struct RequestMeta {\\n    bytes data; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\\n    bytes32 flags; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 Per-subscription flags\\n    address requestingContract; // \\u2550\\u2550\\u2557 The client contract that is sending the request\\n    uint96 availableBalance; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u255d Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint64 subscriptionId; //        \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint64 initiatedRequests; //     \\u2551 The number of requests that have been started\\n    uint32 callbackGasLimit; //      \\u2551 The amount of gas that the callback to the consuming contract will be given\\n    uint16 dataVersion; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The version of the structure of the CBOR encoded request data\\n    uint64 completedRequests; // \\u2550\\u2550\\u2550\\u2550\\u2557 The number of requests that have successfully completed or timed out\\n    address subscriptionOwner; // \\u2550\\u2550\\u2550\\u255d The owner of the billing subscription\\n  }\\n\\n  enum FulfillResult {\\n    FULFILLED, // 0\\n    USER_CALLBACK_ERROR, // 1\\n    INVALID_REQUEST_ID, // 2\\n    COST_EXCEEDS_COMMITMENT, // 3\\n    INSUFFICIENT_GAS_PROVIDED, // 4\\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\\n    INVALID_COMMITMENT // 6\\n  }\\n\\n  struct Commitment {\\n    bytes32 requestId; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2578 A unique identifier for a Chainlink Functions request\\n    address coordinator; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The Coordinator contract that manages the DON that is servicing a request\\n    uint96 estimatedTotalCostJuels; // \\u2550\\u2550\\u2550\\u2550\\u255d The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\\n    address client; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 The client contract that sent the request\\n    uint64 subscriptionId; //              \\u2551 Identifier of the billing subscription that will be charged for the request\\n    uint32 callbackGasLimit; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The amount of gas that the callback to the consuming contract will be given\\n    uint72 adminFee; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557 Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\\n    uint72 donFee; //                      \\u2551 Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\\n    uint40 gasOverheadBeforeCallback; //   \\u2551 Represents the average gas execution cost before the fulfillment callback.\\n    uint40 gasOverheadAfterCallback; //    \\u2551 Represents the average gas execution cost after the fulfillment callback.\\n    uint32 timeoutTimestamp; // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d The timestamp at which a request will be eligible to be timed out\\n  }\\n}\\n\",\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-2-Clause\\npragma solidity ^0.8.4;\\n\\n/**\\n* @dev A library for working with mutable byte buffers in Solidity.\\n*\\n* Byte buffers are mutable and expandable, and provide a variety of primitives\\n* for appending to them. At any time you can fetch a bytes object containing the\\n* current contents of the buffer. The bytes object should not be stored between\\n* operations, as it may change due to resizing of the buffer.\\n*/\\nlibrary Buffer {\\n    /**\\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n    *      a capacity. The capacity may be longer than the current value, in\\n    *      which case it can be extended without the need to allocate more memory.\\n    */\\n    struct buffer {\\n        bytes buf;\\n        uint capacity;\\n    }\\n\\n    /**\\n    * @dev Initializes a buffer with an initial capacity.\\n    * @param buf The buffer to initialize.\\n    * @param capacity The number of bytes of space to allocate the buffer.\\n    * @return The buffer, for chaining.\\n    */\\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\\n        if (capacity % 32 != 0) {\\n            capacity += 32 - (capacity % 32);\\n        }\\n        // Allocate space for the buffer data\\n        buf.capacity = capacity;\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(buf, ptr)\\n            mstore(ptr, 0)\\n            let fpm := add(32, add(ptr, capacity))\\n            if lt(fpm, ptr) {\\n                revert(0, 0)\\n            }\\n            mstore(0x40, fpm)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Initializes a new buffer from an existing bytes object.\\n    *      Changes to the buffer may mutate the original value.\\n    * @param b The bytes object to initialize the buffer with.\\n    * @return A new buffer.\\n    */\\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\\n        buffer memory buf;\\n        buf.buf = b;\\n        buf.capacity = b.length;\\n        return buf;\\n    }\\n\\n    function resize(buffer memory buf, uint capacity) private pure {\\n        bytes memory oldbuf = buf.buf;\\n        init(buf, capacity);\\n        append(buf, oldbuf);\\n    }\\n\\n    /**\\n    * @dev Sets buffer length to 0.\\n    * @param buf The buffer to truncate.\\n    * @return The original buffer, for chaining..\\n    */\\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n        assembly {\\n            let bufptr := mload(buf)\\n            mstore(bufptr, 0)\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to copy.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\\n        require(len <= data.length);\\n\\n        uint off = buf.buf.length;\\n        uint newCapacity = off + len;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint dest;\\n        uint src;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Length of existing buffer data\\n            let buflen := mload(bufptr)\\n            // Start address = buffer address + offset + sizeof(buffer length)\\n            dest := add(add(bufptr, 32), off)\\n            // Update buffer length if we're extending it\\n            if gt(newCapacity, buflen) {\\n                mstore(bufptr, newCapacity)\\n            }\\n            src := add(data, 32)\\n        }\\n\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        unchecked {\\n            uint mask = (256 ** (32 - len)) - 1;\\n            assembly {\\n                let srcpart := and(mload(src), not(mask))\\n                let destpart := and(mload(dest), mask)\\n                mstore(dest, or(destpart, srcpart))\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n        return append(buf, data, data.length);\\n    }\\n\\n    /**\\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n    *      capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint offPlusOne = off + 1;\\n        if (off >= buf.capacity) {\\n            resize(buf, offPlusOne * 2);\\n        }\\n\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + off\\n            let dest := add(add(bufptr, off), 32)\\n            mstore8(dest, data)\\n            // Update buffer length if we extended it\\n            if gt(offPlusOne, mload(bufptr)) {\\n                mstore(bufptr, offPlusOne)\\n            }\\n        }\\n\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\\n    *      exceed the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @param len The number of bytes to write (left-aligned).\\n    * @return The original buffer, for chaining.\\n    */\\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        unchecked {\\n            uint mask = (256 ** len) - 1;\\n            // Right-align data\\n            data = data >> (8 * (32 - len));\\n            assembly {\\n                // Memory address of the buffer data\\n                let bufptr := mload(buf)\\n                // Address = buffer address + sizeof(buffer length) + newCapacity\\n                let dest := add(bufptr, newCapacity)\\n                mstore(dest, or(and(mload(dest), not(mask)), data))\\n                // Update buffer length if we extended it\\n                if gt(newCapacity, mload(bufptr)) {\\n                    mstore(bufptr, newCapacity)\\n                }\\n            }\\n        }\\n        return buf;\\n    }\\n\\n    /**\\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chhaining.\\n    */\\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n        return append(buf, bytes32(data), 20);\\n    }\\n\\n    /**\\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n    *      the capacity of the buffer.\\n    * @param buf The buffer to append to.\\n    * @param data The data to append.\\n    * @return The original buffer, for chaining.\\n    */\\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n        return append(buf, data, 32);\\n    }\\n\\n    /**\\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n     *      exceed the capacity of the buffer.\\n     * @param buf The buffer to append to.\\n     * @param data The data to append.\\n     * @param len The number of bytes to write (right-aligned).\\n     * @return The original buffer.\\n     */\\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\\n        uint off = buf.buf.length;\\n        uint newCapacity = len + off;\\n        if (newCapacity > buf.capacity) {\\n            resize(buf, newCapacity * 2);\\n        }\\n\\n        uint mask = (256 ** len) - 1;\\n        assembly {\\n            // Memory address of the buffer data\\n            let bufptr := mload(buf)\\n            // Address = buffer address + sizeof(buffer length) + newCapacity\\n            let dest := add(bufptr, newCapacity)\\n            mstore(dest, or(and(mload(dest), not(mask)), data))\\n            // Update buffer length if we extended it\\n            if gt(newCapacity, mload(bufptr)) {\\n                mstore(bufptr, newCapacity)\\n            }\\n        }\\n        return buf;\\n    }\\n}\",\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\"},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../../@ensdomains/buffer/v0.1.0/Buffer.sol\\\";\\n\\n/**\\n* @dev A library for populating CBOR encoded payload in Solidity.\\n*\\n* https://datatracker.ietf.org/doc/html/rfc7049\\n*\\n* The library offers various write* and start* methods to encode values of different types.\\n* The resulted buffer can be obtained with data() method.\\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\\n* in an invalid CBOR if start/write/end flow is violated.\\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\\n* except for nested start/end pairs.\\n*/\\n\\nlibrary CBOR {\\n    using Buffer for Buffer.buffer;\\n\\n    struct CBORBuffer {\\n        Buffer.buffer buf;\\n        uint256 depth;\\n    }\\n\\n    uint8 private constant MAJOR_TYPE_INT = 0;\\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\\n    uint8 private constant MAJOR_TYPE_STRING = 3;\\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n    uint8 private constant MAJOR_TYPE_MAP = 5;\\n    uint8 private constant MAJOR_TYPE_TAG = 6;\\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n    uint8 private constant CBOR_FALSE = 20;\\n    uint8 private constant CBOR_TRUE = 21;\\n    uint8 private constant CBOR_NULL = 22;\\n    uint8 private constant CBOR_UNDEFINED = 23;\\n\\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\\n        Buffer.init(cbor.buf, capacity);\\n        cbor.depth = 0;\\n        return cbor;\\n    }\\n\\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\\n        require(buf.depth == 0, \\\"Invalid CBOR\\\");\\n        return buf.buf.buf;\\n    }\\n\\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n        writeBytes(buf, abi.encode(value));\\n    }\\n\\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\\n        if (value < 0) {\\n            buf.buf.appendUint8(\\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\\n            );\\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\\n        } else {\\n            writeUInt256(buf, uint256(value));\\n        }\\n    }\\n\\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\\n    }\\n\\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\\n        if(value >= 0) {\\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n        } else{\\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\\n        }\\n    }\\n\\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n        buf.buf.append(value);\\n    }\\n\\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n        buf.buf.append(bytes(value));\\n    }\\n\\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\\n    }\\n\\n    function writeNull(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_NULL);\\n    }\\n\\n    function writeUndefined(CBORBuffer memory buf) internal pure {\\n        writeContentFree(buf, CBOR_UNDEFINED);\\n    }\\n\\n    function startArray(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\\n    }\\n\\n    function startMap(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n        buf.depth += 1;\\n    }\\n\\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\\n    }\\n\\n    function endSequence(CBORBuffer memory buf) internal pure {\\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n        buf.depth -= 1;\\n    }\\n\\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\\n        writeString(buf, key);\\n        writeString(buf, value);\\n    }\\n\\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\\n        writeString(buf, key);\\n        writeBytes(buf, value);\\n    }\\n\\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt256(buf, value);\\n    }\\n\\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\\n        writeString(buf, key);\\n        writeInt256(buf, value);\\n    }\\n\\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\\n        writeString(buf, key);\\n        writeUInt64(buf, value);\\n    }\\n\\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\\n        writeString(buf, key);\\n        writeInt64(buf, value);\\n    }\\n\\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\\n        writeString(buf, key);\\n        writeBool(buf, value);\\n    }\\n\\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeNull(buf);\\n    }\\n\\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        writeUndefined(buf);\\n    }\\n\\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startMap(buf);\\n    }\\n\\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\\n        writeString(buf, key);\\n        startArray(buf);\\n    }\\n\\n    function writeFixedNumeric(\\n        CBORBuffer memory buf,\\n        uint8 major,\\n        uint64 value\\n    ) private pure {\\n        if (value <= 23) {\\n            buf.buf.appendUint8(uint8((major << 5) | value));\\n        } else if (value <= 0xFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 24));\\n            buf.buf.appendInt(value, 1);\\n        } else if (value <= 0xFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 25));\\n            buf.buf.appendInt(value, 2);\\n        } else if (value <= 0xFFFFFFFF) {\\n            buf.buf.appendUint8(uint8((major << 5) | 26));\\n            buf.buf.appendInt(value, 4);\\n        } else {\\n            buf.buf.appendUint8(uint8((major << 5) | 27));\\n            buf.buf.appendInt(value, 8);\\n        }\\n    }\\n\\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\\n        private\\n        pure\\n    {\\n        buf.buf.appendUint8(uint8((major << 5) | 31));\\n    }\\n\\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\\n        private\\n        pure\\n    {\\n        writeFixedNumeric(buf, major, length);\\n    }\\n\\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\\n    }\\n}\",\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"},\"contracts/ChainlinkMultiverse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport {FunctionsClient} from \\\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\\\";\\nimport {ConfirmedOwner} from \\\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\\\";\\nimport {FunctionsRequest} from \\\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\\\";\\n\\nimport {VRFConsumerBaseV2Plus} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\\\";\\n\\ncontract EnterTheChainlinkMultiverse is FunctionsClient, VRFConsumerBaseV2Plus {\\n    using FunctionsRequest for FunctionsRequest.Request;\\n\\n    struct RequestStatus {\\n        bool fulfilled;\\n        bool exists;\\n        uint256[] randomWords;\\n    }\\n\\n    struct MultiverseFunctionRequest {\\n        address userWallet;\\n        bool isPending;\\n    }\\n\\n    /** CHAINLINK SHARED VARIABLES */\\n\\n    uint64 public subscriptionId = 67;\\n\\n    /** CHAINLINK FUNCTIONS VARIABLES */\\n\\n    string[] public multiverseApiSources;\\n\\n    mapping(bytes32 => MultiverseFunctionRequest) public requestIdPending;\\n\\n    mapping(address => string) public userToRequestResult;\\n\\n    // Arbitrum sepolia router: 0x234a5fb5Bd614a7AA2FfAB244D603abFA0Ac5C5C\\n    address public router = 0x234a5fb5Bd614a7AA2FfAB244D603abFA0Ac5C5C;\\n\\n    // Arbitrum Sepolia DON id : 0x66756e2d617262697472756d2d7365706f6c69612d3100000000000000000000\\n    bytes32 donId =\\n        0x66756e2d617262697472756d2d7365706f6c69612d3100000000000000000000;\\n\\n    uint32 public gasLimit = 300000;\\n\\n    bytes32 public s_lastRequestId;\\n\\n    bytes public s_lastResponse;\\n\\n    bytes public s_lastError;\\n\\n    string public result;\\n\\n    /** CHAINLINK VRF VARIABLES */\\n\\n    mapping(uint256 => RequestStatus) public s_requests;\\n\\n    bytes32 public keyHash =\\n        0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\\n\\n    uint16 public requestConfirmations = 1;\\n\\n    uint32 public numWords = 1;\\n\\n    uint256[] public requestIds;\\n\\n    uint256 public lastRequestId;\\n\\n    uint32 public callbackGasLimit = 100000;\\n\\n    address public arbitrumSepoliaVRF =\\n        0x50d47e4142598E3411aA864e08a44284e471AC6f;\\n\\n    /** CHAINLINK FUNCTIONS EVENTS */\\n\\n    /** CHAINLINK VRF EVENTS */\\n\\n    event RequestSent(uint256 requestId, uint32 numWords);\\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords);\\n\\n    /** ERRORS */\\n\\n    error UnexpectedRequestID(bytes32 requestId);\\n\\n    string public pokesource =\\n        \\\"const pokiURL = `https://pokeapi.co/api/v2/pokemon`;const hpURL = `https://wizard-world-api.herokuapp.com/Houses`;const pokemonCharacter = 1;console.log(`Sending HTTP request to ${pokiURL}/${pokemonCharacter}/`);const pokiRequest = Functions.makeHttpRequest({url: `${pokiURL}/${pokemonCharacter}`,method: `GET`,});const hpRequest = Functions.makeHttpRequest({url: hpURL,method: `GET`,});const pokiResponse = await pokiRequest;const hpResponse = await hpRequest;const reqData = pokiResponse.data;const hpData = hpResponse.data;const myData = {pokemonType: reqData.types[0].type.name,pokemonName: reqData.species.name,pokemonImage: reqData.sprites.other.home.front_default,};return Functions.encodeString(JSON.stringify(myData));\\\";\\n\\n    constructor()\\n        FunctionsClient(router)\\n        VRFConsumerBaseV2Plus(arbitrumSepoliaVRF)\\n    {}\\n\\n    function updatePokeSource(string memory s) public onlyOwner {\\n        pokesource = s;\\n    }\\n\\n    function makeRandomRequest() public onlyOwner returns (uint256 requestId) {\\n        requestId = s_vrfCoordinator.requestRandomWords(\\n            VRFV2PlusClient.RandomWordsRequest({\\n                keyHash: keyHash,\\n                subId: subscriptionId,\\n                requestConfirmations: requestConfirmations,\\n                callbackGasLimit: callbackGasLimit,\\n                numWords: numWords,\\n                extraArgs: VRFV2PlusClient._argsToBytes(\\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: false})\\n                )\\n            })\\n        );\\n        s_requests[requestId] = RequestStatus({\\n            randomWords: new uint256[](0),\\n            exists: true,\\n            fulfilled: false\\n        });\\n        requestIds.push(requestId);\\n        lastRequestId = requestId;\\n        emit RequestSent(requestId, numWords);\\n        return requestId;\\n    }\\n\\n    function sendRequest(\\n        address userWallet\\n    ) external onlyOwner returns (bytes32 requestId) {\\n        FunctionsRequest.Request memory req;\\n        req.initializeRequestForInlineJavaScript(pokesource);\\n\\n        s_lastRequestId = _sendRequest(\\n            req.encodeCBOR(),\\n            subscriptionId,\\n            gasLimit,\\n            donId\\n        );\\n        requestIdPending[s_lastRequestId] = MultiverseFunctionRequest({\\n            userWallet: userWallet,\\n            isPending: true\\n        });\\n        return s_lastRequestId;\\n    }\\n\\n    function fulfillRequest(\\n        bytes32 requestId,\\n        bytes memory response,\\n        bytes memory err\\n    ) internal override {\\n        require(\\n            requestIdPending[requestId].isPending == true,\\n            \\\"Invalid request id\\\"\\n        );\\n        s_lastError = err;\\n        requestIdPending[requestId].isPending = false;\\n        s_lastResponse = response;\\n        result = string(response);\\n        userToRequestResult[requestIdPending[requestId].userWallet] = result;\\n    }\\n\\n    function fulfillRandomWords(\\n        uint256 requestId,\\n        uint256[] calldata randomWords\\n    ) internal override {}\\n}\\n\",\"keccak256\":\"0x4967d6aa59e44a7c1ad5ed320ed29dc4eff25ab4ea565ac01ef44b575d75366e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":816,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":818,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2299,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2448"},{"astId":2630,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"subscriptionId","offset":20,"slot":"2","type":"t_uint64"},{"astId":2634,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"multiverseApiSources","offset":0,"slot":"3","type":"t_array(t_string_storage)dyn_storage"},{"astId":2639,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"requestIdPending","offset":0,"slot":"4","type":"t_mapping(t_bytes32,t_struct(MultiverseFunctionRequest)2626_storage)"},{"astId":2643,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"userToRequestResult","offset":0,"slot":"5","type":"t_mapping(t_address,t_string_storage)"},{"astId":2646,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"router","offset":0,"slot":"6","type":"t_address"},{"astId":2649,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"donId","offset":0,"slot":"7","type":"t_bytes32"},{"astId":2652,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"gasLimit","offset":0,"slot":"8","type":"t_uint32"},{"astId":2654,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_lastRequestId","offset":0,"slot":"9","type":"t_bytes32"},{"astId":2656,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_lastResponse","offset":0,"slot":"10","type":"t_bytes_storage"},{"astId":2658,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_lastError","offset":0,"slot":"11","type":"t_bytes_storage"},{"astId":2660,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"result","offset":0,"slot":"12","type":"t_string_storage"},{"astId":2666,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"s_requests","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(RequestStatus)2621_storage)"},{"astId":2669,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"keyHash","offset":0,"slot":"14","type":"t_bytes32"},{"astId":2672,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"requestConfirmations","offset":0,"slot":"15","type":"t_uint16"},{"astId":2675,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"numWords","offset":2,"slot":"15","type":"t_uint32"},{"astId":2678,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"requestIds","offset":0,"slot":"16","type":"t_array(t_uint256)dyn_storage"},{"astId":2680,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"lastRequestId","offset":0,"slot":"17","type":"t_uint256"},{"astId":2683,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"callbackGasLimit","offset":0,"slot":"18","type":"t_uint32"},{"astId":2686,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"arbitrumSepoliaVRF","offset":4,"slot":"18","type":"t_address"},{"astId":2708,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"pokesource","offset":0,"slot":"19","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(IVRFCoordinatorV2Plus)2448":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"},"t_mapping(t_address,t_string_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_bytes32,t_struct(MultiverseFunctionRequest)2626_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest)","numberOfBytes":"32","value":"t_struct(MultiverseFunctionRequest)2626_storage"},"t_mapping(t_uint256,t_struct(RequestStatus)2621_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct EnterTheChainlinkMultiverse.RequestStatus)","numberOfBytes":"32","value":"t_struct(RequestStatus)2621_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(MultiverseFunctionRequest)2626_storage":{"encoding":"inplace","label":"struct EnterTheChainlinkMultiverse.MultiverseFunctionRequest","members":[{"astId":2623,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"userWallet","offset":0,"slot":"0","type":"t_address"},{"astId":2625,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"isPending","offset":20,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_struct(RequestStatus)2621_storage":{"encoding":"inplace","label":"struct EnterTheChainlinkMultiverse.RequestStatus","members":[{"astId":2615,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"fulfilled","offset":0,"slot":"0","type":"t_bool"},{"astId":2617,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"exists","offset":1,"slot":"0","type":"t_bool"},{"astId":2620,"contract":"contracts/ChainlinkMultiverse.sol:EnterTheChainlinkMultiverse","label":"randomWords","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"errors":{"UnexpectedRequestID(bytes32)":[{"notice":"ERRORS "}]},"events":{"RequestSent(uint256,uint32)":{"notice":"CHAINLINK VRF EVENTS "}},"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"handleOracleFulfillment(bytes32,bytes,bytes)":{"notice":"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round."},"multiverseApiSources(uint256)":{"notice":"CHAINLINK FUNCTIONS VARIABLES "},"owner()":{"notice":"Get the current owner"},"s_requests(uint256)":{"notice":"CHAINLINK VRF VARIABLES "},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"subscriptionId()":{"notice":"CHAINLINK SHARED VARIABLES "},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}}}}}